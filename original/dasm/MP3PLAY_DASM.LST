CODE:00401000 ;
CODE:00401000 ; +-------------------------------------------------------------------------+
CODE:00401000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
CODE:00401000 ; |           Copyright (c) 2013 Hex-Rays, <support@hex-rays.com>           |
CODE:00401000 ; |                            Freeware version                             |
CODE:00401000 ; +-------------------------------------------------------------------------+
CODE:00401000 ;
CODE:00401000 ;	Input MD5   : D5F7382CC177816C59CD2D22841C8A65
CODE:00401000 ;	Input CRC32 : 4FF93E3F
CODE:00401000
CODE:00401000 ;	File Name   : C:\Users\Erdoðan\Desktop\MP3PLAY.EXE
CODE:00401000 ;	Format	    : Portable executable for 80386 (PE)
CODE:00401000 ;	Imagebase   : 400000
CODE:00401000 ;	Section	1. (virtual address 00001000)
CODE:00401000 ;	Virtual	size		      :	00008000 (  32768.)
CODE:00401000 ;	Section	size in	file	      :	00007400 (  29696.)
CODE:00401000 ;	Offset to raw data for section:	00000600
CODE:00401000 ;	Flags 60000020:	Text Executable	Readable
CODE:00401000 ;	Alignment     :	default
CODE:00401000
CODE:00401000		      Ideal
CODE:00401000		      p686
CODE:00401000		      pmmx
CODE:00401000		      model flat
CODE:00401000
CODE:00401000 ;	===========================================================================
CODE:00401000
CODE:00401000 ;	Segment	type: Pure code
CODE:00401000 ;	Segment	permissions: Read/Execute
CODE:00401000 segment	      CODE para	public 'CODE' use32
CODE:00401000		      assume cs:CODE
CODE:00401000		      ;org 401000h
CODE:00401000		      assume es:nothing, ss:nothing, ds:CODE, fs:nothing, gs:nothing
CODE:00401000
CODE:00401000 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401000
CODE:00401000
CODE:00401000 proc	      detect_cpu_386_and_up near ; ...
CODE:00401000		      mov     [ds:detected_cpu], 3
CODE:00401007		      mov     ebx, esp
CODE:00401009		      and     esp, not 3
CODE:0040100C		      pushf
CODE:0040100D		      pop     eax
CODE:0040100E		      mov     ecx, eax
CODE:00401010		      xor     eax, 40000h
CODE:00401015		      push    eax
CODE:00401016		      popf
CODE:00401017		      pushf
CODE:00401018		      pop     eax
CODE:00401019		      xor     eax, ecx
CODE:0040101B		      push    ecx
CODE:0040101C		      popf
CODE:0040101D		      mov     esp, ebx
CODE:0040101F		      test    eax, 40000h
CODE:00401024		      jz      short @@no_id
CODE:00401026		      inc     [ds:detected_cpu]
CODE:0040102C		      call    _@@get_id_flag
CODE:00401031		      jnz     short @@yep_id
CODE:00401033		      call    _@@get_id_flag
CODE:00401038		      jz      short @@no_id
CODE:0040103A
CODE:0040103A @@yep_id:				      ;	...
CODE:0040103A		      mov     eax, 1
CODE:0040103F		      cpuid
CODE:00401041		      and     ah, 0Fh
CODE:00401044		      mov     [ds:detected_cpu], ah
CODE:0040104A		      mov     [ds:cpuid_exists], 1
CODE:00401051		      mov     [ds:cpuid_flags],	edx
CODE:00401057
CODE:00401057 @@no_id:				      ;	...
CODE:00401057		      retn
CODE:00401057 endp	      detect_cpu_386_and_up
CODE:00401057
CODE:00401058
CODE:00401058 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401058
CODE:00401058
CODE:00401058 proc	      _@@get_id_flag near     ;	...
CODE:00401058 @@get_id_flag:
CODE:00401058		      pushf
CODE:00401059		      pop     eax
CODE:0040105A		      or      eax, 200000h
CODE:0040105F		      push    eax
CODE:00401060		      popf
CODE:00401061		      pushf
CODE:00401062		      pop     eax
CODE:00401063		      test    eax, 200000h
CODE:00401068		      retn
CODE:00401068 endp	      _@@get_id_flag
CODE:00401068
CODE:00401069
CODE:00401069 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401069
CODE:00401069
CODE:00401069 proc	      xmit_get_priority_defaults near ;	...
CODE:00401069		      pusha
CODE:0040106A		      call    GetCurrentProcess
CODE:0040106F		      mov     [ds:hProcess], eax
CODE:00401074		      call    GetCurrentThread
CODE:00401079		      mov     [ds:hThread], eax
CODE:0040107E		      push    [ds:hProcess]   ;	hProcess
CODE:00401084		      call    GetPriorityClass
CODE:00401089		      mov     [ds:dwPriorityClass], eax
CODE:0040108E		      push    [ds:hThread]    ;	hThread
CODE:00401094		      call    GetThreadPriority
CODE:00401099		      mov     [ds:nPriority], eax
CODE:0040109E		      popa
CODE:0040109F		      retn
CODE:0040109F endp	      xmit_get_priority_defaults
CODE:0040109F
CODE:004010A0
CODE:004010A0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004010A0
CODE:004010A0
CODE:004010A0 proc	      xmit_resume_normal_priority near ; ...
CODE:004010A0		      pusha
CODE:004010A1		      push    [ds:dwPriorityClass] ; dwPriorityClass
CODE:004010A7		      push    [ds:hProcess]   ;	hProcess
CODE:004010AD		      call    SetPriorityClass
CODE:004010B2		      push    [ds:nPriority]  ;	nPriority
CODE:004010B8		      push    [ds:hThread]    ;	hThread
CODE:004010BE		      call    SetThreadPriority
CODE:004010C3		      popa
CODE:004010C4		      retn
CODE:004010C4 endp	      xmit_resume_normal_priority
CODE:004010C4
CODE:004010C4 ;	---------------------------------------------------------------------------
CODE:004010C5		      align 10h
CODE:004010D0
CODE:004010D0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004010D0
CODE:004010D0
CODE:004010D0 proc	      xmit_force_highest_priority near ; ...
CODE:004010D0		      pusha
CODE:004010D1		      push    100h	      ;	dwPriorityClass
CODE:004010D6		      push    [ds:hProcess]   ;	hProcess
CODE:004010DC		      call    SetPriorityClass
CODE:004010E1		      cmp     eax, 1
CODE:004010E4		      jnz     short @@error
CODE:004010E6		      push    0Fh	      ;	nPriority
CODE:004010E8		      push    [ds:hThread]    ;	hThread
CODE:004010EE		      call    SetThreadPriority
CODE:004010F3		      cmp     eax, 1
CODE:004010F6		      jnz     short @@error
CODE:004010F8		      popa
CODE:004010F9		      retn
CODE:004010FA ;	---------------------------------------------------------------------------
CODE:004010FA
CODE:004010FA @@error:				      ;	...
CODE:004010FA		      jmp     fatalunexpected
CODE:004010FA endp	      xmit_force_highest_priority
CODE:004010FA
CODE:004010FF
CODE:004010FF ;	===============	S U B R	O U T I	N E =======================================
CODE:004010FF
CODE:004010FF
CODE:004010FF proc	      bswap_eax	near	      ;	...
CODE:004010FF		      xchg    al, ah
CODE:00401101		      ror     eax, 10h
CODE:00401104		      xchg    al, ah
CODE:00401106		      retn
CODE:00401106 endp	      bswap_eax
CODE:00401106
CODE:00401106 ;	---------------------------------------------------------------------------
CODE:00401107		      align 10h
CODE:00401110
CODE:00401110 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401110
CODE:00401110
CODE:00401110 proc	      mp3_recollect_bits near ;	...
CODE:00401110		      test    esi, 1
CODE:00401116		      jnz     short @@odd
CODE:00401118		      mov     bp, [esi]
CODE:0040111B		      add     esi, 2
CODE:0040111E		      ror     bp, 8
CODE:00401122		      shl     ebp, 10h
CODE:00401125		      mov     ch, 0
CODE:00401127		      retn
CODE:00401128 ;	---------------------------------------------------------------------------
CODE:00401128
CODE:00401128 @@odd:				      ;	...
CODE:00401128		      movzx   ebp, [byte ptr esi]
CODE:0040112B		      inc     esi
CODE:0040112C		      shl     ebp, 10h
CODE:0040112F		      mov     bp, [esi]
CODE:00401132		      add     esi, 2
CODE:00401135		      ror     bp, 8
CODE:00401139		      shl     ebp, 8
CODE:0040113C		      mov     ch, 8
CODE:0040113E		      retn
CODE:0040113E endp	      mp3_recollect_bits
CODE:0040113E
CODE:0040113E ;	---------------------------------------------------------------------------
CODE:0040113F		      align 10h
CODE:00401140
CODE:00401140 mp3_get_bits:
CODE:00401140		      mov     eax, ebp
CODE:00401142		      shl     ebp, cl
CODE:00401144		      rol     eax, cl
CODE:00401146		      xor     eax, ebp
CODE:00401148		      sub     ch, cl
CODE:0040114A		      js      short mp3_collect_more
CODE:0040114C		      retn
CODE:0040114C ;	---------------------------------------------------------------------------
CODE:0040114D		      align 10h
CODE:00401150
CODE:00401150 mp3_collect_more:			      ;	...
CODE:00401150		      mov     cl, ch
CODE:00401152		      add     ch, 10h
CODE:00401155		      rol     ebp, cl
CODE:00401157		      mov     bp, [esi]
CODE:0040115A		      add     esi, 2
CODE:0040115D		      ror     bp, 8
CODE:00401161		      ror     ebp, cl
CODE:00401163		      retn
CODE:00401163 ;	---------------------------------------------------------------------------
CODE:00401164		      align 10h
CODE:00401170
CODE:00401170 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401170
CODE:00401170
CODE:00401170 proc	      mp3_uncollect_bits near ;	...
CODE:00401170		      sub     esi, 2
CODE:00401173		      shr     ch, 3
CODE:00401176		      movzx   ecx, ch
CODE:00401179		      sub     esi, ecx
CODE:0040117B		      retn
CODE:0040117B endp	      mp3_uncollect_bits
CODE:0040117B
CODE:0040117B ;	---------------------------------------------------------------------------
CODE:0040117C		      align 10h
CODE:00401180
CODE:00401180 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401180
CODE:00401180
CODE:00401180 proc	      mp3_search_get_header near ; ...
CODE:00401180		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00401187		      jz      short @@no_rdtsc_supported
CODE:00401189		      rdtsc
CODE:0040118B		      sub     [ds:ttt],	eax
CODE:00401191		      sbb     [ds:ttt+4], edx
CODE:00401197
CODE:00401197 @@no_rdtsc_supported:		      ;	...
CODE:00401197		      mov     [ds:mp3_extra_bytes], 0
CODE:004011A1
CODE:004011A1 @@retry_header:			      ;	...
CODE:004011A1		      cmp     [ds:mp3_src_remain], 4
CODE:004011A8		      jb      @@fail_no_header
CODE:004011AE		      cmp     [byte ptr	esi], 0FFh
CODE:004011B1		      jnz     short @@bad_header
CODE:004011B3		      mov     al, [esi+1]
CODE:004011B6		      and     al, 0E6h
CODE:004011B8		      cmp     al, 0E2h
CODE:004011BA		      jnz     short @@bad_header
CODE:004011BC		      mov     al, [esi+2]
CODE:004011BF		      cmp     al, 0F0h
CODE:004011C1		      jnb     short @@bad_header
CODE:004011C3		      and     al, 0Ch
CODE:004011C5		      cmp     al, 0Ch
CODE:004011C7		      jnz     short @@good_header
CODE:004011C9
CODE:004011C9 @@bad_header:			      ;	...
CODE:004011C9		      inc     esi
CODE:004011CA		      dec     [ds:mp3_src_remain]
CODE:004011D0		      inc     [ds:mp3_extra_bytes]
CODE:004011D6		      mov     [ds:main_data_pool_wr_ptr], offset main_data_pool_start
CODE:004011E0		      jmp     short @@retry_header
CODE:004011E2 ;	---------------------------------------------------------------------------
CODE:004011E2
CODE:004011E2 @@good_header:			      ;	...
CODE:004011E2		      mov     eax, [esi]
CODE:004011E4		      call    bswap_eax
CODE:004011E9		      mov     [ds:mp3_hdr_32bit_header], eax
CODE:004011EE		      mov     [ds:mp3_hdr_flag_lsf], 0
CODE:004011F8		      mov     [ds:mp3_hdr_flag_mpeg25],	0
CODE:00401202		      mov     [ds:mp3_nb_granules], 2
CODE:0040120C		      test    eax, 80000h
CODE:00401211		      jnz     short @@lsf_this
CODE:00401213		      mov     [ds:mp3_hdr_flag_lsf], 1
CODE:0040121D		      mov     [ds:mp3_nb_granules], 1
CODE:00401227		      test    eax, 100000h
CODE:0040122C		      jnz     short @@lsf_this
CODE:0040122E		      mov     [ds:mp3_hdr_flag_mpeg25],	1
CODE:00401238
CODE:00401238 @@lsf_this:			      ;	...
CODE:00401238		      shr     eax, 10
CODE:0040123B		      and     eax, 3
CODE:0040123E		      mov     ecx, [ds:mp3_hdr_flag_lsf]
CODE:00401244		      add     ecx, [ds:mp3_hdr_flag_mpeg25]
CODE:0040124A		      movzx   edx, [ds:mp3_freq_tab+eax*2]
CODE:00401252		      shr     edx, cl
CODE:00401254		      lea     ecx, [ecx+ecx*2]
CODE:00401257		      add     eax, ecx
CODE:00401259		      mov     [ds:mp3_hdr_sample_rate_index], eax
CODE:0040125E		      mov     [ds:mp3_sample_rate], edx
CODE:00401264		      mov     cl, [ds:option_rate_shift]
CODE:0040126A		      shr     edx, cl
CODE:0040126C		      mov     [ds:mp3_output_sample_rate], edx
CODE:00401272		      mov     eax, [ds:mp3_hdr_32bit_header]
CODE:00401277		      shr     eax, 10h
CODE:0040127A		      not     eax
CODE:0040127C		      and     eax, 1
CODE:0040127F		      mov     [ds:mp3_hdr_flag_crc], eax
CODE:00401284		      mov     eax, [ds:mp3_hdr_32bit_header]
CODE:00401289		      shr     eax, 9
CODE:0040128C		      and     eax, 1
CODE:0040128F		      mov     [ds:mp3_hdr_flag_padding], eax
CODE:00401294		      mov     eax, [ds:mp3_hdr_32bit_header]
CODE:00401299		      shr     eax, 12
CODE:0040129C		      and     eax, 0Fh
CODE:0040129F		      jnz     short @@not_free_format
CODE:004012A1		      call    mp3_detect_free_format_block_size
CODE:004012A6		      jb      @@bad_header
CODE:004012AC		      mov     eax, [ds:mp3_free_format_frame_size]
CODE:004012B1		      jmp     short @@this_frame_size_plus_padding
CODE:004012B3 ;	---------------------------------------------------------------------------
CODE:004012B3
CODE:004012B3 @@not_free_format:		      ;	...
CODE:004012B3		      mov     edx, [ds:mp3_hdr_flag_lsf]
CODE:004012B9		      shl     edx, 4
CODE:004012BC		      add     eax, edx
CODE:004012BE		      movzx   eax, [ds:mp3_bitrate_tab+eax*2] ;	kbit/s
CODE:004012C6		      imul    eax, 1000	      ;	bit/s
CODE:004012CC		      mov     [ds:mp3_bit_rate], eax
CODE:004012D1		      imul    eax, 144	      ;	144=90h=8*18
CODE:004012D7		      xor     edx, edx
CODE:004012D9		      div     [ds:mp3_sample_rate]
CODE:004012DF		      mov     ecx, [ds:mp3_hdr_flag_lsf]
CODE:004012E5		      shr     eax, cl
CODE:004012E7
CODE:004012E7 @@this_frame_size_plus_padding:	      ;	...
CODE:004012E7		      add     eax, [ds:mp3_hdr_flag_padding]
CODE:004012ED		      mov     [ds:mp3_src_frame_size], eax
CODE:004012F2		      add     eax, esi
CODE:004012F4		      mov     [ds:mp3_src_frame_end], eax
CODE:004012F9		      mov     eax, [ds:mp3_hdr_32bit_header]
CODE:004012FE		      shr     eax, 6
CODE:00401301		      and     eax, 3
CODE:00401304		      mov     [ds:mp3_hdr_mode_val], eax
CODE:00401309		      cmp     al, 3
CODE:0040130B		      mov     edx, 1
CODE:00401310		      jz      short @@this_channels
CODE:00401312		      mov     edx, 2
CODE:00401317
CODE:00401317 @@this_channels:			      ;	...
CODE:00401317		      mov     [ds:mp3_src_num_channels], edx
CODE:0040131D		      cmp     [ds:option_mono],	0
CODE:00401324		      jz      short @@allow_stereo
CODE:00401326		      mov     edx, 1
CODE:0040132B
CODE:0040132B @@allow_stereo:			      ;	...
CODE:0040132B		      mov     [ds:mp3_output_num_channels], edx
CODE:00401331		      imul    edx, [ds:mp3_bytes_per_sample]
CODE:00401338		      mov     [ds:mp3_samples_dst_step], edx
CODE:0040133E		      mov     eax, [ds:mp3_hdr_32bit_header]
CODE:00401343		      shr     eax, 4
CODE:00401346		      and     eax, 3
CODE:00401349		      mov     [ds:mp3_hdr_mode_ext], eax
CODE:0040134E		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00401355		      jz      short @@no_rdtsc_supported@
CODE:00401357		      rdtsc
CODE:00401359		      add     [ds:ttt],	eax
CODE:0040135F		      adc     [ds:ttt+4], edx
CODE:00401365
CODE:00401365 @@no_rdtsc_supported@:		      ;	...
CODE:00401365		      clc
CODE:00401366		      retn
CODE:00401367 ;	---------------------------------------------------------------------------
CODE:00401367
CODE:00401367 @@fail_no_header:			      ;	...
CODE:00401367		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040136E		      jz      short @@no_rdtsc_supported@@
CODE:00401370		      rdtsc
CODE:00401372		      add     [ds:ttt],	eax
CODE:00401378		      adc     [ds:ttt+4], edx
CODE:0040137E
CODE:0040137E @@no_rdtsc_supported@@:		      ;	...
CODE:0040137E		      mov     [ds:mp3_src_frame_size], 0
CODE:00401388		      stc
CODE:00401389		      retn
CODE:00401389 endp	      mp3_search_get_header
CODE:00401389
CODE:00401389 ;	---------------------------------------------------------------------------
CODE:0040138A		      align 10h
CODE:00401390
CODE:00401390 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401390
CODE:00401390
CODE:00401390 proc	      mp3_bitstream_read_header_extra near ; ...
CODE:00401390		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00401397		      jz      short @@@no_rdtsc_supported
CODE:00401399		      rdtsc
CODE:0040139B		      sub     [ds:rdtsc_read_header_extra], eax
CODE:004013A1		      sbb     [ds:rdtsc_read_header_extra+4], edx
CODE:004013A7
CODE:004013A7 @@@no_rdtsc_supported:		      ;	...
CODE:004013A7		      cmp     [ds:mp3_hdr_flag_crc], 0
CODE:004013AE		      jz      short @@without_crc
CODE:004013B0		      mov     eax, ebp	      ;	mp3mac_get_n_bits 16
CODE:004013B2		      shl     ebp, 10h
CODE:004013B5		      rol     eax, 10h
CODE:004013B8		      xor     eax, ebp
CODE:004013BA		      sub     ch, 10h
CODE:004013BD		      jns     short @@without_crc
CODE:004013BF		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:004013C1		      add     ch, 10h
CODE:004013C4		      rol     ebp, cl
CODE:004013C6		      mov     bp, [esi]
CODE:004013C9		      add     esi, 2
CODE:004013CC		      ror     bp, 8
CODE:004013D0		      ror     ebp, cl
CODE:004013D2
CODE:004013D2 @@without_crc:			      ;	...
CODE:004013D2		      cmp     [ds:mp3_hdr_flag_lsf], 0
CODE:004013D9		      jz      short @@pre_lsf_zero
CODE:004013DB		      mov     [ds:mp3_num_compress_bits], 9
CODE:004013E5		      mov     eax, ebp	      ;	mp3mac_get_n_bits 8
CODE:004013E7		      shl     ebp, 8
CODE:004013EA		      rol     eax, 8
CODE:004013ED		      xor     eax, ebp
CODE:004013EF		      sub     ch, 8
CODE:004013F2		      jns     short @@without_crc@
CODE:004013F4		      mov     cl, ch
CODE:004013F6		      add     ch, 10h
CODE:004013F9		      rol     ebp, cl
CODE:004013FB		      mov     bp, [esi]
CODE:004013FE		      add     esi, 2
CODE:00401401		      ror     bp, 8
CODE:00401405		      ror     ebp, cl
CODE:00401407
CODE:00401407 @@without_crc@:			      ;	...
CODE:00401407		      mov     [ds:mp3_main_data_begin],	eax
CODE:0040140C		      mov     cl, [byte	ptr ds:mp3_src_num_channels]
CODE:00401412		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:00401414		      shl     ebp, cl
CODE:00401416		      rol     eax, cl
CODE:00401418		      xor     eax, ebp
CODE:0040141A		      sub     ch, cl
CODE:0040141C		      jns     short @@without_crc@@
CODE:0040141E		      mov     cl, ch
CODE:00401420		      add     ch, 10h
CODE:00401423		      rol     ebp, cl
CODE:00401425		      mov     bp, [esi]
CODE:00401428		      add     esi, 2
CODE:0040142B		      ror     bp, 8
CODE:0040142F		      ror     ebp, cl
CODE:00401431
CODE:00401431 @@without_crc@@:			      ;	...
CODE:00401431		      jmp     @@pre_lsf_done
CODE:00401436 ;	---------------------------------------------------------------------------
CODE:00401436
CODE:00401436 @@pre_lsf_zero:			      ;	...
CODE:00401436		      mov     [ds:mp3_num_compress_bits], 4
CODE:00401440		      mov     eax, ebp	      ;	mp3mac_get_n_bits 9
CODE:00401442		      shl     ebp, 9
CODE:00401445		      rol     eax, 9
CODE:00401448		      xor     eax, ebp
CODE:0040144A		      sub     ch, 9
CODE:0040144D		      jns     short @@@without_crc
CODE:0040144F		      mov     cl, ch
CODE:00401451		      add     ch, 10h
CODE:00401454		      rol     ebp, cl
CODE:00401456		      mov     bp, [esi]
CODE:00401459		      add     esi, 2
CODE:0040145C		      ror     bp, 8
CODE:00401460		      ror     ebp, cl
CODE:00401462
CODE:00401462 @@@without_crc:			      ;	...
CODE:00401462		      mov     [ds:mp3_main_data_begin],	eax
CODE:00401467		      mov     cl, [byte	ptr ds:mp3_src_num_channels]
CODE:0040146D		      shl     cl, 1	      ;	1,2 -->	2,4
CODE:0040146F		      xor     cl, 7	      ;	    -->	5,3
CODE:00401472		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:00401474		      shl     ebp, cl
CODE:00401476		      rol     eax, cl
CODE:00401478		      xor     eax, ebp
CODE:0040147A		      sub     ch, cl
CODE:0040147C		      jns     short @@@without_crc@
CODE:0040147E		      mov     cl, ch
CODE:00401480		      add     ch, 10h
CODE:00401483		      rol     ebp, cl
CODE:00401485		      mov     bp, [esi]
CODE:00401488		      add     esi, 2
CODE:0040148B		      ror     bp, 8
CODE:0040148F		      ror     ebp, cl
CODE:00401491
CODE:00401491 @@@without_crc@:			      ;	...
CODE:00401491		      mov     edx, [ds:mp3_src_num_channels]
CODE:00401497		      mov     ebx, offset mp3_granules
CODE:0040149C
CODE:0040149C @@pre_channel_lop:		      ;	...
CODE:0040149C		      mov     [dword ptr ebx+40], 0 ; [ebx+$mp3gr_scfsi]
CODE:004014A3		      add     ebx, 2464	      ;	$mp3gr_entrysiz
CODE:004014A9		      mov     eax, ebp	      ;	mp3mac_get_n_bits 4
CODE:004014AB		      shl     ebp, 4
CODE:004014AE		      rol     eax, 4
CODE:004014B1		      xor     eax, ebp
CODE:004014B3		      sub     ch, 4
CODE:004014B6		      jns     short @@@without_crc@@
CODE:004014B8		      mov     cl, ch
CODE:004014BA		      add     ch, 10h
CODE:004014BD		      rol     ebp, cl
CODE:004014BF		      mov     bp, [esi]
CODE:004014C2		      add     esi, 2
CODE:004014C5		      ror     bp, 8
CODE:004014C9		      ror     ebp, cl
CODE:004014CB
CODE:004014CB @@@without_crc@@:			      ;	...
CODE:004014CB		      mov     [ebx+28h], eax  ;	[ebx+$mp3gr_scfsi]
CODE:004014CE		      add     ebx, 2464	      ;	$mp3gr_entrysiz
CODE:004014D4		      dec     edx
CODE:004014D5		      jnz     short @@pre_channel_lop
CODE:004014D7
CODE:004014D7 @@pre_lsf_done:			      ;	...
CODE:004014D7		      mov     eax, [ds:mp3_nb_granules]
CODE:004014DC		      imul    eax, 12h
CODE:004014DF		      mov     [ds:mp3_nb_frames], eax
CODE:004014E4		      mov     eax, [ds:mp3_nb_frames]
CODE:004014E9		      imul    eax, [ds:mp3_output_num_channels]
CODE:004014F0		      imul    eax, [ds:mp3_bytes_per_sample]
CODE:004014F7		      shl     eax, 5
CODE:004014FA		      mov     cl, [ds:option_rate_shift]
CODE:00401500		      shr     eax, cl
CODE:00401502		      mov     [ds:mp3_samples_output_size], eax
CODE:00401507		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_read_header_extra
CODE:0040150E		      jz      short @@no_rdtsc_supported
CODE:00401510		      rdtsc
CODE:00401512		      add     [ds:rdtsc_read_header_extra], eax
CODE:00401518		      adc     [ds:rdtsc_read_header_extra+4], edx
CODE:0040151E
CODE:0040151E @@no_rdtsc_supported:		      ;	...
CODE:0040151E		      retn
CODE:0040151E endp	      mp3_bitstream_read_header_extra
CODE:0040151E
CODE:0040151E ;	---------------------------------------------------------------------------
CODE:0040151F		      align 10h
CODE:00401520
CODE:00401520 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401520
CODE:00401520
CODE:00401520 proc	      mp3_bitstream_read_granules near ; ...
CODE:00401520		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_read_granule
CODE:00401527		      jz      short @@no_rdtsc_supported
CODE:00401529		      rdtsc
CODE:0040152B		      sub     [ds:rdtsc_read_granule], eax
CODE:00401531		      sbb     [ds:rdtsc_read_granule+4], edx
CODE:00401537
CODE:00401537 @@no_rdtsc_supported:		      ;	...
CODE:00401537		      mov     [ds:_@@saved_sp],	esp
CODE:0040153D		      mov     [ds:mp3_main_data_siz], 0
CODE:00401547		      mov     [ds:mp3_curr_granule], 0
CODE:00401551		      mov     ebx, offset mp3_granules
CODE:00401556
CODE:00401556 @@hdr_granule_lop:		      ;	...
CODE:00401556		      push    ebx
CODE:00401557		      mov     [ds:mp3_curr_channel], 0
CODE:00401561
CODE:00401561 @@hdr_channel_lop:		      ;	...
CODE:00401561		      mov     eax, ebp	      ;	mp3mac_get_n_bits 12
CODE:00401563		      shl     ebp, 12
CODE:00401566		      rol     eax, 12
CODE:00401569		      xor     eax, ebp
CODE:0040156B		      sub     ch, 12
CODE:0040156E		      jns     short @@without_crc
CODE:00401570		      mov     cl, ch
CODE:00401572		      add     ch, 16
CODE:00401575		      rol     ebp, cl
CODE:00401577		      mov     bp, [esi]
CODE:0040157A		      add     esi, 2
CODE:0040157D		      ror     bp, 8
CODE:00401581		      ror     ebp, cl
CODE:00401583
CODE:00401583 @@without_crc:			      ;	...
CODE:00401583		      mov     edx, [ds:mp3_main_data_siz]
CODE:00401589		      mov     [ebx], eax
CODE:0040158B		      mov     [ebx+4], edx
CODE:0040158E		      add     eax, edx
CODE:00401590		      mov     [ebx+8], eax
CODE:00401593		      mov     [ds:mp3_main_data_siz], eax
CODE:00401598		      mov     eax, ebp	      ;	mp3mac_get_n_bits 9
CODE:0040159A		      shl     ebp, 9
CODE:0040159D		      rol     eax, 9
CODE:004015A0		      xor     eax, ebp
CODE:004015A2		      sub     ch, 9
CODE:004015A5		      jns     short @@without_crc@
CODE:004015A7		      mov     cl, ch
CODE:004015A9		      add     ch, 10h
CODE:004015AC		      rol     ebp, cl
CODE:004015AE		      mov     bp, [esi]
CODE:004015B1		      add     esi, 2
CODE:004015B4		      ror     bp, 8
CODE:004015B8		      ror     ebp, cl
CODE:004015BA
CODE:004015BA @@without_crc@:			      ;	...
CODE:004015BA		      mov     [ebx+12],	eax   ;	[ebx+$mp3gr_big_values]
CODE:004015BD		      mov     eax, ebp	      ;	mp3mac_get_n_bits 8
CODE:004015BF		      shl     ebp, 8
CODE:004015C2		      rol     eax, 8
CODE:004015C5		      xor     eax, ebp
CODE:004015C7		      sub     ch, 8
CODE:004015CA		      jns     short @@without_crc@@
CODE:004015CC		      mov     cl, ch
CODE:004015CE		      add     ch, 10h
CODE:004015D1		      rol     ebp, cl
CODE:004015D3		      mov     bp, [esi]
CODE:004015D6		      add     esi, 2
CODE:004015D9		      ror     bp, 8
CODE:004015DD		      ror     ebp, cl
CODE:004015DF
CODE:004015DF @@without_crc@@:			      ;	...
CODE:004015DF		      add     eax, 190	      ;	400-210
CODE:004015E4		      cmp     [ds:mp3_hdr_mode_val], 1
CODE:004015EB		      jnz     short @@not_ms_stereo
CODE:004015ED		      test    [ds:mp3_hdr_mode_ext], 2
CODE:004015F7		      jz      short @@not_ms_stereo
CODE:004015F9		      sub     eax, 2
CODE:004015FC
CODE:004015FC @@not_ms_stereo:			      ;	...
CODE:004015FC		      mov     [ebx+16],	eax   ;	[ebx+$mp3gr_global_gain]
CODE:004015FF		      mov     cl, [byte	ptr ds:mp3_num_compress_bits]
CODE:00401605		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:00401607		      shl     ebp, cl
CODE:00401609		      rol     eax, cl
CODE:0040160B		      xor     eax, ebp
CODE:0040160D		      sub     ch, cl
CODE:0040160F		      jns     short @@@without_crc
CODE:00401611		      mov     cl, ch
CODE:00401613		      add     ch, 10h
CODE:00401616		      rol     ebp, cl
CODE:00401618		      mov     bp, [esi]
CODE:0040161B		      add     esi, 2
CODE:0040161E		      ror     bp, 8
CODE:00401622		      ror     ebp, cl
CODE:00401624
CODE:00401624 @@@without_crc:			      ;	...
CODE:00401624		      mov     [ebx+20],	eax   ;	[ebx+$mp3gr_scalefac_compress]
CODE:00401627		      dec     ch	      ;	mp3mac_get_bit_to_cy
CODE:00401627					      ;	dec mp3_colNN
CODE:00401629		      shl     ebp, 1	      ;	shl mp3_col32,1	; cy=data
CODE:0040162B		      jnb     @@no_blocksplit
CODE:00401631		      mov     eax, ebp	      ;	mp3mac_get_n_bits 2
CODE:00401633		      shl     ebp, 2
CODE:00401636		      rol     eax, 2
CODE:00401639		      xor     eax, ebp
CODE:0040163B		      sub     ch, 2
CODE:0040163E		      jns     short @@@without_crc@
CODE:00401640		      mov     cl, ch
CODE:00401642		      add     ch, 10h
CODE:00401645		      rol     ebp, cl
CODE:00401647		      mov     bp, [esi]
CODE:0040164A		      add     esi, 2
CODE:0040164D		      ror     bp, 8
CODE:00401651		      ror     ebp, cl
CODE:00401653
CODE:00401653 @@@without_crc@:			      ;	...
CODE:00401653		      cmp     eax, 0
CODE:00401656		      jz      @@error
CODE:0040165C		      mov     [ebx+44],	eax   ;	[ebx+$mp3gr_block_type]
CODE:0040165F		      cmp     eax, 2
CODE:00401662		      mov     eax, 18	      ;	36/2 ; region_size (default)
CODE:00401667		      jz      short @@this_region_size
CODE:00401669		      cmp     [ds:mp3_hdr_sample_rate_index], 2
CODE:00401670		      jbe     short @@this_region_size
CODE:00401672		      mov     eax, 27	      ;	54/2 ; region_size
CODE:00401677		      cmp     [ds:mp3_hdr_sample_rate_index], 8
CODE:0040167E		      jnz     short @@this_region_size
CODE:00401680		      mov     eax, 54	      ;	108/2 ;	region_size (for rate=8)
CODE:00401685
CODE:00401685 @@this_region_size:		      ;	...
CODE:00401685		      mov     [ebx+80],	eax   ;	[ebx+$mp3gr_region_size+0*4]
CODE:00401688		      mov     [dword ptr ebx+84], 288 ;	[ebx+$mp3gr_region_size+1*4],576/2
CODE:0040168F		      mov     [dword ptr ebx+88], 288 ;	[ebx+$mp3gr_region_size+2*4],576/2
CODE:00401696		      mov     eax, ebp	      ;	mp3mac_get_n_bits 1
CODE:00401698		      shl     ebp, 1
CODE:0040169A		      rol     eax, 1
CODE:0040169C		      xor     eax, ebp
CODE:0040169E		      sub     ch, 1
CODE:004016A1		      jns     short @@@without_crc@@
CODE:004016A3		      mov     cl, ch
CODE:004016A5		      add     ch, 10h
CODE:004016A8		      rol     ebp, cl
CODE:004016AA		      mov     bp, [esi]
CODE:004016AD		      add     esi, 2
CODE:004016B0		      ror     bp, 8
CODE:004016B4		      ror     ebp, cl
CODE:004016B6
CODE:004016B6 @@@without_crc@@:			      ;	...
CODE:004016B6		      mov     [ebx+48],	eax   ;	[ebx+$mp3gr_switch_point]
CODE:004016B9		      mov     eax, ebp	      ;	IRP nn,0,1 ; only 0..1 for blocksplit
CODE:004016BB		      shl     ebp, 5	      ;	mp3mac_get_n_bits 5
CODE:004016BE		      rol     eax, 5
CODE:004016C1		      xor     eax, ebp
CODE:004016C3		      sub     ch, 5
CODE:004016C6		      jns     short @@@without_crc@@@
CODE:004016C8		      mov     cl, ch
CODE:004016CA		      add     ch, 10h
CODE:004016CD		      rol     ebp, cl
CODE:004016CF		      mov     bp, [esi]
CODE:004016D2		      add     esi, 2
CODE:004016D5		      ror     bp, 8
CODE:004016D9		      ror     ebp, cl
CODE:004016DB
CODE:004016DB @@@without_crc@@@:		      ;	...
CODE:004016DB		      mov     [ebx+56],	eax   ;	[ebx+$mp3gr_table_select+nn*4] ; nn=0
CODE:004016DE		      mov     eax, ebp	      ;	mp3mac_get_n_bits 5
CODE:004016E0		      shl     ebp, 5
CODE:004016E3		      rol     eax, 5
CODE:004016E6		      xor     eax, ebp
CODE:004016E8		      sub     ch, 5
CODE:004016EB		      jns     short @@@without_crc_@
CODE:004016ED		      mov     cl, ch
CODE:004016EF		      add     ch, 10h
CODE:004016F2		      rol     ebp, cl
CODE:004016F4		      mov     bp, [esi]
CODE:004016F7		      add     esi, 2
CODE:004016FA		      ror     bp, 8
CODE:004016FE		      ror     ebp, cl
CODE:00401700
CODE:00401700 @@@without_crc_@:			      ;	...
CODE:00401700		      mov     [ebx+60],	eax   ;	[ebx+$mp3gr_table_select+nn*4] ; nn=1
CODE:00401703		      mov     eax, ebp	      ;	mp3mac_get_n_bits 5
CODE:00401705		      shl     ebp, 3	      ;	IRP nn,0,1,2
CODE:00401708		      rol     eax, 3	      ;	mp3mac_get_n_bits 3
CODE:0040170B		      xor     eax, ebp
CODE:0040170D		      sub     ch, 3
CODE:00401710		      jns     short @@@without_crc_@@
CODE:00401712		      mov     cl, ch
CODE:00401714		      add     ch, 10h
CODE:00401717		      rol     ebp, cl
CODE:00401719		      mov     bp, [esi]
CODE:0040171C		      add     esi, 2
CODE:0040171F		      ror     bp, 8
CODE:00401723		      ror     ebp, cl
CODE:00401725
CODE:00401725 @@@without_crc_@@:		      ;	...
CODE:00401725		      shl     eax, 3
CODE:00401728		      mov     [ebx+68],	eax   ;	[ebx+$mp3gr_subblock_gain+nn*4]	; nn=0
CODE:0040172B		      mov     eax, ebp
CODE:0040172D		      shl     ebp, 3
CODE:00401730		      rol     eax, 3
CODE:00401733		      xor     eax, ebp
CODE:00401735		      sub     ch, 3
CODE:00401738		      jns     short @@without_crc_@
CODE:0040173A		      mov     cl, ch
CODE:0040173C		      add     ch, 10h
CODE:0040173F		      rol     ebp, cl
CODE:00401741		      mov     bp, [esi]
CODE:00401744		      add     esi, 2
CODE:00401747		      ror     bp, 8
CODE:0040174B		      ror     ebp, cl
CODE:0040174D
CODE:0040174D @@without_crc_@:			      ;	...
CODE:0040174D		      shl     eax, 3
CODE:00401750		      mov     [ebx+72],	eax   ;	[ebx+$mp3gr_subblock_gain+nn*4]	; nn=1
CODE:00401753		      mov     eax, ebp
CODE:00401755		      shl     ebp, 3
CODE:00401758		      rol     eax, 3
CODE:0040175B		      xor     eax, ebp
CODE:0040175D		      sub     ch, 3
CODE:00401760		      jns     short @@without_crc_@@
CODE:00401762		      mov     cl, ch
CODE:00401764		      add     ch, 10h
CODE:00401767		      rol     ebp, cl
CODE:00401769		      mov     bp, [esi]
CODE:0040176C		      add     esi, 2
CODE:0040176F		      ror     bp, 8
CODE:00401773		      ror     ebp, cl
CODE:00401775
CODE:00401775 @@without_crc_@@:			      ;	...
CODE:00401775		      shl     eax, 3
CODE:00401778		      mov     [ebx+76],	eax   ;	[ebx+$mp3gr_subblock_gain+nn*4]	; nn=2
CODE:0040177B		      jmp     @@blocksplit_done
CODE:00401780 ;	---------------------------------------------------------------------------
CODE:00401780
CODE:00401780 @@no_blocksplit:			      ;	...
CODE:00401780		      mov     [dword ptr ebx+44], 0 ; [ebx+$mp3gr_block_type]
CODE:00401787		      mov     [dword ptr ebx+48], 0 ; [ebx+$mp3gr_switch_point]
CODE:0040178E		      mov     eax, ebp	      ;	IRP nn,0,1,2 ; range 0..2 when non-blocksplit
CODE:00401790		      shl     ebp, 5	      ;	mp3mac_get_n_bits 5
CODE:00401793		      rol     eax, 5
CODE:00401796		      xor     eax, ebp
CODE:00401798		      sub     ch, 5
CODE:0040179B		      jns     short @@_without_crc
CODE:0040179D		      mov     cl, ch
CODE:0040179F		      add     ch, 10h
CODE:004017A2		      rol     ebp, cl
CODE:004017A4		      mov     bp, [esi]
CODE:004017A7		      add     esi, 2
CODE:004017AA		      ror     bp, 8
CODE:004017AE		      ror     ebp, cl
CODE:004017B0
CODE:004017B0 @@_without_crc:			      ;	...
CODE:004017B0		      mov     [ebx+56],	eax   ;	[ebx+$mp3gr_table_select+nn*4] ; nn=0
CODE:004017B3		      mov     eax, ebp
CODE:004017B5		      shl     ebp, 5
CODE:004017B8		      rol     eax, 5
CODE:004017BB		      xor     eax, ebp
CODE:004017BD		      sub     ch, 5
CODE:004017C0		      jns     short @@_without_crc_@
CODE:004017C2		      mov     cl, ch
CODE:004017C4		      add     ch, 10h
CODE:004017C7		      rol     ebp, cl
CODE:004017C9		      mov     bp, [esi]
CODE:004017CC		      add     esi, 2
CODE:004017CF		      ror     bp, 8
CODE:004017D3		      ror     ebp, cl
CODE:004017D5
CODE:004017D5 @@_without_crc_@:			      ;	...
CODE:004017D5		      mov     [ebx+60],	eax   ;	[ebx+$mp3gr_table_select+nn*4] ; nn=1
CODE:004017D8		      mov     eax, ebp
CODE:004017DA		      shl     ebp, 5
CODE:004017DD		      rol     eax, 5
CODE:004017E0		      xor     eax, ebp
CODE:004017E2		      sub     ch, 5
CODE:004017E5		      jns     short @@_without_crc_@@
CODE:004017E7		      mov     cl, ch
CODE:004017E9		      add     ch, 10h
CODE:004017EC		      rol     ebp, cl
CODE:004017EE		      mov     bp, [esi]
CODE:004017F1		      add     esi, 2
CODE:004017F4		      ror     bp, 8
CODE:004017F8		      ror     ebp, cl
CODE:004017FA
CODE:004017FA @@_without_crc_@@:		      ;	...
CODE:004017FA		      mov     [ebx+64],	eax   ;	[ebx+$mp3gr_table_select+nn*4] ; nn=2
CODE:004017FD		      mov     eax, ebp
CODE:004017FF		      shl     ebp, 4
CODE:00401802		      rol     eax, 4
CODE:00401805		      xor     eax, ebp
CODE:00401807		      sub     ch, 4
CODE:0040180A		      jns     short @@_without_crc@
CODE:0040180C		      mov     cl, ch
CODE:0040180E		      add     ch, 10h
CODE:00401811		      rol     ebp, cl
CODE:00401813		      mov     bp, [esi]
CODE:00401816		      add     esi, 2
CODE:00401819		      ror     bp, 8
CODE:0040181D		      ror     ebp, cl
CODE:0040181F
CODE:0040181F @@_without_crc@:			      ;	...
CODE:0040181F		      inc     eax
CODE:00401820		      mov     [ds:_@@region_address0], eax
CODE:00401825		      mov     eax, ebp	      ;	mp3mac_get_n_bits 3
CODE:00401827		      shl     ebp, 3
CODE:0040182A		      rol     eax, 3
CODE:0040182D		      xor     eax, ebp
CODE:0040182F		      sub     ch, 3
CODE:00401832		      jns     short @@_without_crc@@
CODE:00401834		      mov     cl, ch
CODE:00401836		      add     ch, 10h
CODE:00401839		      rol     ebp, cl
CODE:0040183B		      mov     bp, [esi]
CODE:0040183E		      add     esi, 2
CODE:00401841		      ror     bp, 8
CODE:00401845		      ror     ebp, cl
CODE:00401847
CODE:00401847 @@_without_crc@@:			      ;	...
CODE:00401847		      inc     eax
CODE:00401848		      add     eax, [ds:_@@region_address0]
CODE:0040184E		      mov     [ds:_@@region_address1], eax
CODE:00401853		      mov     eax, [ds:mp3_hdr_sample_rate_index]
CODE:00401858		      shl     eax, 5
CODE:0040185B		      add     eax, [ds:_@@region_address0]
CODE:00401861		      movzx   eax, [ds:mp3_band_index_long+eax*2]
CODE:00401869		      shr     eax, 1
CODE:0040186B		      mov     [ebx+80],	eax   ;	[ebx+$mp3gr_region_size+0*4]
CODE:0040186E		      mov     eax, [ds:mp3_hdr_sample_rate_index]
CODE:00401873		      shl     eax, 5
CODE:00401876		      add     eax, [ds:_@@region_address1]
CODE:0040187C		      movzx   eax, [ds:mp3_band_index_long+eax*2]
CODE:00401884		      shr     eax, 1
CODE:00401886		      mov     [ebx+84],	eax   ;	[ebx+$mp3gr_region_size+1*4]
CODE:00401889		      mov     [dword ptr ebx+88], 288 ;	[ebx+$mp3gr_region_size+2*4],576/2
CODE:00401890
CODE:00401890 @@blocksplit_done:		      ;	...
CODE:00401890		      lea     edi, [ebx+80]   ;	[ebx+$mp3gr_region_size+0]
CODE:00401893		      xor     edx, edx
CODE:00401895		      mov     cl, 3
CODE:00401897
CODE:00401897 @@trunc_region_size_lop:		      ;	...
CODE:00401897		      mov     eax, [edi]
CODE:00401899		      cmp     eax, [ebx+12]   ;	[ebx+$mp3gr_big_values]
CODE:0040189C		      jbe     short @@trunc_region_size_this
CODE:0040189E		      mov     eax, [ebx+12]
CODE:004018A1
CODE:004018A1 @@trunc_region_size_this:		      ;	...
CODE:004018A1		      sub     eax, edx
CODE:004018A3		      mov     [edi], eax
CODE:004018A5		      add     edx, eax
CODE:004018A7		      add     edi, 4
CODE:004018AA		      dec     cl
CODE:004018AC		      jnz     short @@trunc_region_size_lop
CODE:004018AE		      mov     [dword ptr ebx+28], 13 ; [ebx+$mp3gr_short_start]
CODE:004018B5		      mov     [dword ptr ebx+32], 22 ; [ebx+$mp3gr_long_end]
CODE:004018BC		      cmp     [dword ptr ebx+44], 2 ; [ebx+$mp3gr_block_type]
CODE:004018C0		      jnz     short @@these_band_indices
CODE:004018C2		      mov     [dword ptr ebx+28], 0 ; [ebx+$mp3gr_short_start]
CODE:004018C9		      mov     [dword ptr ebx+32], 0 ; [ebx+$mp3gr_long_end]
CODE:004018D0		      cmp     [dword ptr ebx+48], 0 ; [ebx+$mp3gr_switch_point]
CODE:004018D4		      jz      short @@these_band_indices
CODE:004018D6		      mov     [dword ptr ebx+28], 2 ; [ebx+$mp3gr_short_start]
CODE:004018DD		      mov     [dword ptr ebx+32], 4 ; [ebx+$mp3gr_long_end]
CODE:004018E4		      cmp     [ds:mp3_hdr_sample_rate_index], 8
CODE:004018EB		      jz      short @@these_band_indices
CODE:004018ED		      cmp     [ds:mp3_hdr_sample_rate_index], 2
CODE:004018F4		      mov     [dword ptr ebx+28], 3 ; [ebx+$mp3gr_short_start]
CODE:004018FB		      mov     [dword ptr ebx+32], 8 ; [ebx+$mp3gr_long_end]
CODE:00401902		      jbe     short @@these_band_indices
CODE:00401904		      mov     [dword ptr ebx+32], 6 ; [ebx+$mp3gr_long_end]
CODE:0040190B
CODE:0040190B @@these_band_indices:		      ;	...
CODE:0040190B		      xor     eax, eax
CODE:0040190D		      cmp     [ds:mp3_hdr_flag_lsf], 0
CODE:00401914		      jnz     short @@no_preflag
CODE:00401916		      mov     eax, ebp	      ;	mp3mac_get_n_bits 1
CODE:00401918		      shl     ebp, 1
CODE:0040191A		      rol     eax, 1
CODE:0040191C		      xor     eax, ebp
CODE:0040191E		      sub     ch, 1
CODE:00401921		      jns     short @@no_preflag
CODE:00401923		      mov     cl, ch
CODE:00401925		      add     ch, 10h
CODE:00401928		      rol     ebp, cl
CODE:0040192A		      mov     bp, [esi]
CODE:0040192D		      add     esi, 2
CODE:00401930		      ror     bp, 8
CODE:00401934		      ror     ebp, cl
CODE:00401936
CODE:00401936 @@no_preflag:			      ;	...
CODE:00401936		      mov     [ebx+24],	eax   ;	[ebx+$mp3gr_preflag]
CODE:00401939		      mov     eax, ebp	      ;	mp3mac_get_n_bits 1
CODE:0040193B		      shl     ebp, 1
CODE:0040193D		      rol     eax, 1
CODE:0040193F		      xor     eax, ebp
CODE:00401941		      sub     ch, 1
CODE:00401944		      jns     short @@@_without_crc
CODE:00401946		      mov     cl, ch
CODE:00401948		      add     ch, 10h
CODE:0040194B		      rol     ebp, cl
CODE:0040194D		      mov     bp, [esi]
CODE:00401950		      add     esi, 2
CODE:00401953		      ror     bp, 8
CODE:00401957		      ror     ebp, cl
CODE:00401959
CODE:00401959 @@@_without_crc:			      ;	...
CODE:00401959		      inc     eax
CODE:0040195A		      mov     [ebx+52],	eax   ;	[ebx+$mp3gr_scalefac_scale]
CODE:0040195D		      mov     eax, ebp	      ;	mp3mac_get_n_bits 1
CODE:0040195F		      shl     ebp, 1
CODE:00401961		      rol     eax, 1
CODE:00401963		      xor     eax, ebp
CODE:00401965		      sub     ch, 1
CODE:00401968		      jns     short @@@_without_crc@
CODE:0040196A		      mov     cl, ch
CODE:0040196C		      add     ch, 10h
CODE:0040196F		      rol     ebp, cl
CODE:00401971		      mov     bp, [esi]
CODE:00401974		      add     esi, 2
CODE:00401977		      ror     bp, 8
CODE:0040197B		      ror     ebp, cl
CODE:0040197D
CODE:0040197D @@@_without_crc@:			      ;	...
CODE:0040197D		      add     eax, 10h	      ;	table 10h..11h (quad_vlc)
CODE:00401980		      mov     [ebx+36],	eax   ;	[ebx+$mp3gr_count1table_select]
CODE:00401983		      add     ebx, 4928	      ;	$mp3gr_entrysiz*2
CODE:00401989		      inc     [ds:mp3_curr_channel]
CODE:0040198F		      mov     eax, [ds:mp3_curr_channel]
CODE:00401994		      cmp     eax, [ds:mp3_src_num_channels]
CODE:0040199A		      jb      @@hdr_channel_lop
CODE:004019A0		      pop     ebx
CODE:004019A1		      add     ebx, 2464	      ;	$mp3gr_entrysiz
CODE:004019A7		      inc     [ds:mp3_curr_granule]
CODE:004019AD		      mov     eax, [ds:mp3_curr_granule]
CODE:004019B2		      cmp     eax, [ds:mp3_nb_granules]
CODE:004019B8		      jb      @@hdr_granule_lop
CODE:004019BE		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_read_granule
CODE:004019C5		      jz      short @@no_rdtsc_supported@
CODE:004019C7		      rdtsc
CODE:004019C9		      add     [ds:rdtsc_read_granule], eax
CODE:004019CF		      adc     [ds:rdtsc_read_granule+4], edx
CODE:004019D5
CODE:004019D5 @@no_rdtsc_supported@:		      ;	...
CODE:004019D5		      clc
CODE:004019D6		      retn
CODE:004019D7 ;	---------------------------------------------------------------------------
CODE:004019D7
CODE:004019D7 @@error:				      ;	...
CODE:004019D7		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_read_granule
CODE:004019DE		      jz      short @@no_rdtsc_supported@@
CODE:004019E0		      rdtsc
CODE:004019E2		      add     [ds:rdtsc_read_granule], eax
CODE:004019E8		      adc     [ds:rdtsc_read_granule+4], edx
CODE:004019EE
CODE:004019EE @@no_rdtsc_supported@@:		      ;	...
CODE:004019EE		      mov     esp, [ds:_@@saved_sp]
CODE:004019F4		      stc
CODE:004019F5		      retn
CODE:004019F5 endp	      mp3_bitstream_read_granules
CODE:004019F5
CODE:004019F5 ;	---------------------------------------------------------------------------
CODE:004019F6		      align 10h
CODE:00401A00
CODE:00401A00 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401A00
CODE:00401A00
CODE:00401A00 proc	      mp3_bitstream_append_to_main_data_pool near ; ...
CODE:00401A00		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_append_main
CODE:00401A07		      jz      short @@no_rdtsc_supported
CODE:00401A09		      rdtsc
CODE:00401A0B		      sub     [ds:rdtsc_append_main], eax
CODE:00401A11		      sbb     [ds:rdtsc_append_main+4],	edx
CODE:00401A17
CODE:00401A17 @@no_rdtsc_supported:		      ;	...
CODE:00401A17		      mov     ecx, [ds:mp3_src_frame_end]
CODE:00401A1D		      sub     ecx, esi
CODE:00401A1F		      jb      fatalunexpected
CODE:00401A25		      mov     edi, [ds:main_data_pool_wr_ptr]
CODE:00401A2B		      lea     eax, [edi+ecx]
CODE:00401A2E		      cmp     eax, offset main_data_pool_wr_ptr
CODE:00401A33		      jbe     short @@pool_inrange
CODE:00401A35		      push    ecx
CODE:00401A36		      push    esi
CODE:00401A37		      lea     esi, [edi-200h]
CODE:00401A3D		      mov     edi, offset main_data_pool_start
CODE:00401A42		      mov     ecx, 80h
CODE:00401A47		      rep movsd
CODE:00401A49		      pop     esi
CODE:00401A4A		      pop     ecx
CODE:00401A4B
CODE:00401A4B @@pool_inrange:			      ;	...
CODE:00401A4B		      mov     eax, edi
CODE:00401A4D		      sub     eax, [ds:mp3_main_data_begin]
CODE:00401A53		      rep movsb
CODE:00401A55		      mov     [ds:main_data_pool_wr_ptr], edi
CODE:00401A5B		      cmp     eax, offset main_data_pool_start
CODE:00401A60		      js      short @@below_pool_start
CODE:00401A62		      mov     [ds:mp3_bitstream_start],	eax
CODE:00401A67		      mov     eax, 0
CODE:00401A6C		      mov     esi, [ds:mp3_bitstream_start] ; mp3mac_bitstream_set_position
CODE:00401A72		      mov     cl, al
CODE:00401A74		      shr     eax, 3
CODE:00401A77		      and     cl, 7
CODE:00401A7A		      add     esi, eax
CODE:00401A7C		      call    mp3_recollect_bits
CODE:00401A81		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:00401A83		      shl     ebp, cl
CODE:00401A85		      rol     eax, cl
CODE:00401A87		      xor     eax, ebp
CODE:00401A89		      sub     ch, cl
CODE:00401A8B		      jns     short @@cont
CODE:00401A8D		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:00401A8F		      add     ch, 10h
CODE:00401A92		      rol     ebp, cl
CODE:00401A94		      mov     bp, [esi]
CODE:00401A97		      add     esi, 2
CODE:00401A9A		      ror     bp, 8
CODE:00401A9E		      ror     ebp, cl
CODE:00401AA0
CODE:00401AA0 @@cont:				      ;	...
CODE:00401AA0		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_append_main
CODE:00401AA7		      jz      short @@no_rdtsc_supported@
CODE:00401AA9		      rdtsc
CODE:00401AAB		      add     [ds:rdtsc_append_main], eax
CODE:00401AB1		      adc     [ds:rdtsc_append_main+4],	edx
CODE:00401AB7
CODE:00401AB7 @@no_rdtsc_supported@:		      ;	...
CODE:00401AB7		      retn
CODE:00401AB8 ;	---------------------------------------------------------------------------
CODE:00401AB8
CODE:00401AB8 @@below_pool_start:		      ;	...
CODE:00401AB8		      mov     [ds:mp3_samples_output_size], 0
CODE:00401AC2		      jmp     short @@cont
CODE:00401AC2 endp	      mp3_bitstream_append_to_main_data_pool
CODE:00401AC2
CODE:00401AC2 ;	---------------------------------------------------------------------------
CODE:00401AC4		      align 10h
CODE:00401AD0
CODE:00401AD0 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401AD0
CODE:00401AD0
CODE:00401AD0 proc	      mp3_bitstream_read_scalefacs near	; ...
CODE:00401AD0		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_read_scalefac
CODE:00401AD7		      jz      short @@no_rdtsc_supported
CODE:00401AD9		      rdtsc
CODE:00401ADB		      sub     [ds:rdtsc_read_scalefac],	eax
CODE:00401AE1		      sbb     [ds:rdtsc_read_scalefac+4], edx
CODE:00401AE7
CODE:00401AE7 @@no_rdtsc_supported:		      ;	...
CODE:00401AE7		      lea     edi, [ebx+112]  ;	[ebx+$mp3gr_scale_factors]
CODE:00401AEA		      cmp     [ds:mp3_hdr_flag_lsf], 0
CODE:00401AF1		      jnz     @@body_lsf_nonzero
CODE:00401AF7		      mov     eax, [ebx+20]   ;	[ebx+$mp3gr_scalefac_compress]
CODE:00401AFA		      mov     dx, [ds:mp3_slen_table+eax*2] ; slen[0,1]
CODE:00401B02		      cmp     [dword ptr ebx+44], 2 ; [ebx+$mp3gr_block_type]
CODE:00401B06		      jnz     short @@body_lsf_zero_non_type2
CODE:00401B08		      push    ebx
CODE:00401B09		      mov     al, 18
CODE:00401B0B		      sub     al, [ebx+48]    ;	[ebx+$mp3gr_switch_point]
CODE:00401B0E		      mov     bl, al	      ;	@@get_bl_scalefacs_with_dl_bits	0
CODE:00401B10		      cmp     dl, 0
CODE:00401B13		      jz      short @@quickfill
CODE:00401B15
CODE:00401B15 @@scalefac_get_lop:		      ;	...
CODE:00401B15		      mov     cl, dl	      ;	LSB of edx, slen[i]
CODE:00401B17		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:00401B19		      shl     ebp, cl
CODE:00401B1B		      rol     eax, cl
CODE:00401B1D		      xor     eax, ebp
CODE:00401B1F		      sub     ch, cl
CODE:00401B21		      jns     short @@cont@
CODE:00401B23		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:00401B25		      add     ch, 10h
CODE:00401B28		      rol     ebp, cl
CODE:00401B2A		      mov     bp, [esi]
CODE:00401B2D		      add     esi, 2
CODE:00401B30		      ror     bp, 8
CODE:00401B34		      ror     ebp, cl
CODE:00401B36
CODE:00401B36 @@cont@:				      ;	...
CODE:00401B36		      stosb
CODE:00401B37		      dec     bl
CODE:00401B39		      jnz     short @@scalefac_get_lop
CODE:00401B3B		      jmp     short @@skip_quickfill
CODE:00401B3D ;	---------------------------------------------------------------------------
CODE:00401B3D
CODE:00401B3D @@quickfill:			      ;	...
CODE:00401B3D		      push    ecx
CODE:00401B3E		      movzx   ecx, bl
CODE:00401B41		      mov     al, 0	      ;	NO_INTENSITY_FLAG
CODE:00401B43		      rep stosb
CODE:00401B45		      pop     ecx
CODE:00401B46
CODE:00401B46 @@skip_quickfill:			      ;	...
CODE:00401B46		      shr     edx, 8
CODE:00401B49		      mov     bl, 18
CODE:00401B4B		      cmp     dl, 0	      ;	@@get_bl_scalefacs_with_dl_bits	0
CODE:00401B4E		      jz      short @@quickfill@
CODE:00401B50
CODE:00401B50 @@scalefac_get_lop@:		      ;	...
CODE:00401B50		      mov     cl, dl
CODE:00401B52		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:00401B54		      shl     ebp, cl
CODE:00401B56		      rol     eax, cl
CODE:00401B58		      xor     eax, ebp
CODE:00401B5A		      sub     ch, cl
CODE:00401B5C		      jns     short @@cont@@
CODE:00401B5E		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:00401B60		      add     ch, 10h
CODE:00401B63		      rol     ebp, cl
CODE:00401B65		      mov     bp, [esi]
CODE:00401B68		      add     esi, 2
CODE:00401B6B		      ror     bp, 8
CODE:00401B6F		      ror     ebp, cl
CODE:00401B71
CODE:00401B71 @@cont@@:				      ;	...
CODE:00401B71		      stosb
CODE:00401B72		      dec     bl
CODE:00401B74		      jnz     short @@scalefac_get_lop@
CODE:00401B76		      jmp     short @@skip_quickfill@
CODE:00401B78 ;	---------------------------------------------------------------------------
CODE:00401B78
CODE:00401B78 @@quickfill@:			      ;	...
CODE:00401B78		      push    ecx
CODE:00401B79		      movzx   ecx, bl
CODE:00401B7C		      mov     al, 0
CODE:00401B7E		      rep stosb
CODE:00401B80		      pop     ecx
CODE:00401B81
CODE:00401B81 @@skip_quickfill@:		      ;	...
CODE:00401B81		      pop     ebx
CODE:00401B82		      jmp     @@body_lsf_zeropad
CODE:00401B87 ;	---------------------------------------------------------------------------
CODE:00401B87
CODE:00401B87 @@body_lsf_zero_non_type2:	      ;	...
CODE:00401B87		      push    ebx
CODE:00401B88		      ror     edx, 8
CODE:00401B8B		      mov     dh, dl	      ;	slen[0,1,2,3] =	slen[0,0,1,1]
CODE:00401B8D		      rol     edx, 16
CODE:00401B90		      mov     dl, dh
CODE:00401B92		      mov     al, [ebx+40]    ;	[ebx+$mp3gr_scfsi]
CODE:00401B95		      shl     al, 4	      ;	move to	upper 4bit
CODE:00401B98		      mov     [byte ptr	ds:_@@scfsi], al
CODE:00401B9D		      mov     ebx, 5050506h   ;	num[0..3]
CODE:00401BA2
CODE:00401BA2 @@body_lsf_zero_non_type2_lop:	      ;	...
CODE:00401BA2		      shl     [byte ptr	ds:_@@scfsi], 1
CODE:00401BA8		      jb      short @@body_lsf_zero_non_type2_copy
CODE:00401BAA		      cmp     dl, 0	      ;	@@get_bl_scalefacs_with_dl_bits	0
CODE:00401BAD		      jz      short @@quickfill@@
CODE:00401BAF
CODE:00401BAF @@scalefac_get_lop@@:		      ;	...
CODE:00401BAF		      mov     cl, dl
CODE:00401BB1		      mov     eax, ebp
CODE:00401BB3		      shl     ebp, cl
CODE:00401BB5		      rol     eax, cl
CODE:00401BB7		      xor     eax, ebp
CODE:00401BB9		      sub     ch, cl
CODE:00401BBB		      jns     short @@cont@@@
CODE:00401BBD		      mov     cl, ch
CODE:00401BBF		      add     ch, 10h
CODE:00401BC2		      rol     ebp, cl
CODE:00401BC4		      mov     bp, [esi]
CODE:00401BC7		      add     esi, 2
CODE:00401BCA		      ror     bp, 8
CODE:00401BCE		      ror     ebp, cl
CODE:00401BD0
CODE:00401BD0 @@cont@@@:			      ;	...
CODE:00401BD0		      stosb
CODE:00401BD1		      dec     bl
CODE:00401BD3		      jnz     short @@scalefac_get_lop@@
CODE:00401BD5		      jmp     short @@skip_quickfill@@
CODE:00401BD7 ;	---------------------------------------------------------------------------
CODE:00401BD7
CODE:00401BD7 @@quickfill@@:			      ;	...
CODE:00401BD7		      push    ecx
CODE:00401BD8		      movzx   ecx, bl
CODE:00401BDB		      mov     al, 0
CODE:00401BDD		      rep stosb
CODE:00401BDF		      pop     ecx
CODE:00401BE0
CODE:00401BE0 @@skip_quickfill@@:		      ;	...
CODE:00401BE0		      jmp     short @@body_lsf_zero_non_type2_next
CODE:00401BE2 ;	---------------------------------------------------------------------------
CODE:00401BE2
CODE:00401BE2 @@body_lsf_zero_non_type2_copy:	      ;	...
CODE:00401BE2		      push    ecx
CODE:00401BE3		      mov     eax, esi
CODE:00401BE5		      movzx   ecx, bl	      ;	copy
CODE:00401BE8		      lea     esi, [edi-2464] ;	[edi-$mp3gr_entrysiz] ;	src=granule[0] ; from
CODE:00401BEE		      rep movsb		      ;	prev
CODE:00401BF0		      mov     esi, eax
CODE:00401BF2		      pop     ecx
CODE:00401BF3
CODE:00401BF3 @@body_lsf_zero_non_type2_next:	      ;	...
CODE:00401BF3		      shr     edx, 8	      ;	dl=next	slen
CODE:00401BF6		      shr     ebx, 8	      ;	bl=next	numfacs
CODE:00401BF9		      jnz     short @@body_lsf_zero_non_type2_lop
CODE:00401BFB		      pop     ebx
CODE:00401BFC		      mov     al, 0
CODE:00401BFE		      stosb
CODE:00401BFF		      jmp     @@body_lsf_done
CODE:00401C04 ;	---------------------------------------------------------------------------
CODE:00401C04
CODE:00401C04 @@body_lsf_nonzero:		      ;	...
CODE:00401C04		      mov     edx, [ebx+14h]  ;	[ebx+$mp3gr_scalefac_compress]
CODE:00401C07		      test    [ds:mp3_hdr_mode_ext], 1 ; MODE_EXT_I_STEREO
CODE:00401C11		      jz      short @@normal_scalefac
CODE:00401C13		      cmp     [ds:mp3_curr_channel], 0
CODE:00401C1A		      jz      short @@normal_scalefac
CODE:00401C1C		      add     edx, 512	      ;	for 2nd	channel	of intensity_stereo
CODE:00401C22
CODE:00401C22 @@normal_scalefac:		      ;	...
CODE:00401C22		      mov     al, [ds:(mp3_lsf_sf_expand_exploded_table+5)+edx*8]
CODE:00401C29		      or      [ebx+24],	al    ;	[ebx+$mp3gr_preflag]
CODE:00401C2C		      push    ebx
CODE:00401C2D		      movzx   eax, [ds:(mp3_lsf_sf_expand_exploded_table+4)+edx*8]
CODE:00401C35		      cmp     [dword ptr ebx+44], 2 ;  [ebx+$mp3gr_block_type]
CODE:00401C39		      jnz     short @@this_tindex1
CODE:00401C3B		      mov     ebx, [ebx+48]   ;	[ebx+$mp3gr_switch_point]
CODE:00401C3E		      lea     eax, [eax+ebx*4+4]
CODE:00401C42
CODE:00401C42 @@this_tindex1:			      ;	...
CODE:00401C42		      mov     ebx, [ds:mp3_lsf_nsf_table+eax]
CODE:00401C48		      mov     edx, [dword ptr ds:mp3_lsf_sf_expand_exploded_table+edx*8]
CODE:00401C4F
CODE:00401C4F @@scalefax_outer_lop:		      ;	...
CODE:00401C4F		      cmp     dl, 0	      ;	@@get_bl_scalefacs_with_dl_bits	1
CODE:00401C52		      jz      short @@@quickfil
CODE:00401C54
CODE:00401C54 @@@scalefac_get_lop:		      ;	...
CODE:00401C54		      mov     cl, dl
CODE:00401C56		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:00401C58		      shl     ebp, cl
CODE:00401C5A		      rol     eax, cl
CODE:00401C5C		      xor     eax, ebp
CODE:00401C5E		      sub     ch, cl
CODE:00401C60		      jns     short @@cont
CODE:00401C62		      mov     cl, ch
CODE:00401C64		      add     ch, 10h
CODE:00401C67		      rol     ebp, cl
CODE:00401C69		      mov     bp, [esi]
CODE:00401C6C		      add     esi, 2
CODE:00401C6F		      ror     bp, 8
CODE:00401C73		      ror     ebp, cl
CODE:00401C75
CODE:00401C75 @@cont:				      ;	...
CODE:00401C75		      mov     cl, dl	      ;	numbits
CODE:00401C77		      mov     ah, al
CODE:00401C79		      inc     ah	      ;	val+1
CODE:00401C7B		      shr     ah, cl	      ;	bit0=is.max.value
CODE:00401C7D		      shl     ah, 7	      ;	bit7=is.max.value
CODE:00401C80		      or      al, ah	      ;	apply NO_INTENSITY_FLAG
CODE:00401C82		      stosb
CODE:00401C83		      dec     bl
CODE:00401C85		      jnz     short @@@scalefac_get_lop
CODE:00401C87		      jmp     short @@@skip_quickfill
CODE:00401C89 ;	---------------------------------------------------------------------------
CODE:00401C89
CODE:00401C89 @@@quickfil:			      ;	...
CODE:00401C89		      push    ecx
CODE:00401C8A		      movzx   ecx, bl
CODE:00401C8D		      mov     al, 80h
CODE:00401C8F		      rep stosb
CODE:00401C91		      pop     ecx
CODE:00401C92
CODE:00401C92 @@@skip_quickfill:		      ;	...
CODE:00401C92		      shr     edx, 8
CODE:00401C95		      shr     ebx, 8
CODE:00401C98		      jnz     short @@scalefax_outer_lop
CODE:00401C9A		      pop     ebx
CODE:00401C9B
CODE:00401C9B @@body_lsf_zeropad:		      ;	...
CODE:00401C9B		      mov     edx, ecx
CODE:00401C9D		      lea     ecx, [ebx+152]  ;	[ebx+$mp3gr_scale_factors+40]
CODE:00401CA3		      sub     ecx, edi
CODE:00401CA5		      jb      short fatal_scalefactors
CODE:00401CA7		      mov     al, 0
CODE:00401CA9		      rep stosb
CODE:00401CAB		      mov     ecx, edx
CODE:00401CAD
CODE:00401CAD @@body_lsf_done:			      ;	...
CODE:00401CAD		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_read_scalefac
CODE:00401CB4		      jz      short @@@no_rdtsc_supported
CODE:00401CB6		      rdtsc
CODE:00401CB8		      add     [ds:rdtsc_read_scalefac],	eax
CODE:00401CBE		      adc     [ds:rdtsc_read_scalefac+4], edx
CODE:00401CC4
CODE:00401CC4 @@@no_rdtsc_supported:		      ;	...
CODE:00401CC4		      retn
CODE:00401CC5 ;	---------------------------------------------------------------------------
CODE:00401CC5
CODE:00401CC5 fatal_scalefactors:		      ;	...
CODE:00401CC5		      jmp     fatalunexpected
CODE:00401CC5 endp	      mp3_bitstream_read_scalefacs
CODE:00401CC5
CODE:00401CC5 ;	---------------------------------------------------------------------------
CODE:00401CCA		      align 10h
CODE:00401CD0
CODE:00401CD0 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401CD0
CODE:00401CD0
CODE:00401CD0 proc	      mp3_get_exponents_from_scale_factors near	; ...
CODE:00401CD0		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_xlat_scalefac
CODE:00401CD7		      jz      short @@no_rdtsc_supported
CODE:00401CD9		      rdtsc
CODE:00401CDB		      sub     [ds:rdtsc_xlat_scalefac],	eax
CODE:00401CE1		      sbb     [ds:rdtsc_xlat_scalefac+4], edx
CODE:00401CE7
CODE:00401CE7 @@no_rdtsc_supported:		      ;	...
CODE:00401CE7		      push    ecx	      ;	mp3mac_push_bitstream
CODE:00401CE8		      push    ebp
CODE:00401CE9		      push    esi
CODE:00401CEA		      mov     [ds:_@@rle_point], 0
CODE:00401CF4		      mov     cl, [ebx+52]    ;	[ebx+$mp3gr_scalefac_scale]
CODE:00401CF7		      mov     edi, offset mp3_exponents
CODE:00401CFC		      xor     edx, edx
CODE:00401CFE		      cmp     edx, [ebx+32]   ;	[ebx+$mp3gr_long_end]
CODE:00401D01		      jnb     short @@long_done
CODE:00401D03		      mov     eax, [ds:mp3_hdr_sample_rate_index]
CODE:00401D08		      imul    eax, 22
CODE:00401D0B		      lea     ebp, [mp3_band_size_long+eax]
CODE:00401D11		      mov     eax, [ebx+24]   ;	[ebx+$mp3gr_preflag]
CODE:00401D14		      imul    eax, 22
CODE:00401D17		      lea     esi, [mp3_pretab+eax]
CODE:00401D1D
CODE:00401D1D @@long_lop:			      ;	...
CODE:00401D1D		      movzx   eax, [byte ptr ebx+edx+112] ; [ebx+$mp3gr_scale_factors+edx]
CODE:00401D22		      and     al, 7Fh	      ;	strip NO_INTENSITY_FLAG
CODE:00401D24		      add     al, [esi+edx]
CODE:00401D27		      shl     eax, cl
CODE:00401D29		      neg     eax
CODE:00401D2B		      add     eax, [ebx+16]   ;	[ebx+$mp3gr_global_gain]
CODE:00401D2E		      shl     eax, 16
CODE:00401D31		      mov     al, [ebp+edx+0]
CODE:00401D35		      add     eax, [ds:_@@rle_point]
CODE:00401D3B		      mov     [word ptr	ds:_@@rle_point], ax
CODE:00401D41		      stosd
CODE:00401D42		      inc     edx
CODE:00401D43		      cmp     edx, [ebx+32]   ;	[ebx+$mp3gr_long_end]
CODE:00401D46		      jb      short @@long_lop
CODE:00401D48
CODE:00401D48 @@long_done:			      ;	...
CODE:00401D48		      mov     edx, [ebx+28]   ;	[ebx+$mp3gr_short_start]
CODE:00401D4B		      cmp     edx, 13
CODE:00401D4E		      jnb     @@skip_shorts
CODE:00401D54		      mov     eax, [ds:mp3_hdr_sample_rate_index]
CODE:00401D59		      imul    eax, 13
CODE:00401D5C		      lea     ebp, [mp3_band_size_short+eax]
CODE:00401D62		      mov     esi, [ebx+32]   ;	[ebx+$mp3gr_long_end]
CODE:00401D65		      mov     eax, [ebx+16]   ;	[ebx+$mp3gr_global_gain]
CODE:00401D65					      ;	IRP nn,0,1,2
CODE:00401D68		      sub     eax, [ebx+68]   ;	[ebx+$mp3gr_subblock_gain+nn*4]
CODE:00401D6B		      mov     [ds:_@@gains], eax ; [@@gains+nn*4]
CODE:00401D70		      mov     eax, [ebx+16]
CODE:00401D73		      sub     eax, [ebx+72]
CODE:00401D76		      mov     [ds:_@@gains+4], eax ; [@@gains+nn*4]
CODE:00401D7B		      mov     eax, [ebx+16]
CODE:00401D7E		      sub     eax, [ebx+76]   ;	[ebx+$mp3gr_subblock_gain+nn*4]
CODE:00401D81		      mov     [ds:_@@gains+8], eax ; [@@gains+nn*4]
CODE:00401D86
CODE:00401D86 @@short_lop:			      ;	...
CODE:00401D86		      movzx   eax, [byte ptr ebx+esi+112] ; [ebx+$mp3gr_scale_factors+esi]
CODE:00401D86					      ;	IRP nn,0,1,2
CODE:00401D8B		      and     al, 7Fh	      ;	strip NO_INTENSITY_FLAG
CODE:00401D8D		      inc     esi
CODE:00401D8E		      shl     eax, cl
CODE:00401D90		      neg     eax
CODE:00401D92		      add     eax, [ds:_@@gains] ; [@@gains+nn*4] ; nn=0
CODE:00401D98		      shl     eax, 16
CODE:00401D9B		      mov     al, [ebp+edx+0] ;	bstab[edx]
CODE:00401D9F		      add     eax, [ds:_@@rle_point]
CODE:00401DA5		      mov     [word ptr	ds:_@@rle_point], ax
CODE:00401DAB		      stosd		      ;	msw=val, lsw=point
CODE:00401DAC		      movzx   eax, [byte ptr ebx+esi+112] ; [ebx+$mp3gr_scalefac_scale]
CODE:00401DB1		      and     al, 7Fh
CODE:00401DB3		      inc     esi
CODE:00401DB4		      shl     eax, cl
CODE:00401DB6		      neg     eax
CODE:00401DB8		      add     eax, [ds:_@@gains+4] ; [@@gains+nn*4] ; nn = 1
CODE:00401DBE		      shl     eax, 16
CODE:00401DC1		      mov     al, [ebp+edx+0]
CODE:00401DC5		      add     eax, [ds:_@@rle_point]
CODE:00401DCB		      mov     [word ptr	ds:_@@rle_point], ax
CODE:00401DD1		      stosd
CODE:00401DD2		      movzx   eax, [byte ptr ebx+esi+70h]
CODE:00401DD7		      and     al, 7Fh
CODE:00401DD9		      inc     esi
CODE:00401DDA		      shl     eax, cl
CODE:00401DDC		      neg     eax
CODE:00401DDE		      add     eax, [ds:_@@gains+8] ; [@@gains+nn*4] ; nn=2
CODE:00401DE4		      shl     eax, 10h
CODE:00401DE7		      mov     al, [ebp+edx+0]
CODE:00401DEB		      add     eax, [ds:_@@rle_point]
CODE:00401DF1		      mov     [word ptr	ds:_@@rle_point], ax
CODE:00401DF7		      stosd
CODE:00401DF8		      inc     edx
CODE:00401DF9		      cmp     edx, 13
CODE:00401DFC		      jb      short @@short_lop
CODE:00401DFE
CODE:00401DFE @@skip_shorts:			      ;	...
CODE:00401DFE		      pop     esi	      ;	mp3mac_pop_bitstream
CODE:00401DFF		      pop     ebp
CODE:00401E00		      pop     ecx
CODE:00401E01		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_xlat_scalefac
CODE:00401E08		      jz      short @@no_rdtsc_supported@
CODE:00401E0A		      rdtsc
CODE:00401E0C		      add     [ds:rdtsc_xlat_scalefac],	eax
CODE:00401E12		      adc     [ds:rdtsc_xlat_scalefac+4], edx
CODE:00401E18
CODE:00401E18 @@no_rdtsc_supported@:		      ;	...
CODE:00401E18		      retn
CODE:00401E18 endp	      mp3_get_exponents_from_scale_factors
CODE:00401E18
CODE:00401E18 ;	---------------------------------------------------------------------------
CODE:00401E19		      align 10h
CODE:00401E20
CODE:00401E20 ;	===============	S U B R	O U T I	N E =======================================
CODE:00401E20
CODE:00401E20
CODE:00401E20 proc	      mp3_huffman_decode near ;	...
CODE:00401E20		      test    [byte ptr	ds:cpuid_flags], 10h ; in: ebx=granule,	out: [sb_hybrid..]
CODE:00401E20					      ;	timelog_start rdtsc_read_huffman
CODE:00401E27		      jz      short @@no_rdtsc_supported
CODE:00401E29		      rdtsc
CODE:00401E2B		      sub     [ds:rdtsc_read_huffman], eax
CODE:00401E31		      sbb     [ds:rdtsc_read_huffman+4], edx
CODE:00401E37
CODE:00401E37 @@no_rdtsc_supported:		      ;	...
CODE:00401E37		      mov     eax, [ebx+8]    ;	[ebx+$mp3gr_part2_3_end]
CODE:00401E3A		      shr     eax, 3
CODE:00401E3D		      add     eax, [ds:mp3_bitstream_start]
CODE:00401E43		      mov     [ds:_@@coarse_end], eax
CODE:00401E48		      xor     edi, edi
CODE:00401E4A		      mov     [ds:_@@rle_ptr], offset mp3_exponents
CODE:00401E54		      mov     [ds:_@rle_point],	0
CODE:00401E5E		      mov     [ds:_@@III], 0  ;	i=0
CODE:00401E68
CODE:00401E68 @@low_freq_lop_i:			      ;	...
CODE:00401E68		      mov     edx, [ds:_@@III] ; for i=0 to 2
CODE:00401E68					      ;	low frequencies	(called	big_values)...
CODE:00401E6E		      mov     eax, [ebx+edx*4+80] ; [ebx+$mp3gr_region_size+edx*4]
CODE:00401E72		      cmp     eax, 0
CODE:00401E75		      jz      @@low_freq_next_i
CODE:00401E7B		      mov     [ds:_@@JJJ], eax
CODE:00401E80		      mov     edx, [ebx+edx*4+56] ; [ebx+$mp3gr_table_select+edx*4]
CODE:00401E80					      ;	select vlc table
CODE:00401E84		      movzx   eax, [ds:mp3_huff_data+edx*2] ; get huff.table number
CODE:00401E8C		      cmp     eax, 0	      ;	huff.table
CODE:00401E8F		      jnz     short @@low_freq_nonzero
CODE:00401E91		      push    ecx
CODE:00401E92		      push    edi
CODE:00401E93		      lea     edi, [ebx+edi*4+160] ; [ebx+$mp3gr_sb_hybrid+edi*4]
CODE:00401E9A		      mov     ecx, [ds:_@@JJJ]
CODE:00401EA0		      shl     ecx, 1
CODE:00401EA2		      xor     eax, eax	      ;	when huff.table=0,
CODE:00401EA2					      ;	simply set NUM*2 entries to zero
CODE:00401EA4		      rep stosd
CODE:00401EA6		      pop     edi
CODE:00401EA7		      pop     ecx
CODE:00401EA8		      add     edi, [ds:_@@JJJ] ; raise index accordingly (by num*2)
CODE:00401EAE		      add     edi, [ds:_@@JJJ]
CODE:00401EB4		      jmp     @@low_freq_next_i
CODE:00401EB9 ;	---------------------------------------------------------------------------
CODE:00401EB9
CODE:00401EB9 @@low_freq_nonzero:		      ;	...
CODE:00401EB9		      mov     [ds:_@@vlc_table], eax ; =1..15
CODE:00401EBE		      cmp     eax, 14	      ;	only table 14..15 have linbits
CODE:00401EC1		      jnb     @@with_linbits  ;	so table 0..13 can use faster code...
CODE:00401EC7
CODE:00401EC7 @@low_freq_lop_j_small:		      ;	...
CODE:00401EC7		      cmp     esi, [ds:_@@coarse_end] ;	loop @@JJJ times..
CODE:00401ECD		      ja      @@small_near_end
CODE:00401ED3
CODE:00401ED3 @@small_not_end:			      ;	...
CODE:00401ED3		      cmp     edi, [ds:_@rle_point] ; @@get_runlength small
CODE:00401ED9		      jnb     @@rle_fetch_next_small
CODE:00401EDF
CODE:00401EDF @@rle_back_small:			      ;	...
CODE:00401EDF		      mov     edx, [ds:_@@vlc_table] ; get huffcode
CODE:00401EE5
CODE:00401EE5 @@get_child_lop:			      ;	...
CODE:00401EE5		      mov     cl, [ds:(huff_tree_buf+2)+edx*4] ; mp3mac_get_huffcode
CODE:00401EE5					      ;	in: edx=table, out: eax=data
CODE:00401EE5					      ;	bits (table size) (-7..-1)
CODE:00401EEC		      mov     dx, [word	ptr ds:huff_tree_buf+edx*4] ; code (child table)
CODE:00401EF4		      mov     eax, ebp	      ;	mov eax,mp3_col32 ; peek bitstream
CODE:00401EF6		      shr     eax, cl
CODE:00401EF8		      add     edx, eax
CODE:00401EFA		      mov     cl, [ds:(huff_tree_buf+2)+edx*4] ; bits (of entry)
CODE:00401F01		      cmp     cl, 0
CODE:00401F04		      js      short @@got_child
CODE:00401F06		      movzx   eax, [word ptr ds:huff_tree_buf+edx*4] ; return data value
CODE:00401F0E		      shl     ebp, cl	      ;	shl mp3_col32,cl ; discard cl bits
CODE:00401F10		      sub     ch, cl	      ;	sub mp3_colNN,cl
CODE:00401F12		      jns     short @@got_done
CODE:00401F14		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:00401F14					      ;	mov cl,mp3_colNN ; byte	ptr [mp3_numbits_collected]
CODE:00401F16		      add     ch, 16	      ;	byte ptr [mp3_numbits_collected]
CODE:00401F19		      rol     ebp, cl	      ;	dword ptr [mp3_collected_data]
CODE:00401F1B		      mov     bp, [esi]
CODE:00401F1E		      add     esi, 2
CODE:00401F21		      ror     bp, 8	      ;	ror mp3_col16,8	; endianess
CODE:00401F25		      ror     ebp, cl	      ;	ror mp3_col32,cl ; dword ptr [mp3_collected_data]
CODE:00401F27		      jmp     short @@got_done
CODE:00401F27 ;	---------------------------------------------------------------------------
CODE:00401F29		      align 10h
CODE:00401F30
CODE:00401F30 @@got_child:			      ;	...
CODE:00401F30		      shl     ebp, 9	      ;	shl mp3_col32,CHILD_BITS
CODE:00401F30					      ;	discard	7 bits
CODE:00401F30					      ;	(assuming that parents are always 7bit wide)
CODE:00401F33		      sub     ch, 9
CODE:00401F36		      jns     short @@get_child_lop
CODE:00401F38		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:00401F3A		      add     ch, 10h
CODE:00401F3D		      rol     ebp, cl
CODE:00401F3F		      mov     bp, [esi]
CODE:00401F42		      add     esi, 2
CODE:00401F45		      ror     bp, 8
CODE:00401F49		      ror     ebp, cl
CODE:00401F4B		      jmp     short @@get_child_lop
CODE:00401F4B ;	---------------------------------------------------------------------------
CODE:00401F4D		      align 10h
CODE:00401F50
CODE:00401F50 @@got_done:			      ;	...
CODE:00401F50		      push    eax
CODE:00401F51		      shr     eax, 4	      ;	x
CODE:00401F54		      jz      short @@this_sign	; @@getexpval 0	; @@getexpval macro has_linbits
CODE:00401F54					      ;	eax=0 (without sign) ; when x=0
CODE:00401F56		      mov     edx, [ds:_@@rle_val_x_40h]
CODE:00401F5C		      mov     eax, [ds:mp3_expval_table+edx+eax*4]
CODE:00401F63		      dec     ch	      ;	mp3mac_get_bit_to_cy
CODE:00401F63					      ;	;jnc  short @@this_sign
CODE:00401F63					      ;	;neg  eax
CODE:00401F65		      shl     ebp, 1	      ;	dec mp3_colNN ;	shl mp3_col32,1	; cy=data
CODE:00401F67		      sbb     edx, edx	      ;	cy=0,1 --> 0,FFFFFFFF
CODE:00401F69		      xor     eax, edx	      ;	invert if cy was 1 ; get sign (negate if sign=1)
CODE:00401F6B		      sub     eax, edx	      ;	add 1 if cy was	1
CODE:00401F6D
CODE:00401F6D @@this_sign:			      ;	...
CODE:00401F6D		      mov     [ebx+edi*4+160], eax ; [ebx+$mp3gr_sb_hybrid+edi*4+0]
CODE:00401F74		      pop     eax
CODE:00401F75		      and     eax, 0Fh	      ;	y
CODE:00401F78		      jz      short @@this_sign@ ; @@getexpval 0
CODE:00401F7A		      mov     edx, [ds:_@@rle_val_x_40h]
CODE:00401F80		      mov     eax, [ds:mp3_expval_table+edx+eax*4]
CODE:00401F87		      dec     ch
CODE:00401F89		      shl     ebp, 1
CODE:00401F8B		      sbb     edx, edx
CODE:00401F8D		      xor     eax, edx
CODE:00401F8F		      sub     eax, edx
CODE:00401F91
CODE:00401F91 @@this_sign@:			      ;	...
CODE:00401F91		      mov     [ebx+edi*4+164], eax ; [ebx+$mp3gr_sb_hybrid+edi*4+4]
CODE:00401F98		      add     edi, 2
CODE:00401F9B		      dec     [ds:_@@JJJ]
CODE:00401FA1		      jnz     @@low_freq_lop_j_small
CODE:00401FA7		      jmp     @@low_freq_next_i
CODE:00401FA7 ;	---------------------------------------------------------------------------
CODE:00401FAC		      align 10h
CODE:00401FB0
CODE:00401FB0 @@small_near_end:			      ;	...
CODE:00401FB0		      mov     eax, esi	      ;	mp3mac_bitstream_get_position
CODE:00401FB2		      sub     eax, [ds:mp3_bitstream_start]
CODE:00401FB8		      movsx   edx, ch	      ;	mp3_colNN
CODE:00401FBB		      neg     edx
CODE:00401FBD		      lea     eax, [edx+eax*8-16]
CODE:00401FC1		      cmp     eax, [ebx+8]    ;	[ebx+$mp3gr_part2_3_end]
CODE:00401FC4		      jb      @@small_not_end
CODE:00401FCA		      jmp     @@low_freq_next_i
CODE:00401FCA ;	---------------------------------------------------------------------------
CODE:00401FCF		      align 10h
CODE:00401FD0
CODE:00401FD0 @@with_linbits:			      ;	...
CODE:00401FD0		      movzx   eax, [ds:(mp3_huff_data+1)+edx*2]
CODE:00401FD8		      mov     [ds:_@@linbits], eax
CODE:00401FDD
CODE:00401FDD @@low_freq_lop_j:			      ;	...
CODE:00401FDD		      cmp     esi, [ds:_@@coarse_end] ;	mp3mac_bitstream_get_position
CODE:00401FDD					      ;	loop @@JJJ times...
CODE:00401FE3		      ja      @@lop_j_near_end
CODE:00401FE9
CODE:00401FE9 @@small_not_end@:			      ;	...
CODE:00401FE9		      cmp     edi, [ds:_@rle_point] ; @@get_runlength small
CODE:00401FEF		      jnb     @@rle_fetch_next_full
CODE:00401FF5
CODE:00401FF5 @@rle_back_full:			      ;	...
CODE:00401FF5		      mov     edx, [ds:_@@vlc_table] ; get huffcode
CODE:00401FFB
CODE:00401FFB @@get_child_lop@:			      ;	...
CODE:00401FFB		      mov     cl, [ds:(huff_tree_buf+2)+edx*4] ; mp3mac_get_huffcode
CODE:00401FFB					      ;	in: edx=table, out: eax=data
CODE:00401FFB					      ;	bits (table size) (-7..-1)
CODE:00402002		      mov     dx, [word	ptr ds:huff_tree_buf+edx*4] ; code (child table)
CODE:0040200A		      mov     eax, ebp
CODE:0040200C		      shr     eax, cl
CODE:0040200E		      add     edx, eax
CODE:00402010		      mov     cl, [ds:(huff_tree_buf+2)+edx*4] ; bits (of entry)
CODE:00402017		      cmp     cl, 0
CODE:0040201A		      js      short @@got_child@
CODE:0040201C		      movzx   eax, [word ptr ds:huff_tree_buf+edx*4] ; return data value
CODE:00402024		      shl     ebp, cl	      ;	discard	cl bits
CODE:00402026		      sub     ch, cl
CODE:00402028		      jns     short @@got_done@
CODE:0040202A		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:0040202C		      add     ch, 10h
CODE:0040202F		      rol     ebp, cl
CODE:00402031		      mov     bp, [esi]
CODE:00402034		      add     esi, 2
CODE:00402037		      ror     bp, 8
CODE:0040203B		      ror     ebp, cl
CODE:0040203D		      jmp     short @@got_done@
CODE:0040203D ;	---------------------------------------------------------------------------
CODE:0040203F		      align 10h
CODE:00402040
CODE:00402040 @@got_child@:			      ;	...
CODE:00402040		      shl     ebp, 9
CODE:00402043		      sub     ch, 9
CODE:00402046		      jns     short @@get_child_lop@
CODE:00402048		      mov     cl, ch
CODE:0040204A		      add     ch, 10h
CODE:0040204D		      rol     ebp, cl
CODE:0040204F		      mov     bp, [esi]
CODE:00402052		      add     esi, 2
CODE:00402055		      ror     bp, 8
CODE:00402059		      ror     ebp, cl
CODE:0040205B		      jmp     short @@get_child_lop@
CODE:0040205B ;	---------------------------------------------------------------------------
CODE:0040205D		      align 10h
CODE:00402060
CODE:00402060 @@got_done@:			      ;	...
CODE:00402060		      push    eax
CODE:00402061		      shr     eax, 4	      ;	x
CODE:00402064		      jz      short @@@this_sign ; @@getexpval 1
CODE:00402066		      mov     edx, [ds:_@@rle_val]
CODE:0040206C		      cmp     eax, 15
CODE:0040206F		      jb      short @@small   ;	when x=1..14
CODE:00402071		      mov     cl, [byte	ptr ds:_@@linbits] ; =0..13 ; when x=15, with linbits
CODE:00402077		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl ; value = 0..1FFFh
CODE:00402079		      shl     ebp, cl	      ;	mp3mac_collect_more
CODE:0040207B		      rol     eax, cl
CODE:0040207D		      xor     eax, ebp
CODE:0040207F		      sub     ch, cl
CODE:00402081		      jns     short @@cont
CODE:00402083		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:00402085		      add     ch, 16
CODE:00402088		      rol     ebp, cl
CODE:0040208A		      mov     bp, [esi]
CODE:0040208D		      add     esi, 2
CODE:00402090		      ror     bp, 8
CODE:00402094		      ror     ebp, cl
CODE:00402096
CODE:00402096 @@cont:				      ;	...
CODE:00402096		      mov     cl, dl	      ;	exponent.lsb
CODE:00402098		      and     cl, 3	      ;	exponent.lsb
CODE:0040209B		      shr     edx, 2	      ;	exponent.msb
CODE:0040209E		      lea     eax, [+eax*4+60] ; (value+15)*4
CODE:004020A5		      or      al, cl	      ;	exponent.lsb+(value+15)*4
CODE:004020A7		      mov     cl, [ds:mp3_table_4_3_exp+eax]
CODE:004020AD		      mov     eax, [ds:mp3_table_4_3_value+eax*4]
CODE:004020B4		      sub     cl, dl	      ;	sub exponent.msb
CODE:004020B6		      shr     eax, cl
CODE:004020B8		      cmp     cl, 31
CODE:004020BB		      jbe     short @@get_sign
CODE:004020BD		      xor     eax, eax
CODE:004020BF		      jmp     short @@get_sign
CODE:004020C1 ;	---------------------------------------------------------------------------
CODE:004020C1
CODE:004020C1 @@small:				      ;	...
CODE:004020C1		      shl     edx, 6	      ;	shl edx,4+2 ; mul16*4 ;	when x<15 aka x=1..14
CODE:004020C4		      mov     eax, [ds:mp3_expval_table+edx+eax*4]
CODE:004020CB
CODE:004020CB @@get_sign:			      ;	...
CODE:004020CB		      dec     ch	      ;	mp3mac_get_bit_to_cy
CODE:004020CD		      shl     ebp, 1
CODE:004020CF		      sbb     edx, edx	      ;	get sign (negate if sign=1)
CODE:004020D1		      xor     eax, edx
CODE:004020D3		      sub     eax, edx
CODE:004020D5
CODE:004020D5 @@@this_sign:			      ;	...
CODE:004020D5		      mov     [ebx+edi*4+160], eax ; [ebx+$mp3gr_sb_hybrid+edi*4+0]
CODE:004020DC		      pop     eax
CODE:004020DD		      and     eax, 0Fh	      ;	y
CODE:004020E0		      jz      short @@@this_sign@ ; @@getexpval	1
CODE:004020E2		      mov     edx, [ds:_@@rle_val]
CODE:004020E8		      cmp     eax, 0Fh
CODE:004020EB		      jb      short @@small@
CODE:004020ED		      mov     cl, [byte	ptr ds:_@@linbits]
CODE:004020F3		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:004020F5		      shl     ebp, cl
CODE:004020F7		      rol     eax, cl
CODE:004020F9		      xor     eax, ebp
CODE:004020FB		      sub     ch, cl
CODE:004020FD		      jns     short @cont@
CODE:004020FF		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:00402101		      add     ch, 10h
CODE:00402104		      rol     ebp, cl
CODE:00402106		      mov     bp, [esi]
CODE:00402109		      add     esi, 2
CODE:0040210C		      ror     bp, 8
CODE:00402110		      ror     ebp, cl
CODE:00402112
CODE:00402112 @cont@:				      ;	...
CODE:00402112		      mov     cl, dl
CODE:00402114		      and     cl, 3
CODE:00402117		      shr     edx, 2
CODE:0040211A		      lea     eax, [+eax*4+60]
CODE:00402121		      or      al, cl
CODE:00402123		      mov     cl, [ds:mp3_table_4_3_exp+eax]
CODE:00402129		      mov     eax, [ds:mp3_table_4_3_value+eax*4]
CODE:00402130		      sub     cl, dl
CODE:00402132		      shr     eax, cl
CODE:00402134		      cmp     cl, 31
CODE:00402137		      jbe     short @@get_sign@
CODE:00402139		      xor     eax, eax
CODE:0040213B		      jmp     short @@get_sign@
CODE:0040213D ;	---------------------------------------------------------------------------
CODE:0040213D
CODE:0040213D @@small@:				      ;	...
CODE:0040213D		      shl     edx, 6
CODE:00402140		      mov     eax, [ds:mp3_expval_table+edx+eax*4]
CODE:00402147
CODE:00402147 @@get_sign@:			      ;	...
CODE:00402147		      dec     ch	      ;	dec mp3_colNN
CODE:00402149		      shl     ebp, 1	      ;	shl mp3_col32,1	; cy=data
CODE:0040214B		      sbb     edx, edx	      ;	cy=0,1 --> 0,FFFFFFFF
CODE:0040214D		      xor     eax, edx	      ;	invert if cy was 1
CODE:0040214F		      sub     eax, edx	      ;	add 1 if cy was	1
CODE:00402151
CODE:00402151 @@@this_sign@:			      ;	...
CODE:00402151		      mov     [ebx+edi*4+164], eax ; [ebx+$mp3gr_sb_hybrid+edi*4+4]
CODE:00402158		      add     edi, 2	      ;	next j
CODE:0040215B		      dec     [ds:_@@JJJ]
CODE:00402161		      jnz     @@low_freq_lop_j
CODE:00402167
CODE:00402167 @@low_freq_next_i:		      ;	...
CODE:00402167		      inc     [ds:_@@III]     ;	next i
CODE:0040216D		      cmp     [ds:_@@III], 3
CODE:00402174		      jb      @@low_freq_lop_i
CODE:0040217A		      cmp     edi, 572	      ;	aka 576-4 ; skip if less than 4	entries	left
CODE:00402180		      ja      @@high_freq_done
CODE:00402186
CODE:00402186 @@high_freq_lop:			      ;	...
CODE:00402186		      cmp     esi, [ds:_@@coarse_end]
CODE:0040218C		      jbe     short @@high_freq_inrange
CODE:0040218E		      mov     eax, esi	      ;	mp3mac_bitstream_get_position
CODE:00402190		      sub     eax, [ds:mp3_bitstream_start]
CODE:00402196		      movsx   edx, ch	      ;	mp3_colNN
CODE:00402199		      neg     edx
CODE:0040219B		      lea     eax, [edx+eax*8-16]
CODE:0040219F		      cmp     eax, [ebx+8]    ;	[ebx+$mp3gr_part2_3_end] ; check end
CODE:004021A2		      jb      short @@high_freq_inrange	; not yet end
CODE:004021A4		      jz      @@high_freq_done ; okay, exact end
CODE:004021AA		      cmp     edi, 4
CODE:004021AD		      jb      short @@high_freq_cannot_stepback
CODE:004021AF		      sub     edi, 4	      ;	stepback, s_index-4 ; dst stepback
CODE:004021B2
CODE:004021B2 @@high_freq_cannot_stepback:	      ;	...
CODE:004021B2		      jmp     @@high_freq_done
CODE:004021B2 ;	---------------------------------------------------------------------------
CODE:004021B7		      align 10h
CODE:004021C0
CODE:004021C0 @@high_freq_inrange:		      ;	...
CODE:004021C0		      mov     edx, [ebx+24h]  ;	[ebx+$mp3gr_count1table_select]
CODE:004021C0					      ;	get huffcode (quad_vlc)
CODE:004021C3
CODE:004021C3 @@get_child_lop@@:		      ;	...
CODE:004021C3		      mov     cl, [ds:(huff_tree_buf+2)+edx*4] ; mp3mac_get_huffcode
CODE:004021CA		      mov     dx, [word	ptr ds:huff_tree_buf+edx*4]
CODE:004021D2		      mov     eax, ebp
CODE:004021D4		      shr     eax, cl
CODE:004021D6		      add     edx, eax
CODE:004021D8		      mov     cl, [ds:(huff_tree_buf+2)+edx*4]
CODE:004021DF		      cmp     cl, 0
CODE:004021E2		      js      short @@got_child@@
CODE:004021E4		      movzx   eax, [word ptr ds:huff_tree_buf+edx*4]
CODE:004021EC		      shl     ebp, cl
CODE:004021EE		      sub     ch, cl
CODE:004021F0		      jns     short @@got_done@@
CODE:004021F2		      mov     cl, ch
CODE:004021F4		      add     ch, 10h
CODE:004021F7		      rol     ebp, cl
CODE:004021F9		      mov     bp, [esi]
CODE:004021FC		      add     esi, 2
CODE:004021FF		      ror     bp, 8
CODE:00402203		      ror     ebp, cl
CODE:00402205		      jmp     short @@got_done@@
CODE:00402205 ;	---------------------------------------------------------------------------
CODE:00402207		      align 10h
CODE:00402210
CODE:00402210 @@got_child@@:			      ;	...
CODE:00402210		      shl     ebp, 9
CODE:00402213		      sub     ch, 9
CODE:00402216		      jns     short @@get_child_lop@@
CODE:00402218		      mov     cl, ch
CODE:0040221A		      add     ch, 10h
CODE:0040221D		      rol     ebp, cl
CODE:0040221F		      mov     bp, [esi]
CODE:00402222		      add     esi, 2
CODE:00402225		      ror     bp, 8
CODE:00402229		      ror     ebp, cl
CODE:0040222B		      jmp     short @@get_child_lop@@
CODE:0040222B ;	---------------------------------------------------------------------------
CODE:0040222D		      align 10h
CODE:00402230
CODE:00402230 @@got_done@@:			      ;	...
CODE:00402230		      mov     dl, al	      ;	flags
CODE:00402232		      shl     dl, 4	      ;	flags, to upper	4bit
CODE:00402235		      mov     dh, 4	      ;	lopcount
CODE:00402237
CODE:00402237 @@high_freq_flag_lop:		      ;	...
CODE:00402237		      xor     eax, eax
CODE:00402239		      shl     dl, 1	      ;	flag
CODE:0040223B		      jnb     short @@high_freq_flag_this
CODE:0040223D		      cmp     edi, [ds:_@rle_point] ; @@get_runlength quads
CODE:00402243		      jnb     @@rle_fetch_next_quads
CODE:00402249
CODE:00402249 @@rle_back_quads:			      ;	...
CODE:00402249		      mov     eax, [ds:_@@rle_val]
CODE:0040224E		      mov     eax, [ds:mp3_exp_table+eax*4] ; xlat and get sign
CODE:00402255		      dec     ch	      ;	mp3mac_get_bit_to_cy
CODE:00402257		      shl     ebp, 1
CODE:00402259		      jnb     short @@high_freq_flag_this ;
CODE:00402259					      ;	sbb edx, edx ; cy=0,1 --> 0,FFFFFFFF
CODE:00402259					      ;	xor eax, edx ; invert if cy was	1
CODE:00402259					      ;	sub eax, edx ; add 1 if	cy was 1
CODE:0040225B		      neg     eax
CODE:0040225D
CODE:0040225D @@high_freq_flag_this:		      ;	...
CODE:0040225D		      mov     [ebx+edi*4+160], eax ; [ebx+$mp3gr_sb_hybrid+edi*4+0]
CODE:00402264		      inc     edi
CODE:00402265		      dec     dh
CODE:00402267		      jnz     short @@high_freq_flag_lop
CODE:00402269		      cmp     edi, 572	      ;	aka 576-4 ; loop while space for another 4 values
CODE:0040226F		      jbe     @@high_freq_lop
CODE:00402275
CODE:00402275 @@high_freq_done:			      ;	...
CODE:00402275		      mov     [ebx+92],	edi   ;	[ebx+$mp3gr_num_nonzero_hybrids]
CODE:00402278		      push    ecx
CODE:00402279		      mov     ecx, 576	      ;	end
CODE:0040227E		      sub     ecx, edi	      ;	remain = end-curr
CODE:0040227E					      ;	zeropad	remaining entries (can be 0 or 2 dwords,
CODE:0040227E					      ;	or more. If above loop was aborted)
CODE:00402280		      lea     edi, [ebx+edi*4+160] ; [ebx+$mp3gr_sb_hybrid+edi*4]
CODE:00402287		      xor     eax, eax
CODE:00402289		      rep stosd
CODE:0040228B		      pop     ecx
CODE:0040228C		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_read_huffman
CODE:00402293		      jz      short @@no_rdtsc_supported@
CODE:00402295		      rdtsc
CODE:00402297		      add     [ds:rdtsc_read_huffman], eax
CODE:0040229D		      adc     [ds:rdtsc_read_huffman+4], edx
CODE:004022A3
CODE:004022A3 @@no_rdtsc_supported@:		      ;	...
CODE:004022A3		      clc		      ;	out: cy=0=okay
CODE:004022A4		      retn
CODE:004022A5 ;	---------------------------------------------------------------------------
CODE:004022A5		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_read_huffman
CODE:004022AC		      jz      short @@no_rdtsc_supported@@
CODE:004022AE		      rdtsc
CODE:004022B0		      add     [ds:rdtsc_read_huffman], eax
CODE:004022B6		      adc     [ds:rdtsc_read_huffman+4], edx
CODE:004022BC
CODE:004022BC @@no_rdtsc_supported@@:		      ;	...
CODE:004022BC		      stc		      ;	out: cy=1=error
CODE:004022BD		      retn
CODE:004022BD ;	---------------------------------------------------------------------------
CODE:004022BE		      align 10h
CODE:004022C0
CODE:004022C0 @@rle_fetch_next_small:		      ;	...
CODE:004022C0		      mov     eax, [ds:_@@rle_ptr] ; @@next_runlength small
CODE:004022C5		      add     [ds:_@@rle_ptr], 4
CODE:004022CC		      mov     eax, [eax]
CODE:004022CE		      cmp     di, ax
CODE:004022D1		      jnb     short @@rle_fetch_next_small
CODE:004022D3		      mov     [word ptr	ds:_@rle_point], ax
CODE:004022D9		      shr     eax, 16
CODE:004022DC		      mov     [ds:_@@rle_val], eax
CODE:004022E1		      shl     eax, 6
CODE:004022E4		      mov     [ds:_@@rle_val_x_40h], eax
CODE:004022E9		      jmp     @@rle_back_small
CODE:004022E9 ;	---------------------------------------------------------------------------
CODE:004022EE		      align 10h
CODE:004022F0
CODE:004022F0 @@rle_fetch_next_full:		      ;	...
CODE:004022F0		      mov     eax, [ds:_@@rle_ptr] ; @@next_runlength full
CODE:004022F5		      add     [ds:_@@rle_ptr], 4
CODE:004022FC		      mov     eax, [eax]
CODE:004022FE		      cmp     di, ax
CODE:00402301		      jnb     short @@rle_fetch_next_full
CODE:00402303		      mov     [word ptr	ds:_@rle_point], ax
CODE:00402309		      shr     eax, 16
CODE:0040230C		      mov     [ds:_@@rle_val], eax
CODE:00402311		      shl     eax, 6
CODE:00402314		      mov     [ds:_@@rle_val_x_40h], eax
CODE:00402319		      jmp     @@rle_back_full
CODE:00402319 ;	---------------------------------------------------------------------------
CODE:0040231E		      align 10h
CODE:00402320
CODE:00402320 @@rle_fetch_next_quads:		      ;	...
CODE:00402320		      mov     eax, [ds:_@@rle_ptr] ; msw=val, lsw=point
CODE:00402325		      add     [ds:_@@rle_ptr], 4 ; 2+2
CODE:0040232C		      mov     eax, [eax]
CODE:0040232E		      cmp     di, ax	      ;	needed if rle fetching was skipped
CODE:00402331		      jnb     short @@rle_fetch_next_quads
CODE:00402333		      mov     [word ptr	ds:_@rle_point], ax
CODE:00402339		      shr     eax, 16
CODE:0040233C		      mov     [ds:_@@rle_val], eax
CODE:00402341		      jmp     @@rle_back_quads
CODE:00402341 ;	---------------------------------------------------------------------------
CODE:00402346		      align 10h
CODE:00402350
CODE:00402350 @@lop_j_near_end:			      ;	...
CODE:00402350		      mov     eax, esi
CODE:00402352		      sub     eax, [ds:mp3_bitstream_start]
CODE:00402358		      movsx   edx, ch
CODE:0040235B		      neg     edx
CODE:0040235D		      lea     eax, [edx+eax*8-16]
CODE:00402361		      cmp     eax, [ebx+8]
CODE:00402364		      jb      @@small_not_end@
CODE:0040236A		      jmp     @@low_freq_next_i
CODE:0040236A endp	      mp3_huffman_decode
CODE:0040236A
CODE:0040236A ;	---------------------------------------------------------------------------
CODE:0040236F		      align 10h
CODE:00402370
CODE:00402370 ;	===============	S U B R	O U T I	N E =======================================
CODE:00402370
CODE:00402370
CODE:00402370 proc	      mp3_compute_stereo near ;	...
CODE:00402370		      cmp     [ds:mp3_output_num_channels], 2 ;	in: ebx=granule(s)
CODE:00402377		      jnz     short @@no_stereo
CODE:00402379		      cmp     [ds:mp3_hdr_mode_ext], 2 ; MODE_EXT_MS_STEREO
CODE:00402379					      ;	only MS	stereo
CODE:00402380		      jz      short mp3_compute_ms_stereo
CODE:00402382		      test    [ds:mp3_hdr_mode_ext], 1 ; MODE_EXT_I_STEREO
CODE:00402382					      ;	intensity stereo (optionally with MS stereo)
CODE:0040238C		      jnz     short mp3_compute_i_stereo
CODE:0040238E
CODE:0040238E @@no_stereo:			      ;	...
CODE:0040238E		      retn
CODE:0040238F ;	---------------------------------------------------------------------------
CODE:0040238F
CODE:0040238F mp3_compute_ms_stereo:		      ;	...
CODE:0040238F		      test    [byte ptr	ds:cpuid_flags], 10h ; ms_stereo is most commonly used
CODE:0040238F					      ;	the 1/sqrt(2) normalization factor is included
CODE:0040238F					      ;	in the global gain
CODE:00402396		      jz      short @@no_rdtsc_supported ; timelog_start rdtsc_ms_stereo
CODE:00402398		      rdtsc
CODE:0040239A		      sub     [ds:rdtsc_ms_stereo], eax
CODE:004023A0		      sbb     [ds:rdtsc_ms_stereo+4], edx
CODE:004023A6
CODE:004023A6 @@no_rdtsc_supported:		      ;	...
CODE:004023A6		      lea     edi, [ebx+5088] ;	[ebx+$mp3gr_sb_hybrid+$mp3gr_entrysiz*2]
CODE:004023A6					      ;	for ch1	(2nd channel)
CODE:004023AC		      mov     ecx, [ebx+92]   ;	[ebx+$mp3gr_num_nonzero_hybrids] ; ch0
CODE:004023AF		      mov     eax, [ebx+5020] ;	[ebx+$mp3gr_num_nonzero_hybrids+($mp3gr_entrysiz*2)] ; ch1
CODE:004023B5		      cmp     ecx, eax
CODE:004023B7		      ja      short @@this_len
CODE:004023B9		      mov     ecx, eax
CODE:004023BB
CODE:004023BB @@this_len:			      ;	...
CODE:004023BB		      jecxz   short @@ms_stereo_done
CODE:004023BD		      mov     [ebx+92],	ecx   ;	[ebx+$mp3gr_num_nonzero_hybrids] ; ch0
CODE:004023C0		      mov     [ebx+5020], ecx ;	[ebx+$mp3gr_num_nonzero_hybrids+($mp3gr_entrysiz*2)] ; ch1
CODE:004023C6
CODE:004023C6 @@ms_stereo_lop:			      ;	...
CODE:004023C6		      mov     eax, [edi-4928] ;	for i=0	to 576-1
CODE:004023C6					      ;	[edi+@@ch0]
CODE:004023C6					      ;	@@ch0 equ (-$mp3gr_entrysiz*2) ; granule for channel=0
CODE:004023C6					      ;	tmp0 = granule.ch0.sb_hybrid[i]
CODE:004023CC		      mov     edx, [edi]      ;	@@ch1 equ 0 ; granule for channel=1
CODE:004023CC					      ;	[edi+@@ch1]
CODE:004023CC					      ;	tmp1 = granule.ch1.sb_hybrid[i]
CODE:004023CE		      sub     eax, edx	      ;	tmp0 - tmp1
CODE:004023D0		      lea     edx, [eax+edx*2] ; tmp0 +	tmp1
CODE:004023D3		      mov     [edi-4928], edx ;	[edi+@@ch0]
CODE:004023D3					      ;	granule.ch0.sb_hybrid[i] = tmp0	+ tmp1
CODE:004023D9		      stosd		      ;	[edi+@@ch1]
CODE:004023D9					      ;	granule.ch1.sb_hybrid[i] = tmp0	- tmp1
CODE:004023DA		      dec     ecx
CODE:004023DB		      jnz     short @@ms_stereo_lop
CODE:004023DD
CODE:004023DD @@ms_stereo_done:			      ;	...
CODE:004023DD		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_ms_stereo
CODE:004023E4		      jz      short @@no_rdtsc_supported@
CODE:004023E6		      rdtsc
CODE:004023E8		      add     [ds:rdtsc_ms_stereo], eax
CODE:004023EE		      adc     [ds:rdtsc_ms_stereo+4], edx
CODE:004023F4
CODE:004023F4 @@no_rdtsc_supported@:		      ;	...
CODE:004023F4		      retn
CODE:004023F5 ;	---------------------------------------------------------------------------
CODE:004023F5
CODE:004023F5 mp3_compute_i_stereo:		      ;	...
CODE:004023F5		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_i_stereo
CODE:004023FC		      jz      short @@@no_rdtsc_supported
CODE:004023FE		      rdtsc
CODE:00402400		      sub     [ds:rdtsc_i_stereo], eax
CODE:00402406		      sbb     [ds:rdtsc_i_stereo+4], edx
CODE:0040240C
CODE:0040240C @@@no_rdtsc_supported:		      ;	...
CODE:0040240C		      mov     [dword ptr ebx+92], 576 ;	ch0
CODE:0040240C					      ;	[ebx+$mp3gr_num_nonzero_hybrids]
CODE:00402413		      mov     [dword ptr ebx+5020], 576	; ch1
CODE:00402413					      ;	[ebx+$mp3gr_num_nonzero_hybrids+($mp3gr_entrysiz*2)]
CODE:0040241D		      mov     eax, [ebx+32]   ;	[ebx+$mp3gr_long_end]
CODE:00402420		      mov     [ds:_@@n_long_sfb], eax
CODE:00402425		      mov     eax, 13	      ;	39/3
CODE:0040242A		      sub     eax, [ebx+28]   ;	[ebx+$mp3gr_short_start]
CODE:0040242D		      lea     eax, [eax+eax*2] ; mul3
CODE:00402430		      mov     [ds:_@@n_short_sfb], eax
CODE:00402435		      add     eax, [ds:_@@n_long_sfb]
CODE:0040243B		      mov     [ds:_@@n_sfb], eax ; ;
CODE:0040243B					      ;	n_sfb =	gr->n_long_sfb + gr->n_short_sfb;
CODE:00402440		      cmp     [byte ptr	ds:_@@n_short_sfb], 0
CODE:00402447		      mov     eax, 1
CODE:0040244C		      jz      short @@without_short
CODE:0040244E		      mov     eax, 3	      ;	max_blocks = gr->n_short_sfb ? 3 : 1;
CODE:00402453
CODE:00402453 @@without_short:			      ;	...
CODE:00402453		      mov     [ds:_@@max_blocks], eax
CODE:00402458		      mov     edi, offset _@@sfb_array
CODE:0040245D		      mov     eax, [ds:mp3_hdr_sample_rate_index] ; bstab
CODE:00402462		      imul    eax, 22
CODE:00402465		      lea     esi, [mp3_band_size_long+eax]
CODE:0040246B		      mov     ecx, [ds:_@@n_long_sfb]
CODE:00402471		      rep movsb
CODE:00402473		      mov     eax, [ds:mp3_hdr_sample_rate_index]
CODE:00402478		      imul    eax, 13
CODE:0040247B		      lea     esi, [mp3_band_size_short+eax] ; merge lieff-style
CODE:00402481		      mov     ecx, [ds:_@@n_short_sfb]
CODE:00402487		      jecxz   short @@make_sfb_done ; doing that here is a bit slow,
CODE:00402487					      ;	it would be better to pre-compute
CODE:00402487					      ;	all merged-combinations
CODE:00402489		      add     esi, [ebx+28]   ;	[ebx+$mp3gr_short_start]
CODE:0040248C
CODE:0040248C @@make_sfb_lop:			      ;	...
CODE:0040248C		      lodsb
CODE:0040248D		      stosb
CODE:0040248E		      stosb
CODE:0040248F		      stosb
CODE:00402490		      sub     ecx, 3
CODE:00402493		      jnz     short @@make_sfb_lop
CODE:00402495
CODE:00402495 @@make_sfb_done:			      ;	...
CODE:00402495		      call    _@@find_top_bands	;
CODE:00402495					      ;	L3_stereo_top_band(left+576,gr->sfbtab,n_sfb,max_band);
CODE:0040249A		      cmp     [byte ptr	ds:_@@n_long_sfb], 0
CODE:004024A1		      jz      short @@without_long
CODE:004024A3		      mov     eax, [dword ptr ds:_@@max_bands]
CODE:004024A8		      cmp     ah, al	      ;	if (gr->n_long_sfb)
CODE:004024AA		      jg      short @@not_max1 ; max_band[0] = max_band[1] = max_band[2] = MINIMP3_MAX
CODE:004024AA					      ;	(MINIMP3_MAX(max_band[0], max_band[1]),	max_band[2]);
CODE:004024AC		      mov     ah, al
CODE:004024AE
CODE:004024AE @@not_max1:			      ;	...
CODE:004024AE		      shr     eax, 8
CODE:004024B1		      cmp     ah, al
CODE:004024B3		      jg      short @@not_max2
CODE:004024B5		      mov     ah, al
CODE:004024B7
CODE:004024B7 @@not_max2:			      ;	...
CODE:004024B7		      mov     al, ah
CODE:004024B9		      shl     eax, 8
CODE:004024BC		      mov     al, ah
CODE:004024BE		      mov     [dword ptr ds:_@@max_bands], eax
CODE:004024C3
CODE:004024C3 @@without_long:			      ;	...
CODE:004024C3		      xor     ebp, ebp	      ;	blk
CODE:004024C5
CODE:004024C5 @@adjust_last_prev_lop:		      ;	...
CODE:004024C5		      mov     edx, [ds:_@@n_sfb]
CODE:004024CB		      sub     edx, [ds:_@@max_blocks] ;	itop = n_sfb - max_blocks + blk
CODE:004024D1		      add     edx, ebp
CODE:004024D3		      mov     ecx, edx
CODE:004024D5		      sub     ecx, [ds:_@@max_blocks] ;	prev = itop - max_blocks;
CODE:004024DB		      mov     eax, [ds:mp3_hdr_flag_lsf]
CODE:004024E0		      lea     eax, [eax+eax*2] ; 0,1 --> 0,3
CODE:004024E0					      ;	default_pos = HDR_TEST_MPEG1(hdr) ? 3
CODE:004024E3		      xor     al, 3	      ;	0,3 -->	3,0
CODE:004024E5		      cmp     cl, [ss:_@@max_bands+ebp]
CODE:004024EB		      jle     short @@use_default_pos ;	ist_pos[itop] =	max_band[blk] >=
CODE:004024EB					      ;	prev ? default_pos : ist_pos[prev]
CODE:004024ED		      mov     al, [ebx+ecx+5040] ; [ebx+@@right+$mp3gr_scale_factors+ecx]
CODE:004024F4
CODE:004024F4 @@use_default_pos:		      ;	...
CODE:004024F4		      mov     [ebx+edx+5040], al ; [ebx+@@right+$mp3gr_scale_factors+edx]
CODE:004024FB		      inc     ebp	      ;	blk
CODE:004024FC		      cmp     ebp, [ds:_@@max_blocks]
CODE:00402502		      jb      short @@adjust_last_prev_lop
CODE:00402504		      call    _@@apply_i_stereo
CODE:00402509		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_i_stereo
CODE:00402510		      jz      short @@@no_rdtsc_supported@
CODE:00402512		      rdtsc
CODE:00402514		      add     [ds:rdtsc_i_stereo], eax
CODE:0040251A		      adc     [ds:rdtsc_i_stereo+4], edx
CODE:00402520
CODE:00402520 @@@no_rdtsc_supported@:		      ;	...
CODE:00402520		      retn
CODE:00402520 endp	      mp3_compute_stereo
CODE:00402520
CODE:00402521
CODE:00402521 ;	===============	S U B R	O U T I	N E =======================================
CODE:00402521
CODE:00402521
CODE:00402521 proc	      _@@find_top_bands	near  ;	...
CODE:00402521		      mov     [dword ptr ds:_@@max_bands], 0FFFFFFh ; set maxband[0..2]=(-1)
CODE:0040252B		      lea     esi, [ebx+5088] ;	[ebx+@@right+$mp3gr_sb_hybrid]
CODE:00402531		      xor     edx, edx
CODE:00402533
CODE:00402533 @@find_top_lop_iii:		      ;	...
CODE:00402533		      xor     ecx, ecx	      ;	for (i = 0; i <	nbands;	i++)
CODE:00402535
CODE:00402535 @@find_top_lop_kkk:		      ;	...
CODE:00402535		      mov     eax, [esi+ecx*4] ; for (k	= 0; k < sfb[i]; k += 2)
CODE:00402538		      or      eax, [esi+ecx*4+4]
CODE:0040253C		      jnz     short @@found_nonzero
CODE:0040253E		      add     ecx, 2
CODE:00402541		      cmp     cl, [ds:_@@sfb_array+edx]
CODE:00402547		      jb      short @@find_top_lop_kkk
CODE:00402549		      jmp     short @@find_top_next
CODE:0040254B ;	---------------------------------------------------------------------------
CODE:0040254B
CODE:0040254B @@found_nonzero:			      ;	...
CODE:0040254B		      mov     eax, edx
CODE:0040254D		      div     [ds:_@@const_3]
CODE:00402553		      movzx   eax, ah	      ;	remainder (mod 3)
CODE:00402556		      mov     [ds:_@@max_bands+eax], dl	; max_bands[0..2]=i
CODE:0040255C
CODE:0040255C @@find_top_next:			      ;	...
CODE:0040255C		      movzx   eax, [ds:_@@sfb_array+edx]
CODE:00402563		      lea     esi, [esi+eax*4]
CODE:00402566		      inc     edx	      ;	next
CODE:00402567		      cmp     edx, [ds:_@@n_sfb]
CODE:0040256D		      jb      short @@find_top_lop_iii
CODE:0040256F		      retn
CODE:0040256F endp	      _@@find_top_bands
CODE:0040256F
CODE:00402570
CODE:00402570 ;	===============	S U B R	O U T I	N E =======================================
CODE:00402570
CODE:00402570
CODE:00402570 proc	      _@@apply_i_stereo	near  ;	...
CODE:00402570		      mov     eax, offset mp3_is_table_normal
CODE:00402575		      mov     ecx, 7
CODE:0040257A		      cmp     [ds:mp3_hdr_flag_lsf], 0
CODE:00402581		      jz      short @@this_lsf
CODE:00402583		      mov     eax, [ebx+4948] ;	[ebx+@@right+$mp3gr_scalefac_compress]
CODE:00402589		      and     eax, 1	      ;	bit0
CODE:0040258C		      test    [ds:mp3_hdr_mode_ext], 2 ; MODE_EXT_MS_STEREO
CODE:00402596		      jz      short @@no_ms
CODE:00402598		      or      eax, 2	      ;	bit1=mul_1.414
CODE:0040259B
CODE:0040259B @@no_ms:				      ;	...
CODE:0040259B		      shl     eax, 9	      ;	N*40h*2*4
CODE:0040259E		      add     eax, offset mp3_is_table_lsf
CODE:004025A3		      mov     ecx, 64	      ;	max (must be below NO_INTENSITY_FLAG)
CODE:004025A8
CODE:004025A8 @@this_lsf:			      ;	...
CODE:004025A8		      mov     [ds:_@@max_pos], ecx ; 7 or 64
CODE:004025AE		      mov     [ds:_@@is_tab], eax ; table
CODE:004025B3		      lea     esi, [ebx+160]  ;	[ebx+$mp3gr_sb_hybrid]
CODE:004025B9		      xor     ecx, ecx	      ;	iii ; for (i = 0; sfb[i]; i++)
CODE:004025BB
CODE:004025BB @@apply_lop_i:			      ;	...
CODE:004025BB		      movzx   ebp, [ds:_@@sfb_array+ecx] ; if ((int)i >	max_band[i % 3]
CODE:004025BB					      ;	&& ipos	< max_pos)
CODE:004025C2		      mov     eax, ecx
CODE:004025C4		      div     [ds:_@@const_3] ;	max_band[i % 3]
CODE:004025CA		      movzx   eax, ah	      ;	remainder (mod 3)
CODE:004025CD		      cmp     cl, [ds:_@@max_bands+eax]	; iii,max_bands[0..2];
CODE:004025D3		      jle     short @@apply_ms_stereo
CODE:004025D5		      movzx   edi, [byte ptr ebx+ecx+5040] ; [ebx+@@right+$mp3gr_scale_factors+ecx]
CODE:004025D5					      ;	@@right	= $mp3gr_entrysiz*2 = 4928
CODE:004025D5					      ;	$mp3gr_scale_factors = 112
CODE:004025DD		      cmp     edi, [ds:_@@max_pos] ; check ipos
CODE:004025E3		      jnb     short @@apply_ms_stereo
CODE:004025E5		      shl     edi, 3	      ;	mul 2*4
CODE:004025E8		      add     edi, [ds:_@@is_tab]
CODE:004025EE
CODE:004025EE @@apply_pan_lop:			      ;	...
CODE:004025EE		      mov     eax, [esi]      ;	tmp = granule.ch0.sb_hybrid
CODE:004025F0		      shl     eax, 2
CODE:004025F3		      imul    [dword ptr edi+4]	; v1
CODE:004025F6		      mov     [esi+4928], edx ;	[esi+@@right]
CODE:004025F6					      ;	granule.ch1.sb_hybrid =	tmp*v1
CODE:004025FC		      mov     eax, [esi]      ;	tmp = granule.ch0.sb_hybrid
CODE:004025FE		      shl     eax, 2
CODE:00402601		      imul    [dword ptr edi] ;	v0
CODE:00402603		      mov     [esi], edx      ;	granule.ch0.sb_hybrid =	tmp*v0
CODE:00402605		      add     esi, 4
CODE:00402608		      dec     ebp
CODE:00402609		      jnz     short @@apply_pan_lop
CODE:0040260B		      jmp     short @@apply_next
CODE:0040260D ;	---------------------------------------------------------------------------
CODE:0040260D
CODE:0040260D @@apply_ms_stereo:		      ;	...
CODE:0040260D		      test    [ds:mp3_hdr_mode_ext], 2 ; MODE_EXT_MS_STEREO
CODE:00402617		      jz      short @@apply_none
CODE:00402619
CODE:00402619 @@ms_stereo_lop:			      ;	...
CODE:00402619		      mov     eax, [esi]      ;	tmp0 = granule.ch0.sb_hybrid[i]
CODE:0040261B		      mov     edx, [esi+4928] ;	[esi+@@right]
CODE:0040261B					      ;	tmp1 = granule.ch1.sb_hybrid[i]
CODE:00402621		      sub     eax, edx	      ;	tmp0 - tmp1
CODE:00402623		      lea     edx, [eax+edx*2] ; tmp0 +	tmp1
CODE:00402626		      mov     [esi], edx      ;	granule.ch0.sb_hybrid[i] = tmp0	+ tmp1
CODE:00402628		      mov     [esi+4928], eax ;	[esi+@@right]
CODE:00402628					      ;	granule.ch1.sb_hybrid[i] = tmp0	- tmp1
CODE:0040262E		      add     esi, 4
CODE:00402631		      dec     ebp
CODE:00402632		      jnz     short @@ms_stereo_lop
CODE:00402634		      jmp     short @@apply_next
CODE:00402636 ;	---------------------------------------------------------------------------
CODE:00402636
CODE:00402636 @@apply_none:			      ;	...
CODE:00402636		      lea     esi, [esi+ebp*4] ; skip, keep unchanged
CODE:00402639
CODE:00402639 @@apply_next:			      ;	...
CODE:00402639		      inc     ecx	      ;	iii
CODE:0040263A		      cmp     ecx, [ds:_@@n_sfb]
CODE:00402640		      jb      @@apply_lop_i   ;	next
CODE:00402646		      retn
CODE:00402646 endp	      _@@apply_i_stereo
CODE:00402646
CODE:00402646 ;	---------------------------------------------------------------------------
CODE:00402647		      align 10h
CODE:00402650
CODE:00402650 ;	===============	S U B R	O U T I	N E =======================================
CODE:00402650
CODE:00402650
CODE:00402650 proc	      mp3_reorder_block	near  ;	...
CODE:00402650		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_reorder
CODE:00402657		      jz      short @@no_rdtsc_supported
CODE:00402659		      rdtsc
CODE:0040265B		      sub     [ds:rdtsc_reorder], eax
CODE:00402661		      sbb     [ds:rdtsc_reorder+4], edx
CODE:00402667
CODE:00402667 @@no_rdtsc_supported:		      ;	...
CODE:00402667		      cmp     [byte ptr	ebx+44], 2 ; ebx+$mp3gr_block_type] ; only for type 2
CODE:0040266B		      jnz     short @@no_reorder
CODE:0040266D		      lea     esi, [ebx+160]  ;	[ebx+$mp3gr_sb_hybrid] ; ptr+0
CODE:00402673		      cmp     [byte ptr	ebx+48], 0 ; [ebx+$mp3gr_switch_point]
CODE:00402677		      jz      short @@this_src
CODE:00402679		      add     esi, 144	      ;	36*4 ; ptr+36*4
CODE:0040267F		      cmp     [ds:mp3_hdr_sample_rate_index], 8
CODE:00402686		      jnz     short @@this_src
CODE:00402688		      add     esi, 48	      ;	12*4 ; additionally to above 36*4 ; ptr+48*4
CODE:0040268B
CODE:0040268B @@this_src:			      ;	...
CODE:0040268B		      mov     edx, [ebx+28]   ;	[ebx+$mp3gr_short_start] ; can be 13
CODE:0040268E		      cmp     edx, 13
CODE:00402691		      jnb     short @@no_reorder
CODE:00402693		      mov     [dword ptr ebx+92], 576 ;	[ebx+$mp3gr_num_nonzero_hybrids]
CODE:0040269A
CODE:0040269A @@outer_lop:			      ;	...
CODE:0040269A		      mov     eax, [ds:mp3_hdr_sample_rate_index]
CODE:0040269F		      imul    eax, 13	      ;	X*13
CODE:004026A2		      movzx   ecx, [ds:mp3_band_size_short+eax+edx] ; [X*13+Y]
CODE:004026AA		      mov     edi, offset _@@tmp
CODE:004026AF		      pusha
CODE:004026B0		      mov     edx, ecx	      ;	step=len (4..44) ; copy	LEN*3 dwords to	tmp
CODE:004026B2
CODE:004026B2 @@inner_lop:			      ;	...
CODE:004026B2		      mov     eax, [esi]
CODE:004026B4		      stosd
CODE:004026B5		      mov     eax, [esi+edx*4] ; copy 3	dwords
CODE:004026B8		      stosd
CODE:004026B9		      mov     eax, [esi+edx*8]
CODE:004026BC		      stosd
CODE:004026BD		      add     esi, 4
CODE:004026C0		      loop    @@inner_lop
CODE:004026C2		      popa
CODE:004026C3		      lea     ecx, [ecx+ecx*2] ; len*3
CODE:004026C6		      xchg    esi, edi	      ;	copy LEN*3 dwords back from tmp
CODE:004026C8		      rep movsd
CODE:004026CA		      xchg    esi, edi
CODE:004026CC		      inc     edx
CODE:004026CD		      cmp     edx, 13
CODE:004026D0		      jb      short @@outer_lop	; next
CODE:004026D2
CODE:004026D2 @@no_reorder:			      ;	...
CODE:004026D2		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004026D9		      jz      short @@no_rdtsc_supported@ ; timelog_end	rdtsc_reorder
CODE:004026DB		      rdtsc
CODE:004026DD		      add     [ds:rdtsc_reorder], eax
CODE:004026E3		      adc     [ds:rdtsc_reorder+4], edx
CODE:004026E9
CODE:004026E9 @@no_rdtsc_supported@:		      ;	...
CODE:004026E9		      retn
CODE:004026E9 endp	      mp3_reorder_block
CODE:004026E9
CODE:004026E9 ;	---------------------------------------------------------------------------
CODE:004026EA		      db 87h, 0DBh	      ;	code_align
CODE:004026EA		      db 87h, 0DBh
CODE:004026EA		      db 87h, 0DBh
CODE:004026F0 ;	---------------------------------------------------------------------------
CODE:004026F0		      nop
CODE:004026F0 ;	---------------------------------------------------------------------------
CODE:004026F1		      db 87h, 0DBh	      ;	align 4
CODE:004026F3 ;	---------------------------------------------------------------------------
CODE:004026F3		      nop
CODE:004026F4
CODE:004026F4 ;	===============	S U B R	O U T I	N E =======================================
CODE:004026F4
CODE:004026F4
CODE:004026F4 proc	      mp3_compute_antialias near ; ...
CODE:004026F4		      test    [byte ptr	ds:cpuid_flags], 10h ; in: ebx=granule
CODE:004026FB		      jz      short @@no_rdtsc_supported ; timelog_start rdtsc_antialias
CODE:004026FD		      rdtsc
CODE:004026FF		      sub     [ds:rdtsc_antialias], eax
CODE:00402705		      sbb     [ds:rdtsc_antialias+4], edx
CODE:0040270B
CODE:0040270B @@no_rdtsc_supported:		      ;	...
CODE:0040270B		      mov     eax, [ebx+92]   ;	[ebx+$mp3gr_num_nonzero_hybrids]
CODE:0040270E		      add     eax, 8	      ;	9-1 ; 0..576+8
CODE:00402711		      xor     edx, edx
CODE:00402713		      mov     ecx, 9
CODE:00402718		      div     ecx	      ;	(num/9)	; 0..64
CODE:0040271A		      mov     [ebx+60h], eax
CODE:0040271D		      shr     eax, 1	      ;	(num/18) ; 0..32
CODE:0040271F		      jz      @@no_antialias  ;	0 (when	num/9 =	0..1)
CODE:00402725		      mov     ecx, eax	      ;	1..32
CODE:00402727		      shr     eax, 5	      ;	0..1
CODE:0040272A		      sub     ecx, eax	      ;	1..31 ;	len excluding zeropadding
CODE:0040272C		      cmp     [byte ptr	ebx+44], 2 ; [ebx+$mp3gr_block_type]
CODE:00402730		      jnz     short @@this_len ; antialias only	"long" bands
CODE:00402732		      cmp     [byte ptr	ebx+48], 0 ; [ebx+$mp3gr_switch_point]
CODE:00402736		      jz      @@no_antialias
CODE:0040273C		      mov     ecx, 1	      ;	check this for 8000Hz case
CODE:00402741
CODE:00402741 @@this_len:			      ;	...
CODE:00402741		      lea     eax, [ds:1+ecx*2]
CODE:00402748		      cmp     [ebx+96],	eax   ;	[ebx+$mp3gr_num_nonzero_hybrids_div9]
CODE:0040274B		      ja      short @@is_bigger
CODE:0040274D		      mov     [ebx+96],	eax   ;	opdate highest
CODE:0040274D					      ;	(nonzero required for l3-si_huff.bit)
CODE:00402750
CODE:00402750 @@is_bigger:			      ;	...
CODE:00402750		      push    ebx
CODE:00402751		      lea     ebx, [ebx+160]  ;	[ebx+$mp3gr_sb_hybrid]
CODE:00402757
CODE:00402757 @@lop:				      ;	...
CODE:00402757		      add     ebx, 72	      ;	18*4
CODE:0040275A		      mov     esi, [ebx-4]    ;	IRP nn,0,1,2,3,4,5,6,7 ; INT_AA(nn=0..7)
CODE:0040275D		      mov     edi, [ebx]      ;	@@def_csa macro	nn,cs,ca
CODE:0040275D					      ;	  mp3_csa_&nn&_cs equ cs
CODE:0040275D					      ;	  mp3_csa_&nn&_ca equ ca
CODE:0040275D					      ;	 endm
CODE:0040275D					      ;	constants for mp3_csa_table
CODE:0040275F		      shl     esi, 2	      ;	tmp0 = ptr[-nn-1]*4
CODE:00402762		      shl     edi, 2	      ;	tmp1 = ptr[+nn]*4
CODE:00402765		      lea     eax, [esi+edi]  ;	tmp2 = tmp0+tmp1
CODE:00402768		      mov     ebp, 36E12A03h  ;	@@def_csa 0,36E12A03h,-20ED7F9Ah  ;-0.6
CODE:00402768					      ;	mp3_csa_&nn&_cs
CODE:0040276D		      imul    ebp	      ;	tmp2 = (tmp2*csa[0])
CODE:0040276F		      mov     ebp, edx
CODE:00402771		      mov     eax, -57CEA99Dh ;	mp3_csa_&nn&_ca-mp3_csa_&nn&_cs
CODE:00402776		      imul    esi	      ;	tmp0 = (tmp2+(tmp0*csa[3]))
CODE:00402778		      add     edx, ebp
CODE:0040277A		      mov     [ebx], edx      ;	[ebx+(nn)*4]
CODE:0040277C		      mov     eax, 15F3AA69h  ;	mp3_csa_&nn&_ca+mp3_csa_&nn&_cs
CODE:00402781		      imul    edi	      ;	tmp1 = (tmp2-(tmp1*csa[2]))
CODE:00402783		      sub     ebp, edx
CODE:00402785		      mov     [ebx-4], ebp    ;	[ebx-(nn+1)*4]
CODE:00402788		      mov     esi, [ebx-8]
CODE:0040278B		      mov     edi, [ebx+4]
CODE:0040278E		      shl     esi, 2
CODE:00402791		      shl     edi, 2
CODE:00402794		      lea     eax, [esi+edi]
CODE:00402797		      mov     ebp, 386E75FDh  ;	@@def_csa 1,386E75FDh,-1E30DB48h  ;-0.535
CODE:0040279C		      imul    ebp
CODE:0040279E		      mov     ebp, edx
CODE:004027A0		      mov     eax, -569F5145h
CODE:004027A5		      imul    esi
CODE:004027A7		      add     edx, ebp
CODE:004027A9		      mov     [ebx+4], edx    ;	[ebx+(nn)*4]
CODE:004027AC		      mov     eax, 1A3D9AB5h
CODE:004027B1		      imul    edi
CODE:004027B3		      sub     ebp, edx
CODE:004027B5		      mov     [ebx-8], ebp    ;	[ebx-(nn+1)*4]
CODE:004027B8		      mov     esi, [ebx-12]
CODE:004027BB		      mov     edi, [ebx+8]
CODE:004027BE		      shl     esi, 2
CODE:004027C1		      shl     edi, 2
CODE:004027C4		      lea     eax, [esi+edi]
CODE:004027C7		      mov     ebp, 3CC6B73Eh  ;	 @@def_csa 2,3CC6B73Eh,-140E604Fh  ;-0.33
CODE:004027CC		      imul    ebp
CODE:004027CE		      mov     ebp, edx
CODE:004027D0		      mov     eax, -50D5178Dh
CODE:004027D5		      imul    esi
CODE:004027D7		      add     edx, ebp
CODE:004027D9		      mov     [ebx+8], edx    ;	[ebx+(nn)*4]
CODE:004027DC		      mov     eax, 28B856EFh
CODE:004027E1		      imul    edi
CODE:004027E3		      sub     ebp, edx
CODE:004027E5		      mov     [ebx-12],	ebp   ;	[ebx-(nn+1)*4]
CODE:004027E8		      mov     esi, [ebx-16]
CODE:004027EB		      mov     edi, [ebx+12]
CODE:004027EE		      shl     esi, 2
CODE:004027F1		      shl     edi, 2
CODE:004027F4		      lea     eax, [esi+edi]
CODE:004027F7		      mov     ebp, 3EEEA055h  ;	@@def_csa 3,3EEEA055h,-0BA47742h  ;-0.185
CODE:004027FC		      imul    ebp
CODE:004027FE		      mov     ebp, edx
CODE:00402800		      mov     eax, -4A931797h
CODE:00402805		      imul    esi
CODE:00402807		      add     edx, ebp
CODE:00402809		      mov     [ebx+12],	edx   ;	[ebx+(nn)*4]
CODE:0040280C		      mov     eax, 334A2913h
CODE:00402811		      imul    edi
CODE:00402813		      sub     ebp, edx
CODE:00402815		      mov     [ebx-16],	ebp   ;	[ebx-(nn+1)*4]
CODE:00402818		      mov     esi, [ebx-20]   ;	ebx-(nn+1)*4] ;	tmp0 = ptr[-nn-1]
CODE:0040281B		      mov     edi, [ebx+16]   ;	[ebx+(nn)*4] ; tmp1 = ptr[+nn]
CODE:0040281E		      shl     esi, 2
CODE:00402821		      shl     edi, 2
CODE:00402824		      lea     eax, [esi+edi]  ;	tmp2 = tmp0+tmp1
CODE:00402827		      mov     ebp, 3FB6905Ch  ;	@@def_csa 4,3FB6905Ch,-060D80E9h  ;-0.095
CODE:0040282C		      imul    ebp	      ;	tmp2 = (tmp2*csa[0])
CODE:0040282E		      mov     ebp, edx
CODE:00402830		      mov     eax, -45C41145h
CODE:00402835		      imul    esi	      ;	tmp0 = (tmp2+(tmp0*csa[3]))
CODE:00402837		      add     edx, ebp
CODE:00402839		      mov     [ebx+16],	edx   ;	[ebx+(nn)*4]
CODE:0040283C		      mov     eax, 39A90F73h
CODE:00402841		      imul    edi	      ;	tmp1 = (tmp2-(tmp1*csa[2]))
CODE:00402843		      sub     ebp, edx
CODE:00402845		      mov     [ebx-20],	ebp   ;	[ebx-(nn+1)*4]
CODE:00402848		      mov     esi, [ebx-24]
CODE:0040284B		      mov     edi, [ebx+20]
CODE:0040284E		      shl     esi, 2
CODE:00402851		      shl     edi, 2
CODE:00402854		      lea     eax, [esi+edi]
CODE:00402857		      mov     ebp, 3FF23F21h  ;	@@def_csa 5,3FF23F21h,-029F2E1Bh  ;-0.041
CODE:0040285C		      imul    ebp
CODE:0040285E		      mov     ebp, edx
CODE:00402860		      mov     eax, -42916D3Ch
CODE:00402865		      imul    esi
CODE:00402867		      add     edx, ebp
CODE:00402869		      mov     [ebx+20],	edx   ;	[ebx+(nn)*4]
CODE:0040286C		      mov     eax, 3D531106h
CODE:00402871		      imul    edi
CODE:00402873		      sub     ebp, edx
CODE:00402875		      mov     [ebx-24],	ebp   ;	[ebx-(nn+1)*4]
CODE:00402878		      mov     esi, [ebx-28]
CODE:0040287B		      mov     edi, [ebx+24]
CODE:0040287E		      shl     esi, 2
CODE:00402881		      shl     edi, 2
CODE:00402884		      lea     eax, [esi+edi]
CODE:00402887		      mov     ebp, 3FFE5932h  ;	@@def_csa 6,3FFE5932h,-00E8A11Ch  ;-0.0142
CODE:0040288C		      imul    ebp
CODE:0040288E		      mov     ebp, edx
CODE:00402890		      mov     eax, -40E6FA4Eh
CODE:00402895		      imul    esi
CODE:00402897		      add     edx, ebp
CODE:00402899		      mov     [ebx+24],	edx   ;	[ebx+(nn)*4]
CODE:0040289C		      mov     eax, 3F15B816h
CODE:004028A1		      imul    edi
CODE:004028A3		      sub     ebp, edx
CODE:004028A5		      mov     [ebx-28],	ebp   ;	[ebx-(nn+1)*4]
CODE:004028A8		      mov     esi, [ebx-32]
CODE:004028AB		      mov     edi, [ebx+28]
CODE:004028AE		      shl     esi, 2
CODE:004028B1		      shl     edi, 2
CODE:004028B4		      lea     eax, [esi+edi]
CODE:004028B7		      mov     ebp, 3FFFE34Bh  ;	@@def_csa 7,3FFFE34Bh,-003C9ED1h  ;-0.0037
CODE:004028BC		      imul    ebp
CODE:004028BE		      mov     ebp, edx
CODE:004028C0		      mov     eax, -403C821Ch
CODE:004028C5		      imul    esi
CODE:004028C7		      add     edx, ebp
CODE:004028C9		      mov     [ebx+28],	edx   ;	[ebx+(nn)*4]
CODE:004028CC		      mov     eax, 3FC3447Ah
CODE:004028D1		      imul    edi
CODE:004028D3		      sub     ebp, edx
CODE:004028D5		      mov     [ebx-32],	ebp   ;	[ebx-(nn+1)*4]
CODE:004028D8		      dec     ecx
CODE:004028D9		      jnz     @@lop
CODE:004028DF		      pop     ebx
CODE:004028E0
CODE:004028E0 @@no_antialias:			      ;	...
CODE:004028E0		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004028E7		      jz      short locret_4028F7
CODE:004028E9		      rdtsc
CODE:004028EB		      add     [ds:rdtsc_antialias], eax
CODE:004028F1		      adc     [ds:rdtsc_antialias+4], edx
CODE:004028F7
CODE:004028F7 locret_4028F7:			      ;	...
CODE:004028F7		      retn
CODE:004028F7 endp	      mp3_compute_antialias
CODE:004028F7
CODE:004028F7 ;	---------------------------------------------------------------------------
CODE:004028F8		      align 10h
CODE:00402900
CODE:00402900 ;	===============	S U B R	O U T I	N E =======================================
CODE:00402900
CODE:00402900
CODE:00402900 proc	      mp3_imdct36 near	      ;	...
CODE:00402900		      mov     eax, [esi]      ;	in: esi=src (sb_hybrid)
CODE:00402900					      ;	in: edi=dst (sb_samples)
CODE:00402900					      ;	in: ebx=buf (mdct_buf)
CODE:00402900					      ;	in: ebp=win (mdct_win)
CODE:00402900					      ;
CODE:00402900					      ;	[esi+0*4]
CODE:00402902		      mov     edx, [esi+4]    ;	IRP i,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
CODE:00402905		      add     eax, edx	      ;	IF i AND 1 (*) ; mov edx,[esi+i*4] ; val[i]
CODE:00402905					      ;	 add val[i-1]
CODE:00402907		      mov     [esi+4], eax    ;	 IF i GT 1
CODE:00402907					      ;	  add  ecx,eax ; add val[i-2]
CODE:00402907					      ;	  mov  [esi+(i)*4],ecx
CODE:00402907					      ;	 ELSE
CODE:00402907					      ;	  mov  [esi+(i)*4],eax
CODE:0040290A		      mov     ecx, eax	      ;	 memorize as val[i-2]
CODE:0040290C		      mov     eax, [esi+8]    ;	ELSE (*) ; [esi+i*4] ; val[i]
CODE:0040290F		      add     edx, eax	      ;	 add val[i-1]
CODE:00402911		      mov     [esi+8], edx    ;	[esi+(i)*4
CODE:00402914		      mov     edx, [esi+12]
CODE:00402917		      add     eax, edx
CODE:00402919		      add     ecx, eax
CODE:0040291B		      mov     [esi+12],	ecx
CODE:0040291E		      mov     ecx, eax
CODE:00402920		      mov     eax, [esi+16]
CODE:00402923		      add     edx, eax
CODE:00402925		      mov     [esi+16],	edx
CODE:00402928		      mov     edx, [esi+20]
CODE:0040292B		      add     eax, edx
CODE:0040292D		      add     ecx, eax
CODE:0040292F		      mov     [esi+20],	ecx
CODE:00402932		      mov     ecx, eax
CODE:00402934		      mov     eax, [esi+24]
CODE:00402937		      add     edx, eax
CODE:00402939		      mov     [esi+24],	edx
CODE:0040293C		      mov     edx, [esi+28]
CODE:0040293F		      add     eax, edx
CODE:00402941		      add     ecx, eax
CODE:00402943		      mov     [esi+28],	ecx
CODE:00402946		      mov     ecx, eax
CODE:00402948		      mov     eax, [esi+32]
CODE:0040294B		      add     edx, eax
CODE:0040294D		      mov     [esi+32],	edx
CODE:00402950		      mov     edx, [esi+36]
CODE:00402953		      add     eax, edx
CODE:00402955		      add     ecx, eax
CODE:00402957		      mov     [esi+36],	ecx
CODE:0040295A		      mov     ecx, eax
CODE:0040295C		      mov     eax, [esi+40]
CODE:0040295F		      add     edx, eax
CODE:00402961		      mov     [esi+40],	edx
CODE:00402964		      mov     edx, [esi+44]
CODE:00402967		      add     eax, edx
CODE:00402969		      add     ecx, eax
CODE:0040296B		      mov     [esi+44],	ecx
CODE:0040296E		      mov     ecx, eax
CODE:00402970		      mov     eax, [esi+48]
CODE:00402973		      add     edx, eax
CODE:00402975		      mov     [esi+48],	edx
CODE:00402978		      mov     edx, [esi+52]
CODE:0040297B		      add     eax, edx
CODE:0040297D		      add     ecx, eax
CODE:0040297F		      mov     [esi+52],	ecx
CODE:00402982		      mov     ecx, eax
CODE:00402984		      mov     eax, [esi+56]
CODE:00402987		      add     edx, eax
CODE:00402989		      mov     [esi+56],	edx
CODE:0040298C		      mov     edx, [esi+60]
CODE:0040298F		      add     eax, edx
CODE:00402991		      add     ecx, eax
CODE:00402993		      mov     [esi+60],	ecx
CODE:00402996		      mov     ecx, eax
CODE:00402998		      mov     eax, [esi+64]
CODE:0040299B		      add     edx, eax
CODE:0040299D		      mov     [esi+64],	edx
CODE:004029A0		      mov     edx, [esi+68]
CODE:004029A3		      add     eax, edx
CODE:004029A5		      add     ecx, eax
CODE:004029A7		      mov     [esi+68],	ecx
CODE:004029AA		      mov     ecx, eax
CODE:004029AC		      push    ebx
CODE:004029AD		      push    ebp
CODE:004029AE		      push    edi
CODE:004029AF		      mov     ecx, [esi]      ;	IRP j,0,1
CODE:004029B1		      mov     ebx, [esi+48]   ;	t1 = [esi+(0*2+j)*4], t0 = [esi+(6*2+j)*4]
CODE:004029B4		      mov     edi, [esi+32]   ;	t2 = [esi+(4*2+j)*4]
CODE:004029B7		      add     edi, [esi+64]   ;	+ [esi+(8*2+j)*4]
CODE:004029BA		      sub     edi, [esi+16]   ;	- [esi+(2*2+j)*4]
CODE:004029BD		      lea     ebp, [ebx+ecx*2] ; t2 = src[4*2+j] + src[8*2+j] -	src[2*2+j]
CODE:004029BD					      ;	t3 = [t1*2+t0]
CODE:004029C0		      sar     ebp, 1	      ;	sar @@t3,1
CODE:004029C2		      sub     ecx, ebx	      ;	sub @@t1,@@t0
CODE:004029C4		      mov     eax, ecx	      ;	@@SUM [@@tmp+(16+j)*4],@@t1,add,@@t2
CODE:004029C6		      add     eax, edi
CODE:004029C8		      mov     [ds:_@@@tmp+40h],	eax ; [@@tmp+(16+j)*4]
CODE:004029CD		      sar     edi, 1	      ;	sar @@t2,1
CODE:004029CF		      mov     eax, ecx	      ;	@@SUM [@@tmp+(6+j)*4],@@t1,sub,@@t2
CODE:004029D1		      sub     eax, edi
CODE:004029D3		      mov     [ds:_@@@tmp+18h],	eax ; [@@tmp+(6+j)*4]
CODE:004029D8		      mov     eax, [esi+16]   ;	[esi+(4*2+j)*4]
CODE:004029DB		      add     eax, [esi+32]   ;	[esi+(2*2+j)*4]
CODE:004029DE		      shl     eax, 1
CODE:004029E0		      mov     edx, 7847D90Ah  ;	C2
CODE:004029E5		      imul    edx
CODE:004029E7		      mov     ebx, edx
CODE:004029E9		      mov     eax, [esi+32]
CODE:004029EC		      sub     eax, [esi+64]
CODE:004029EF		      mov     edx, 0D38BCB04h ;	negC8
CODE:004029F4		      imul    edx
CODE:004029F6		      mov     ecx, edx
CODE:004029F8		      mov     eax, [esi+16]
CODE:004029FB		      add     eax, [esi+64]
CODE:004029FE		      shl     eax, 1
CODE:00402A00		      mov     edx, 9DF24175h  ;	negC4
CODE:00402A05		      imul    edx
CODE:00402A07		      mov     eax, ebp
CODE:00402A09		      add     eax, ebx
CODE:00402A0B		      add     eax, ecx
CODE:00402A0D		      mov     [ds:_@@@tmp+8], eax
CODE:00402A12		      mov     eax, ebp
CODE:00402A14		      sub     eax, ebx
CODE:00402A16		      sub     eax, edx
CODE:00402A18		      mov     [ds:_@@@tmp+28h],	eax
CODE:00402A1D		      mov     eax, ebp
CODE:00402A1F		      add     eax, edx
CODE:00402A21		      sub     eax, ecx
CODE:00402A23		      mov     [ds:_@@@tmp+38h],	eax
CODE:00402A28		      mov     eax, [esi+40]
CODE:00402A2B		      add     eax, [esi+56]
CODE:00402A2E		      sub     eax, [esi+8]
CODE:00402A31		      shl     eax, 1
CODE:00402A33		      mov     edx, 9126145Fh  ;	negC3
CODE:00402A38		      imul    edx
CODE:00402A3A		      mov     [ds:_@@@tmp+10h],	edx
CODE:00402A40		      mov     eax, [esi+8]
CODE:00402A43		      add     eax, [esi+40]
CODE:00402A46		      shl     eax, 1
CODE:00402A48		      mov     edx, 7E0E2E33h  ;	C1
CODE:00402A4D		      imul    edx
CODE:00402A4F		      mov     edi, edx
CODE:00402A51		      mov     eax, [esi+40]
CODE:00402A54		      sub     eax, [esi+56]
CODE:00402A57		      mov     edx, 0A8715E2Eh ;	negC7
CODE:00402A5C		      imul    edx
CODE:00402A5E		      mov     ebp, edx
CODE:00402A60		      mov     eax, [esi+8]
CODE:00402A63		      add     eax, [esi+56]
CODE:00402A66		      shl     eax, 1
CODE:00402A68		      mov     edx, 0ADB922B8h ;	negC5
CODE:00402A6D		      imul    edx
CODE:00402A6F		      mov     ecx, edx
CODE:00402A71		      mov     eax, [esi+24]
CODE:00402A74		      shl     eax, 1
CODE:00402A76		      mov     edx, 6ED9EBA2h  ;	C3
CODE:00402A7B		      imul    edx
CODE:00402A7D		      mov     eax, ebp
CODE:00402A7F		      add     eax, edi
CODE:00402A81		      add     eax, edx
CODE:00402A83		      mov     [ds:_@@@tmp], eax
CODE:00402A88		      mov     eax, ebp
CODE:00402A8A		      sub     eax, ecx
CODE:00402A8C		      sub     eax, edx
CODE:00402A8E		      mov     [ds:_@@@tmp+20h],	eax
CODE:00402A93		      mov     eax, edi
CODE:00402A95		      add     eax, ecx
CODE:00402A97		      sub     eax, edx
CODE:00402A99		      mov     [ds:_@@@tmp+30h],	eax
CODE:00402A9E		      mov     ecx, [esi+4]
CODE:00402AA1		      mov     ebx, [esi+52]
CODE:00402AA4		      mov     edi, [esi+36]
CODE:00402AA7		      add     edi, [esi+68]
CODE:00402AAA		      sub     edi, [esi+20]
CODE:00402AAD		      lea     ebp, [ebx+ecx*2]
CODE:00402AB0		      sar     ebp, 1
CODE:00402AB2		      sub     ecx, ebx
CODE:00402AB4		      mov     eax, ecx
CODE:00402AB6		      add     eax, edi
CODE:00402AB8		      mov     [ds:_@@@tmp+44h],	eax
CODE:00402ABD		      sar     edi, 1
CODE:00402ABF		      mov     eax, ecx
CODE:00402AC1		      sub     eax, edi
CODE:00402AC3		      mov     [ds:_@@@tmp+1Ch],	eax
CODE:00402AC8		      mov     eax, [esi+20]   ;	t0 = MULH(2*(src[2*2+j]+src[4*2+j]),C2)
CODE:00402ACB		      add     eax, [esi+36]
CODE:00402ACE		      shl     eax, 1
CODE:00402AD0		      mov     edx, 7847D90Ah  ;	C2
CODE:00402AD5		      imul    edx
CODE:00402AD7		      mov     ebx, edx
CODE:00402AD9		      mov     eax, [esi+36]   ;	t1 = MULH(src[4*2+j]-src[8*2+j],negC8)
CODE:00402ADC		      sub     eax, [esi+68]
CODE:00402ADF		      mov     edx, 0D38BCB04h ;	negC8
CODE:00402AE4		      imul    edx
CODE:00402AE6		      mov     ecx, edx
CODE:00402AE8		      mov     eax, [esi+20]   ;	t2 = MULH(2*(src[2*2+j]+src[8*2+j]),negC4)
CODE:00402AEB		      add     eax, [esi+68]
CODE:00402AEE		      shl     eax, 1
CODE:00402AF0		      mov     edx, 9DF24175h  ;	negC4
CODE:00402AF5		      imul    edx
CODE:00402AF7		      mov     eax, ebp	      ;	tmp[2+j] = t3+t0+t1
CODE:00402AF9		      add     eax, ebx
CODE:00402AFB		      add     eax, ecx
CODE:00402AFD		      mov     [ds:_@@@tmp+0Ch],	eax
CODE:00402B02		      mov     eax, ebp	      ;	tmp[10+j] = t3-t0-t2
CODE:00402B04		      sub     eax, ebx
CODE:00402B06		      sub     eax, edx
CODE:00402B08		      mov     [ds:_@@@tmp+2Ch],	eax
CODE:00402B0D		      mov     eax, ebp	      ;	tmp[14+j] = t3+t2-t1
CODE:00402B0F		      add     eax, edx
CODE:00402B11		      sub     eax, ecx
CODE:00402B13		      mov     [ds:_@@@tmp+3Ch],	eax
CODE:00402B18		      mov     eax, [esi+44]   ;	tmp[4+j] = MULH(2*(src[5*2+j]+src[7*2+j]-src[1*2+j]),negC3)
CODE:00402B1B		      add     eax, [esi+60]
CODE:00402B1E		      sub     eax, [esi+12]
CODE:00402B21		      shl     eax, 1
CODE:00402B23		      mov     edx, 9126145Fh  ;	negC3
CODE:00402B28		      imul    edx
CODE:00402B2A		      mov     [ds:_@@@tmp+14h],	edx
CODE:00402B30		      mov     eax, [esi+12]   ;	@@MULH @@t2,[esi+(1*2+j)*4],add,[esi+(5*2+j)*4],-,-		 ,1,C1,-
CODE:00402B30					      ;	t2 = MULH(2*(src[1*2+j],add,src[5*2+j]),-,-,1,C1)
CODE:00402B33		      add     eax, [esi+44]
CODE:00402B36		      shl     eax, 1
CODE:00402B38		      mov     edx, 7E0E2E33h  ;	C1
CODE:00402B3D		      imul    edx
CODE:00402B3F		      mov     edi, edx
CODE:00402B41		      mov     eax, [esi+44]   ;	@@MULH @@t3,[esi+(5*2+j)*4],sub,[esi+(7*2+j)*4],-,-,
CODE:00402B41					      ;	,0,negC7,-
CODE:00402B41					      ;
CODE:00402B41					      ;	t3 = MULH( src[5*2+j],sub,src[7*2+j],-,-,0,negC7)
CODE:00402B44		      sub     eax, [esi+60]
CODE:00402B47		      mov     edx, 0A8715E2Eh ;	negC7
CODE:00402B4C		      imul    edx
CODE:00402B4E		      mov     ebp, edx
CODE:00402B50		      mov     eax, [esi+12]   ;	t1 = MULH(2*(src[1*2+j],add,src[7*2+j]),-,-,1,negC5)
CODE:00402B53		      add     eax, [esi+60]
CODE:00402B56		      shl     eax, 1	      ;	shift =	1
CODE:00402B58		      mov     edx, 0ADB922B8h ;	negC5
CODE:00402B5D		      imul    edx
CODE:00402B5F		      mov     ecx, edx
CODE:00402B61		      mov     eax, [esi+28]   ;	t0 = MULH(2*src[3*2+j],-,-,-,-,1,C3)
CODE:00402B64		      shl     eax, 1
CODE:00402B66		      mov     edx, 6ED9EBA2h  ;	C3
CODE:00402B6B		      imul    edx
CODE:00402B6D		      mov     eax, ebp
CODE:00402B6F		      add     eax, edi
CODE:00402B71		      add     eax, edx
CODE:00402B73		      mov     [ds:_@@@tmp+4], eax
CODE:00402B78		      mov     eax, ebp
CODE:00402B7A		      sub     eax, ecx
CODE:00402B7C		      sub     eax, edx
CODE:00402B7E		      mov     [ds:_@@@tmp+24h],	eax
CODE:00402B83		      mov     eax, edi	      ;	@@SUM [@@tmp+(12+j)*4],@@t2,add,@@t1,sub,edx
CODE:00402B85		      add     eax, ecx
CODE:00402B87		      sub     eax, edx
CODE:00402B89		      mov     [ds:_@@@tmp+34h],	eax
CODE:00402B8E		      pop     edi
CODE:00402B8F		      pop     ebp
CODE:00402B90		      pop     ebx
CODE:00402B91		      push    esi	      ;	IRP j,0,1,2,3 ;	j = 0
CODE:00402B92		      mov     edx, [ds:_@@@tmp]	; t0 = [@@tmp+(j*4+0)*4]
CODE:00402B98		      mov     esi, [ds:_@@@tmp+4] ; t1 = [@@tmp+(j*4+1)*4]
CODE:00402B9E		      mov     eax, [ds:_@@@tmp+8] ; t2 = [@@tmp+(j*4+2)*4]
CODE:00402BA3		      mov     ecx, [ds:_@@@tmp+0Ch] ; t2 = [@@tmp+(j*4+3)*4]
CODE:00402BA9		      sub     eax, edx	      ;	s2 = t2	- t0
CODE:00402BAB		      lea     edx, [eax+edx*2] ; s0 = t2 + t0
CODE:00402BAE		      mov     [ds:_@@s2], eax ;	@@MULH esi,eax ,-,-,-,-,1,icos36h_&j,-
CODE:00402BAE					      ;	s2 = MULH(s2*2,	icos36h[j])
CODE:00402BB3		      mov     [ds:_@@s0], edx
CODE:00402BB9		      sub     ecx, esi
CODE:00402BBB		      lea     eax, [ecx+esi*2]
CODE:00402BBE		      shl     eax, 1
CODE:00402BC0		      mov     edx, 403E9590h  ;	icos36h_0
CODE:00402BC5		      imul    edx
CODE:00402BC7		      mov     esi, edx
CODE:00402BC9		      mov     eax, ecx	      ;	@@MULH @@s3,ecx,-,-,-,-,shift_for_8minus&j,icos36h_8minus&j,-
CODE:00402BC9					      ;	s3 = MULL(s3,icos36[8-j]) ; <--	"MULL" with "icos36"
CODE:00402BCB		      shl     eax, 4
CODE:00402BCE		      mov     edx, 5BCA2A2Ch  ;	icos36h_8 (8-0)
CODE:00402BD3		      imul    edx
CODE:00402BD5		      mov     [ds:_@@s3], edx
CODE:00402BDB		      mov     ecx, [ds:_@@s0]
CODE:00402BE1		      sub     ecx, esi
CODE:00402BE3		      lea     esi, [ecx+esi*2]
CODE:00402BE6		      mov     eax, [ebp+36]   ;	@@MULH [edi+(9+j)*SBLIMIT*4],[ebp+(9+j)*4],
CODE:00402BE6					      ;	-,-,-,-,0,ecx,[ebx+(9+j)*4]
CODE:00402BE6					      ;	out[(9+j)*SBLIMIT] = MULH(t0, win[9+j])+buf[9+j]
CODE:00402BE9		      imul    ecx
CODE:00402BEB		      add     edx, [ebx+36]   ;	[ebx+(9+j)*4]
CODE:00402BEE		      mov     [edi+1152], edx ;	SBLIMIT=32 ; 9*SBLIMIT*4 = 1152
CODE:00402BF4		      mov     eax, [ebp+32]   ;	@@MULH [edi+(8-j)*SBLIMIT*4],[ebp+(8-j)*4]
CODE:00402BF4					      ;	,-,-,-,-,0,ecx,[ebx+(8-j)*4]
CODE:00402BF7		      imul    ecx
CODE:00402BF9		      add     edx, [ebx+32]
CODE:00402BFC		      mov     [edi+1024], edx ;	SBLIMIT=32 ; 8*SBLIMIT*4 = 1024
CODE:00402C02		      mov     eax, [ebp+108]
CODE:00402C05		      imul    esi
CODE:00402C07		      mov     [ebx+36],	edx
CODE:00402C0A		      mov     eax, [ebp+104]  ;	@@MULH [ebx+(8-j)*4],[ebp+(8-j+18)*4],-,-,-,-,0,esi,-
CODE:00402C0D		      imul    esi
CODE:00402C0F		      mov     [ebx+32],	edx
CODE:00402C12		      mov     ecx, [ds:_@@s2]
CODE:00402C18		      mov     esi, [ds:_@@s3]
CODE:00402C1E		      sub     ecx, esi	      ;	t2 = s2	- s3
CODE:00402C20		      lea     esi, [ecx+esi*2] ; t3 = s2 + s3
CODE:00402C23		      mov     eax, [ebp+0]    ;	@@MULH [edi+(0+j)*SBLIMIT*4],[ebp+(0+j)*4],
CODE:00402C23					      ;	-,-,-,-,0,ecx,[ebx+(0+j)*4]
CODE:00402C26		      imul    ecx
CODE:00402C28		      add     edx, [ebx]
CODE:00402C2A		      mov     [edi], edx
CODE:00402C2C		      mov     eax, [ebp+68]   ;	@@MULH [edi+(17-j)*SBLIMIT*4],[ebp+(17-j)*4]
CODE:00402C2C					      ;	,-,-,-,-,0,ecx,[ebx+(17-j)*4]
CODE:00402C2F		      imul    ecx
CODE:00402C31		      add     edx, [ebx+68]
CODE:00402C34		      mov     [edi+2176], edx ;	17*SBLIMIT*4 = 2176
CODE:00402C3A		      mov     eax, [ebp+72]   ;	@@MULH [ebx+(0+j)*4],[ebp+(0+j+18)*4],-,-,-,-,0,esi,-
CODE:00402C3D		      imul    esi
CODE:00402C3F		      mov     [ebx], edx
CODE:00402C41		      mov     eax, [ebp+140]  ;	@@MULH [ebx+(17-j)*4],[ebp+(17-j+18)*4],-,-,-,-,0,esi,-
CODE:00402C47		      imul    esi
CODE:00402C49		      mov     [ebx+68],	edx
CODE:00402C4C		      mov     edx, [ds:_@@@tmp+10h] ; IRP j,0,1,2,3 ; j	= 1
CODE:00402C52		      mov     esi, [ds:_@@@tmp+14h]
CODE:00402C58		      mov     eax, [ds:_@@@tmp+18h]
CODE:00402C5D		      mov     ecx, [ds:_@@@tmp+1Ch]
CODE:00402C63		      sub     eax, edx
CODE:00402C65		      lea     edx, [eax+edx*2]
CODE:00402C68		      mov     [ds:_@@s2], eax
CODE:00402C6D		      mov     [ds:_@@s0], edx
CODE:00402C73		      sub     ecx, esi
CODE:00402C75		      lea     eax, [ecx+esi*2]
CODE:00402C78		      shl     eax, 1
CODE:00402C7A		      mov     edx, 4241F707h  ;	icos36h_1
CODE:00402C7F		      imul    edx
CODE:00402C81		      mov     esi, edx
CODE:00402C83		      mov     eax, ecx
CODE:00402C85		      shl     eax, 2
CODE:00402C88		      mov     edx, 7BA3751Eh  ;	icos36h_7 (8-1)
CODE:00402C8D		      imul    edx
CODE:00402C8F		      mov     [ds:_@@s3], edx
CODE:00402C95		      mov     ecx, [ds:_@@s0]
CODE:00402C9B		      sub     ecx, esi
CODE:00402C9D		      lea     esi, [ecx+esi*2]
CODE:00402CA0		      mov     eax, [ebp+40]
CODE:00402CA3		      imul    ecx
CODE:00402CA5		      add     edx, [ebx+40]
CODE:00402CA8		      mov     [edi+1280], edx
CODE:00402CAE		      mov     eax, [ebp+28]
CODE:00402CB1		      imul    ecx
CODE:00402CB3		      add     edx, [ebx+28]
CODE:00402CB6		      mov     [edi+896], edx
CODE:00402CBC		      mov     eax, [ebp+112]
CODE:00402CBF		      imul    esi
CODE:00402CC1		      mov     [ebx+40],	edx
CODE:00402CC4		      mov     eax, [ebp+100]
CODE:00402CC7		      imul    esi
CODE:00402CC9		      mov     [ebx+28],	edx
CODE:00402CCC		      mov     ecx, [ds:_@@s2]
CODE:00402CD2		      mov     esi, [ds:_@@s3]
CODE:00402CD8		      sub     ecx, esi
CODE:00402CDA		      lea     esi, [ecx+esi*2]
CODE:00402CDD		      mov     eax, [ebp+4]
CODE:00402CE0		      imul    ecx
CODE:00402CE2		      add     edx, [ebx+4]
CODE:00402CE5		      mov     [edi+128], edx
CODE:00402CEB		      mov     eax, [ebp+64]
CODE:00402CEE		      imul    ecx
CODE:00402CF0		      add     edx, [ebx+64]
CODE:00402CF3		      mov     [edi+2048], edx
CODE:00402CF9		      mov     eax, [ebp+76]
CODE:00402CFC		      imul    esi
CODE:00402CFE		      mov     [ebx+4], edx
CODE:00402D01		      mov     eax, [ebp+136]
CODE:00402D07		      imul    esi
CODE:00402D09		      mov     [ebx+64],	edx
CODE:00402D0C		      mov     edx, [ds:_@@@tmp+20h] ; IRP j,0,1,2,3 ; j	= 2
CODE:00402D12		      mov     esi, [ds:_@@@tmp+24h]
CODE:00402D18		      mov     eax, [ds:_@@@tmp+28h]
CODE:00402D1D		      mov     ecx, [ds:_@@@tmp+2Ch]
CODE:00402D23		      sub     eax, edx
CODE:00402D25		      lea     edx, [eax+edx*2]
CODE:00402D28		      mov     [ds:_@@s2], eax
CODE:00402D2D		      mov     [ds:_@@s0], edx
CODE:00402D33		      sub     ecx, esi
CODE:00402D35		      lea     eax, [ecx+esi*2]
CODE:00402D38		      shl     eax, 1
CODE:00402D3A		      mov     edx, 469DBE6Ch  ;	icos36h_2
CODE:00402D3F		      imul    edx
CODE:00402D41		      mov     esi, edx
CODE:00402D43		      mov     eax, ecx
CODE:00402D45		      shl     eax, 2
CODE:00402D48		      mov     edx, 4BB7EC62h  ;	icos36h_6 (8-2)
CODE:00402D4D		      imul    edx
CODE:00402D4F		      mov     [ds:_@@s3], edx
CODE:00402D55		      mov     ecx, [ds:_@@s0]
CODE:00402D5B		      sub     ecx, esi
CODE:00402D5D		      lea     esi, [ecx+esi*2]
CODE:00402D60		      mov     eax, [ebp+44]
CODE:00402D63		      imul    ecx
CODE:00402D65		      add     edx, [ebx+44]
CODE:00402D68		      mov     [edi+1408], edx
CODE:00402D6E		      mov     eax, [ebp+24]
CODE:00402D71		      imul    ecx
CODE:00402D73		      add     edx, [ebx+24]
CODE:00402D76		      mov     [edi+768], edx
CODE:00402D7C		      mov     eax, [ebp+116]
CODE:00402D7F		      imul    esi
CODE:00402D81		      mov     [ebx+44],	edx
CODE:00402D84		      mov     eax, [ebp+96]
CODE:00402D87		      imul    esi
CODE:00402D89		      mov     [ebx+24],	edx
CODE:00402D8C		      mov     ecx, [ds:_@@s2]
CODE:00402D92		      mov     esi, [ds:_@@s3]
CODE:00402D98		      sub     ecx, esi
CODE:00402D9A		      lea     esi, [ecx+esi*2]
CODE:00402D9D		      mov     eax, [ebp+8]
CODE:00402DA0		      imul    ecx
CODE:00402DA2		      add     edx, [ebx+8]
CODE:00402DA5		      mov     [edi+256], edx
CODE:00402DAB		      mov     eax, [ebp+60]
CODE:00402DAE		      imul    ecx
CODE:00402DB0		      add     edx, [ebx+60]
CODE:00402DB3		      mov     [edi+1920], edx
CODE:00402DB9		      mov     eax, [ebp+80]
CODE:00402DBC		      imul    esi
CODE:00402DBE		      mov     [ebx+8], edx
CODE:00402DC1		      mov     eax, [ebp+132]
CODE:00402DC7		      imul    esi
CODE:00402DC9		      mov     [ebx+60],	edx
CODE:00402DCC		      mov     edx, [ds:_@@@tmp+30h] ; IRP j,0,1,2,3 ; j	= 3
CODE:00402DD2		      mov     esi, [ds:_@@@tmp+34h]
CODE:00402DD8		      mov     eax, [ds:_@@@tmp+38h]
CODE:00402DDD		      mov     ecx, [ds:_@@@tmp+3Ch]
CODE:00402DE3		      sub     eax, edx
CODE:00402DE5		      lea     edx, [eax+edx*2]
CODE:00402DE8		      mov     [ds:_@@s2], eax
CODE:00402DED		      mov     [ds:_@@s0], edx
CODE:00402DF3		      sub     ecx, esi
CODE:00402DF5		      lea     eax, [ecx+esi*2]
CODE:00402DF8		      shl     eax, 1
CODE:00402DFA		      mov     edx, 4E212BBEh  ;	icos36h_3
CODE:00402DFF		      imul    edx
CODE:00402E01		      mov     esi, edx
CODE:00402E03		      mov     eax, ecx
CODE:00402E05		      shl     eax, 1
CODE:00402E07		      mov     edx, 6F94A1DFh  ;	icos36h_5 (8-3)
CODE:00402E0C		      imul    edx
CODE:00402E0E		      mov     [ds:_@@s3], edx
CODE:00402E14		      mov     ecx, [ds:_@@s0]
CODE:00402E1A		      sub     ecx, esi
CODE:00402E1C		      lea     esi, [ecx+esi*2]
CODE:00402E1F		      mov     eax, [ebp+48]
CODE:00402E22		      imul    ecx
CODE:00402E24		      add     edx, [ebx+48]
CODE:00402E27		      mov     [edi+1536], edx
CODE:00402E2D		      mov     eax, [ebp+20]
CODE:00402E30		      imul    ecx
CODE:00402E32		      add     edx, [ebx+20]
CODE:00402E35		      mov     [edi+640], edx
CODE:00402E3B		      mov     eax, [ebp+120]
CODE:00402E3E		      imul    esi
CODE:00402E40		      mov     [ebx+30h], edx
CODE:00402E43		      mov     eax, [ebp+92]
CODE:00402E46		      imul    esi
CODE:00402E48		      mov     [ebx+20],	edx
CODE:00402E4B		      mov     ecx, [ds:_@@s2]
CODE:00402E51		      mov     esi, [ds:_@@s3]
CODE:00402E57		      sub     ecx, esi
CODE:00402E59		      lea     esi, [ecx+esi*2]
CODE:00402E5C		      mov     eax, [ebp+12]
CODE:00402E5F		      imul    ecx
CODE:00402E61		      add     edx, [ebx+12]
CODE:00402E64		      mov     [edi+384], edx
CODE:00402E6A		      mov     eax, [ebp+56]
CODE:00402E6D		      imul    ecx
CODE:00402E6F		      add     edx, [ebx+56]
CODE:00402E72		      mov     [edi+1792], edx
CODE:00402E78		      mov     eax, [ebp+84]
CODE:00402E7B		      imul    esi
CODE:00402E7D		      mov     [ebx+12],	edx
CODE:00402E80		      mov     eax, [ebp+128]
CODE:00402E86		      imul    esi
CODE:00402E88		      mov     [ebx+56],	edx
CODE:00402E8B		      mov     ecx, [ds:_@@@tmp+40h] ; IRP j,4
CODE:00402E8B					      ;	[@@tmp+(j*4+0)*4]
CODE:00402E91		      mov     eax, [ds:_@@@tmp+44h] ; [@@tmp+(j*4+1)*4]
CODE:00402E96		      shl     eax, 1
CODE:00402E98		      mov     edx, 5A82799Ah  ;	icos36h_4 (8-4)
CODE:00402E9D		      imul    edx
CODE:00402E9F		      sub     ecx, edx
CODE:00402EA1		      lea     esi, [ecx+edx*2]
CODE:00402EA4		      mov     eax, [ebp+52]   ;	@@MULH [edi+(9+j)*SBLIMIT*4],[ebp+(9+j)*4],
CODE:00402EA4					      ;	-,-,-,-,0,ecx,[ebx+(9+j)*4]
CODE:00402EA4					      ;	out[(9+4)*SBLIMIT] = MULH(t0,win[9+4])+buf[9+4]
CODE:00402EA7		      imul    ecx
CODE:00402EA9		      add     edx, [ebx+52]
CODE:00402EAC		      mov     [edi+1664], edx ;	13*SBLIMIT*4 = 1664
CODE:00402EB2		      mov     eax, [ebp+16]   ;	@MULH [edi+(8-j)*SBLIMIT*4],[ebp+(8-j)*4],
CODE:00402EB2					      ;	-,-,-,-,0,ecx,[ebx+(8-j)*4]
CODE:00402EB5		      imul    ecx
CODE:00402EB7		      add     edx, [ebx+16]
CODE:00402EBA		      mov     [edi+512], edx
CODE:00402EC0		      mov     eax, [ebp+124]  ;	@@MULH [ebx+(9+j)*4],[ebp+(9+j+18)*4] ,-,-,-,-,0,esi,-
CODE:00402EC3		      imul    esi
CODE:00402EC5		      mov     [ebx+52],	edx
CODE:00402EC8		      mov     eax, [ebp+88]   ;	@@MULH [ebx+(8-j)*4],[ebp+(8-j+18)*4],-,-,-,-,0,esi,-
CODE:00402ECB		      imul    esi
CODE:00402ECD		      mov     [ebx+16],	edx
CODE:00402ED0		      pop     esi
CODE:00402ED1		      retn
CODE:00402ED1 endp	      mp3_imdct36
CODE:00402ED1
CODE:00402ED1 ;	---------------------------------------------------------------------------
CODE:00402ED2		      align 10h
CODE:00402EE0
CODE:00402EE0 ;	===============	S U B R	O U T I	N E =======================================
CODE:00402EE0
CODE:00402EE0
CODE:00402EE0 proc	      mp3_imdct12 near	      ;	...
CODE:00402EE0		      mov     eax, [esi]      ;	in: esi=src - out: [out2_...]
CODE:00402EE2		      mov     [ds:_@@tmp0], eax	; IRP nn,0,1,2,3,4,5
CODE:00402EE2					      ;	 @@tmp&nn dd ?
CODE:00402EE2					      ;	ENDM
CODE:00402EE2					      ;	mov  eax,[esi+0*3*4] ; = src[0*3]
CODE:00402EE7		      mov     edx, [esi+12]   ;	[esi+1*3*4] ; =	src[1*3]
CODE:00402EEA		      add     eax, edx	      ;	= src[0*3]+src[1*3]
CODE:00402EEC		      mov     [ds:_@@tmp1], eax
CODE:00402EF1		      mov     eax, [esi+24]
CODE:00402EF4		      add     edx, eax
CODE:00402EF6		      mov     [ds:_@@tmp2], edx
CODE:00402EFC		      mov     edx, [esi+36]   ;	[esi+3*3*4]
CODE:00402EFF		      add     eax, edx
CODE:00402F01		      mov     [ds:_@@tmp3], eax
CODE:00402F06		      mov     eax, [esi+48]
CODE:00402F09		      add     edx, eax
CODE:00402F0B		      mov     [ds:_@@tmp4], edx
CODE:00402F11		      mov     edx, [esi+60]   ;	[esi+5*3*4]
CODE:00402F14		      add     eax, edx	      ;	= src[4*3]+src[5*3]
CODE:00402F16		      add     eax, [ds:_@@tmp3]
CODE:00402F1C		      mov     [ds:_@@tmp5], eax	; tmp5 = src[4*3]+src[5*3]+tmp3
CODE:00402F21		      mov     edx, [ds:_@@tmp1]
CODE:00402F27		      add     [ds:_@@tmp3], edx
CODE:00402F2D		      mov     eax, [ds:_@@tmp2]	; @@MULH @@tmp2,@@tmp2,-,-,-,-,1,C3,-
CODE:00402F2D					      ;	tmp2 = MULH(2*tmp2,C3)
CODE:00402F32		      shl     eax, 1
CODE:00402F34		      mov     edx, 6ED9EBA2h  ;	C3
CODE:00402F39		      imul    edx
CODE:00402F3B		      mov     [ds:_@@tmp2], edx
CODE:00402F41		      mov     eax, [ds:_@@tmp3]	; @@MULH @@tmp3,@@tmp3,-,-,-,-,2,C3,-
CODE:00402F41					      ;	tmp3 = MULH(4*tmp3,C3)
CODE:00402F46		      shl     eax, 2
CODE:00402F49		      mov     edx, 6ED9EBA2h  ;	C3
CODE:00402F4E		      imul    edx
CODE:00402F50		      mov     [ds:_@@tmp3], edx
CODE:00402F56		      mov     eax, [ds:_@@tmp1]	; @@MULH edx,@@tmp1,sub,@@tmp5,-,-,1,icos36h_4,-
CODE:00402F5B		      sub     eax, [ds:_@@tmp5]	; t2 = MULH(2*(tmp1-tmp5),icos36h_4)
CODE:00402F61		      shl     eax, 1
CODE:00402F63		      mov     edx, 5A82799Ah  ;	icos36h_4
CODE:00402F68		      imul    edx
CODE:00402F6A		      mov     eax, [ds:_@@tmp0]	; @@SUM	eax,@@tmp0,sub,@@tmp4,-,-
CODE:00402F6F		      sub     eax, [ds:_@@tmp4]	; t1 = tmp0 - tmp4
CODE:00402F75		      sub     eax, edx	      ;	@@CAST macro t1,t2,dst0,dst1,dst2,dst3
CODE:00402F75					      ;	  sub  t1,t2			       ;t1-t2
CODE:00402F75					      ;	  lea  t2,[t1+t2*2]		       ;t1+t2
CODE:00402F75					      ;	  mov  dword ptr [mp3_out2_a&dst0],t1  ;t1-t2
CODE:00402F75					      ;	  mov  dword ptr [mp3_out2_b&dst0],t2  ;t1+t2
CODE:00402F75					      ;	endm
CODE:00402F77		      lea     edx, [eax+edx*2] ; @@CAST	eax,edx,1,4,7,10
CODE:00402F77					      ;	out2[1,4,7,10]=t1-t2,t1-t2,t1+t2,t1+t2
CODE:00402F7A		      mov     [ds:mp3_out2_a1],	eax
CODE:00402F7F		      mov     [ds:mp3_out2_b1],	edx
CODE:00402F85		      mov     eax, [ds:_@@tmp4]
CODE:00402F8A		      mov     edx, [ds:_@@tmp1]
CODE:00402F90		      sar     eax, 1
CODE:00402F92		      shl     edx, 1
CODE:00402F94		      add     [ds:_@@tmp0], eax	; tmp0 = tmp0 +	tmp4/2
CODE:00402F9A		      add     [ds:_@@tmp5], edx	; tmp5 = tmp5 +	tmp1*2
CODE:00402FA0		      mov     eax, [ds:_@@tmp5]	; @@MULH edx,@@tmp5,add,@@tmp3,-,-,0,icos36h_1,-
CODE:00402FA5		      add     eax, [ds:_@@tmp3]
CODE:00402FAB		      mov     edx, 4241F707h  ;	icos36h_1
CODE:00402FB0		      imul    edx
CODE:00402FB2		      mov     eax, [ds:_@@tmp0]	; @@SUM	eax,@@tmp0,add,@@tmp2,-,-
CODE:00402FB7		      add     eax, [ds:_@@tmp2]
CODE:00402FBD		      sub     eax, edx	      ;	@@CAST eax,edx,2,3,8,9
CODE:00402FBF		      lea     edx, [eax+edx*2]
CODE:00402FC2		      mov     [ds:mp3_out2_a2],	eax
CODE:00402FC7		      mov     [ds:mp3_out2_b2],	edx
CODE:00402FCD		      mov     eax, [ds:_@@tmp5]	; @@MULH edx,@@tmp5,sub,@@tmp3,-,-,1,icos36h_7,-
CODE:00402FD2		      sub     eax, [ds:_@@tmp3]
CODE:00402FD8		      shl     eax, 1
CODE:00402FDA		      mov     edx, 7BA3751Eh  ;	icos36h_7
CODE:00402FDF		      imul    edx
CODE:00402FE1		      mov     eax, [ds:_@@tmp0]	; @@SUM	eax,@@tmp0,sub,@@tmp2,-,-
CODE:00402FE6		      sub     eax, [ds:_@@tmp2]
CODE:00402FEC		      sub     eax, edx	      ;	@@CAST eax,edx,0,5,6,11
CODE:00402FEE		      lea     edx, [eax+edx*2]
CODE:00402FF1		      mov     [ds:mp3_out2_a0],	eax
CODE:00402FF6		      mov     [ds:mp3_out2_b0],	edx
CODE:00402FFC		      retn
CODE:00402FFC endp	      mp3_imdct12
CODE:00402FFC
CODE:00402FFC ;	---------------------------------------------------------------------------
CODE:00402FFD		      align 10h
CODE:00403000
CODE:00403000 ;	===============	S U B R	O U T I	N E =======================================
CODE:00403000
CODE:00403000
CODE:00403000 proc	      mp3_compute_imdct	near  ;	...
CODE:00403000		      test    [byte ptr	ds:cpuid_flags], 10h ; in: ebx=granule
CODE:00403007		      jz      short @@no_rdtsc_supported ; timelog_start rdtsc_imdct
CODE:00403009		      rdtsc
CODE:0040300B		      sub     [ds:rdtsc_imdct],	eax
CODE:00403011		      sbb     [ds:rdtsc_imdct+4], edx
CODE:00403017
CODE:00403017 @@no_rdtsc_supported:		      ;	...
CODE:00403017		      push    ebx
CODE:00403018		      mov     ecx, [ebx+96]   ;	[ebx+$mp3gr_num_nonzero_hybrids_div9]
CODE:0040301B		      imul    eax, ecx,	9
CODE:0040301E		      lea     edi, [ebx+eax*4+160] ; [ebx+$mp3gr_sb_hybrid+eax*4]
CODE:00403025		      jecxz   short @@breakout
CODE:00403027
CODE:00403027 @@scan_zero_lop:			      ;	...
CODE:00403027		      sub     edi, 36	      ;	index-9
CODE:0040302A		      mov     eax, [edi]      ;	[edi+0*4]
CODE:0040302C		      or      eax, [edi+4]
CODE:0040302F		      or      eax, [edi+8]
CODE:00403032		      or      eax, [edi+12]
CODE:00403035		      or      eax, [edi+16]
CODE:00403038		      or      eax, [edi+20]
CODE:0040303B		      or      eax, [edi+24]
CODE:0040303E		      or      eax, [edi+28]
CODE:00403041		      or      eax, [edi+32]   ;	[edi+8*4]
CODE:00403044		      jnz     short @@breakout
CODE:00403046		      dec     ecx
CODE:00403047		      jnz     short @@scan_zero_lop
CODE:00403049
CODE:00403049 @@breakout:			      ;	...
CODE:00403049		      inc     ecx	      ;	div9+1
CODE:0040304A		      shr     ecx, 1	      ;	div18
CODE:0040304C		      mov     [ds:_@@sblimit], ecx
CODE:00403052		      cmp     [dword ptr ebx+44], 2 ; [ebx+$mp3gr_block_type]
CODE:00403056		      jnz     short @@this_long_end
CODE:00403058		      mov     ecx, [ebx+48]   ;	[ebx+$mp3gr_switch_point]
CODE:0040305B		      shl     ecx, 1	      ;	0,1 -->	0,2
CODE:0040305D
CODE:0040305D @@this_long_end:			      ;	...
CODE:0040305D		      mov     [ds:_@@mdct_long_end], ecx
CODE:00403063		      mov     eax, [ebx+48]   ;	[ebx+$mp3gr_switch_point]
CODE:00403066		      mov     [ds:_@@switch_point], eax
CODE:0040306B		      mov     eax, [ebx+44]   ;	[ebx+$mp3gr_block_type]
CODE:0040306E		      imul    eax, 144	      ;	1*36*4
CODE:00403074		      mov     [ds:_@@www], eax
CODE:00403079		      mov     ecx, [ds:mp3_curr_channel]
CODE:0040307F		      mov     eax, [ds:mp3_curr_granule]
CODE:00403084		      imul    ecx, 4608	      ;	36*SBLIMIT*4 ; channel ; sb_samples[ch][gr*18]
CODE:0040308A		      imul    eax, 2304	      ;	18*SBLIMIT*4 ; frame=granule*18
CODE:00403090		      lea     edi, [mp3_sb_samples+ecx+eax]
CODE:00403097		      lea     esi, [ebx+160]  ;	[ebx+$mp3gr_sb_hybrid]
CODE:0040309D		      mov     eax, [ds:mp3_curr_channel]
CODE:004030A2		      imul    eax, 2304	      ;	SBLIMIT*18*4
CODE:004030A8		      lea     ebx, [mp3_mdct_buf+eax]
CODE:004030AE		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004030B5		      jz      short @@no_rdtsc_supported@ ; timelog_start rdtsc_imdct36
CODE:004030B7		      rdtsc
CODE:004030B9		      sub     [ds:rdtsc_imdct36], eax
CODE:004030BF		      sbb     [ds:rdtsc_imdct36+4], edx
CODE:004030C5
CODE:004030C5 @@no_rdtsc_supported@:		      ;	...
CODE:004030C5		      mov     [ds:_@@@JJJ], 0
CODE:004030CF		      cmp     [ds:_@@mdct_long_end], 0
CODE:004030D6		      jz      short @@imdct36_done
CODE:004030D8
CODE:004030D8 @@imdct36_lop:			      ;	...
CODE:004030D8		      mov     ebp, offset mp3_mdct_win ; for j=0 to mdct_long_end-1
CODE:004030DD		      cmp     [ds:_@@@JJJ], 2
CODE:004030E4		      sbb     eax, eax
CODE:004030E6		      and     eax, [ds:_@@switch_point]
CODE:004030EC		      jnz     short @@this_window ; force window 0
CODE:004030EE		      add     ebp, [ds:_@@www] ; mdct_win
CODE:004030F4
CODE:004030F4 @@this_window:			      ;	...
CODE:004030F4		      mov     eax, [ds:_@@@JJJ]
CODE:004030F9		      shr     eax, 1	      ;	cy=0,1
CODE:004030FB		      sbb     eax, eax	      ;	eax=0,FFFFFFFFh
CODE:004030FD		      and     eax, 576	      ;	4*36*4
CODE:00403102		      add     ebp, eax
CODE:00403104		      call    mp3_imdct36
CODE:00403109		      add     edi, 4	      ;	1*4 ; dst
CODE:0040310C		      add     esi, 72	      ;	18*4 ; sb_hybrid
CODE:0040310F		      add     ebx, 72	      ;	mdct_buf ; next
CODE:00403112		      inc     [ds:_@@@JJJ]
CODE:00403118		      mov     eax, [ds:_@@@JJJ]
CODE:0040311D		      cmp     eax, [ds:_@@mdct_long_end]
CODE:00403123		      jb      short @@imdct36_lop
CODE:00403125
CODE:00403125 @@imdct36_done:			      ;	...
CODE:00403125		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040312C		      jz      short @@no_rdtsc_supported@@ ; timelog_end rdtsc_imdct36
CODE:0040312E		      rdtsc
CODE:00403130		      add     [ds:rdtsc_imdct36], eax
CODE:00403136		      adc     [ds:rdtsc_imdct36+4], edx
CODE:0040313C
CODE:0040313C @@no_rdtsc_supported@@:		      ;	...
CODE:0040313C		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_imdct12
CODE:00403143		      jz      short @@@no_rdtsc_supported
CODE:00403145		      rdtsc
CODE:00403147		      sub     [ds:rdtsc_imdct12], eax
CODE:0040314D		      sbb     [ds:rdtsc_imdct12+4], edx
CODE:00403153
CODE:00403153 @@@no_rdtsc_supported:		      ;	...
CODE:00403153		      mov     eax, [ds:_@@@JJJ]
CODE:00403158		      cmp     eax, [ds:_@@sblimit]
CODE:0040315E		      jnb     @@imdct12_done
CODE:00403164
CODE:00403164 @@imdct12_lop:			      ;	...
CODE:00403164		      mov     ebp, (offset mp3_mdct_win+120h) ;	for j=mdct_long_end to sblimit-1
CODE:00403169		      mov     eax, [ds:_@@@JJJ]
CODE:0040316E		      shr     eax, 1	      ;	cy=0,1
CODE:00403170		      sbb     eax, eax	      ;	eax=0,FFFFFFFFh
CODE:00403172		      and     eax, 576	      ;	4*36*4
CODE:00403177		      add     ebp, eax	      ;	mdct_win
CODE:00403179		      mov     eax, [ebx]      ;	IRP i,0,1,2,3,4,5
CODE:0040317B		      mov     [edi], eax      ;	@@SUM [edi+i*SBLIMIT*4],[ebx+(i+0)*4],-,-,-,-
CODE:0040317D		      mov     eax, [ebx+4]
CODE:00403180		      mov     [edi+128], eax
CODE:00403186		      mov     eax, [ebx+8]
CODE:00403189		      mov     [edi+256], eax
CODE:0040318F		      mov     eax, [ebx+12]
CODE:00403192		      mov     [edi+384], eax
CODE:00403198		      mov     eax, [ebx+16]
CODE:0040319B		      mov     [edi+512], eax
CODE:004031A1		      mov     eax, [ebx+20]
CODE:004031A4		      mov     [edi+640], eax  ;	ENDM
CODE:004031AA		      add     edi, 768	      ;	6*SBLIMIT*4
CODE:004031B0		      call    mp3_imdct12
CODE:004031B5		      mov     eax, [ds:mp3_out2_a0] ; IRP i,0,1,2,3,4,5
CODE:004031BA		      mov     edx, [ebp+0]    ;	@@MULH [edi+i*SBLIMIT*4],[mp3_out2_a&i],
CODE:004031BA					      ;	-,-,-,-,0,[ebp+(i+0)*4],[ebx+(1*6+i)*4]
CODE:004031BD		      imul    edx
CODE:004031BF		      add     edx, [ebx+24]
CODE:004031C2		      mov     [edi], edx
CODE:004031C4		      mov     eax, [ds:mp3_out2_b0] ; @@MULH [ebx+(2*6+i)*4],[mp3_out2_b&i],
CODE:004031C4					      ;	-,-,-,-,0,[ebp+(i+6)*4],-
CODE:004031C9		      mov     edx, [ebp+24]
CODE:004031CC		      imul    edx
CODE:004031CE		      mov     [ebx+48],	edx
CODE:004031D1		      mov     eax, [ds:mp3_out2_a1] ; i	= 1
CODE:004031D6		      mov     edx, [ebp+4]
CODE:004031D9		      imul    edx
CODE:004031DB		      add     edx, [ebx+28]
CODE:004031DE		      mov     [edi+128], edx
CODE:004031E4		      mov     eax, [ds:mp3_out2_b1]
CODE:004031E9		      mov     edx, [ebp+28]
CODE:004031EC		      imul    edx
CODE:004031EE		      mov     [ebx+52],	edx
CODE:004031F1		      mov     eax, [ds:mp3_out2_a2] ; i	= 2
CODE:004031F6		      mov     edx, [ebp+8]
CODE:004031F9		      imul    edx
CODE:004031FB		      add     edx, [ebx+32]
CODE:004031FE		      mov     [edi+256], edx
CODE:00403204		      mov     eax, [ds:mp3_out2_b2]
CODE:00403209		      mov     edx, [ebp+32]
CODE:0040320C		      imul    edx
CODE:0040320E		      mov     [ebx+56],	edx
CODE:00403211		      mov     eax, [ds:mp3_out2_a2] ; i	= 3 ; mp3_out2_a3 equ mp3_out2_a2
CODE:00403216		      mov     edx, [ebp+12]
CODE:00403219		      imul    edx
CODE:0040321B		      add     edx, [ebx+36]
CODE:0040321E		      mov     [edi+384], edx
CODE:00403224		      mov     eax, [ds:mp3_out2_b2] ; mp3_out2_b3 equ mp3_out2_b2
CODE:00403229		      mov     edx, [ebp+36]
CODE:0040322C		      imul    edx
CODE:0040322E		      mov     [ebx+60],	edx
CODE:00403231		      mov     eax, [ds:mp3_out2_a1] ; i	= 4 ; mp3_out2_a4 equ mp3_out2_a1
CODE:00403236		      mov     edx, [ebp+16]
CODE:00403239		      imul    edx
CODE:0040323B		      add     edx, [ebx+40]
CODE:0040323E		      mov     [edi+512], edx
CODE:00403244		      mov     eax, [ds:mp3_out2_b1] ; mp3_out2_b4 equ mp3_out2_b1
CODE:00403249		      mov     edx, [ebp+40]
CODE:0040324C		      imul    edx
CODE:0040324E		      mov     [ebx+64],	edx
CODE:00403251		      mov     eax, [ds:mp3_out2_a0] ; i	= 5 ; mp3_out2_a5 equ mp3_out2_a0
CODE:00403256		      mov     edx, [ebp+20]
CODE:00403259		      imul    edx
CODE:0040325B		      add     edx, [ebx+44]
CODE:0040325E		      mov     [edi+640], edx
CODE:00403264		      mov     eax, [ds:mp3_out2_b0] ; mp3_out2_b5 equ mp3_out2_b0
CODE:00403269		      mov     edx, [ebp+44]
CODE:0040326C		      imul    edx
CODE:0040326E		      mov     [ebx+68],	edx   ;	ENDM
CODE:00403271		      add     edi, 768	      ;	6*SBLIMIT*4
CODE:00403277		      add     esi, 4	      ;	sb_hybrid
CODE:0040327A		      call    mp3_imdct12
CODE:0040327F		      mov     eax, [ds:mp3_out2_a0] ; IRP i,0,1,2,3,4,5
CODE:00403284		      mov     edx, [ebp+0]    ;	@@MULH [edi+i*SBLIMIT*4],[mp3_out2_a&i],
CODE:00403284					      ;	-,-,-,-,0,[ebp+(i+0)*4],[ebx+(2*6+i)*4]
CODE:00403287		      imul    edx	      ;	@@MULH [ebx+(0*6+i)*4],[mp3_out2_b&i],
CODE:00403287					      ;	-,-,-,-,0,[ebp+(i+6)*4],-
CODE:00403289		      add     edx, [ebx+48]
CODE:0040328C		      mov     [edi], edx
CODE:0040328E		      mov     eax, [ds:mp3_out2_b0]
CODE:00403293		      mov     edx, [ebp+18h]
CODE:00403296		      imul    edx
CODE:00403298		      mov     [ebx], edx
CODE:0040329A		      mov     eax, [ds:mp3_out2_a1] ; i	= 1
CODE:0040329F		      mov     edx, [ebp+4]
CODE:004032A2		      imul    edx
CODE:004032A4		      add     edx, [ebx+52]
CODE:004032A7		      mov     [edi+128], edx
CODE:004032AD		      mov     eax, [ds:mp3_out2_b1]
CODE:004032B2		      mov     edx, [ebp+28]
CODE:004032B5		      imul    edx
CODE:004032B7		      mov     [ebx+4], edx
CODE:004032BA		      mov     eax, [ds:mp3_out2_a2] ; i	= 2
CODE:004032BF		      mov     edx, [ebp+8]
CODE:004032C2		      imul    edx
CODE:004032C4		      add     edx, [ebx+56]
CODE:004032C7		      mov     [edi+256], edx
CODE:004032CD		      mov     eax, [ds:mp3_out2_b2]
CODE:004032D2		      mov     edx, [ebp+32]
CODE:004032D5		      imul    edx
CODE:004032D7		      mov     [ebx+8], edx
CODE:004032DA		      mov     eax, [ds:mp3_out2_a2] ; i	= 3
CODE:004032DF		      mov     edx, [ebp+12]
CODE:004032E2		      imul    edx
CODE:004032E4		      add     edx, [ebx+60]
CODE:004032E7		      mov     [edi+384], edx
CODE:004032ED		      mov     eax, [ds:mp3_out2_b2]
CODE:004032F2		      mov     edx, [ebp+36]
CODE:004032F5		      imul    edx
CODE:004032F7		      mov     [ebx+12],	edx
CODE:004032FA		      mov     eax, [ds:mp3_out2_a1] ; i	= 4
CODE:004032FF		      mov     edx, [ebp+16]
CODE:00403302		      imul    edx
CODE:00403304		      add     edx, [ebx+64]
CODE:00403307		      mov     [edi+512], edx
CODE:0040330D		      mov     eax, [ds:mp3_out2_b1]
CODE:00403312		      mov     edx, [ebp+40]
CODE:00403315		      imul    edx
CODE:00403317		      mov     [ebx+16],	edx
CODE:0040331A		      mov     eax, [ds:mp3_out2_a0] ; i	= 5
CODE:0040331F		      mov     edx, [ebp+20]
CODE:00403322		      imul    edx
CODE:00403324		      add     edx, [ebx+68]
CODE:00403327		      mov     [edi+640], edx
CODE:0040332D		      mov     eax, [ds:mp3_out2_b0]
CODE:00403332		      mov     edx, [ebp+44]
CODE:00403335		      imul    edx
CODE:00403337		      mov     [ebx+20],	edx   ;	ENDM
CODE:0040333A		      add     esi, 4
CODE:0040333D		      call    mp3_imdct12
CODE:00403342		      mov     eax, [ds:mp3_out2_a0] ; IRP i,0,1,2,3,4,5
CODE:00403347		      mov     edx, [ebp+0]    ;	@@MULH [ebx+(0*6+i)*4],[mp3_out2_a&i],
CODE:00403347					      ;	-,-,-,-,0,[ebp+(i+0)*4],[ebx+(0*6+i)*4]
CODE:0040334A		      imul    edx
CODE:0040334C		      add     edx, [ebx]
CODE:0040334E		      mov     [ebx], edx
CODE:00403350		      mov     eax, [ds:mp3_out2_b0] ; @@MULH [ebx+(1*6+i)*4],[mp3_out2_b&i],
CODE:00403350					      ;	-,-,-,-,0,[ebp+(i+6)*4],-
CODE:00403355		      mov     edx, [ebp+24]
CODE:00403358		      imul    edx
CODE:0040335A		      mov     [ebx+24],	edx
CODE:0040335D		      mov     [dword ptr ebx+48], 0 ; [ebx+(2*6+i)*4]
CODE:00403364		      mov     eax, [ds:mp3_out2_a1] ; i	= 1
CODE:00403369		      mov     edx, [ebp+4]
CODE:0040336C		      imul    edx
CODE:0040336E		      add     edx, [ebx+4]
CODE:00403371		      mov     [ebx+4], edx
CODE:00403374		      mov     eax, [ds:mp3_out2_b1]
CODE:00403379		      mov     edx, [ebp+28]
CODE:0040337C		      imul    edx
CODE:0040337E		      mov     [ebx+28],	edx
CODE:00403381		      mov     [dword ptr ebx+52], 0 ; [ebx+(2*6+i)*4]
CODE:00403388		      mov     eax, [ds:mp3_out2_a2] ; i	= 2
CODE:0040338D		      mov     edx, [ebp+8]
CODE:00403390		      imul    edx
CODE:00403392		      add     edx, [ebx+8]
CODE:00403395		      mov     [ebx+8], edx
CODE:00403398		      mov     eax, [ds:mp3_out2_b2]
CODE:0040339D		      mov     edx, [ebp+32]
CODE:004033A0		      imul    edx
CODE:004033A2		      mov     [ebx+32],	edx
CODE:004033A5		      mov     [dword ptr ebx+56], 0
CODE:004033AC		      mov     eax, [ds:mp3_out2_a2] ; i	= 3
CODE:004033B1		      mov     edx, [ebp+12]
CODE:004033B4		      imul    edx
CODE:004033B6		      add     edx, [ebx+0Ch]
CODE:004033B9		      mov     [ebx+12],	edx
CODE:004033BC		      mov     eax, [ds:mp3_out2_b2]
CODE:004033C1		      mov     edx, [ebp+36]
CODE:004033C4		      imul    edx
CODE:004033C6		      mov     [ebx+36],	edx
CODE:004033C9		      mov     [dword ptr ebx+60], 0 ; [ebx+(2*6+i)*4]
CODE:004033D0		      mov     eax, [ds:mp3_out2_a1] ; i	= 4
CODE:004033D5		      mov     edx, [ebp+16]
CODE:004033D8		      imul    edx
CODE:004033DA		      add     edx, [ebx+16]
CODE:004033DD		      mov     [ebx+16],	edx
CODE:004033E0		      mov     eax, [ds:mp3_out2_b1]
CODE:004033E5		      mov     edx, [ebp+40]
CODE:004033E8		      imul    edx
CODE:004033EA		      mov     [ebx+40],	edx
CODE:004033ED		      mov     [dword ptr ebx+64], 0
CODE:004033F4		      mov     eax, [ds:mp3_out2_a0] ; i	= 5
CODE:004033F9		      mov     edx, [ebp+20]
CODE:004033FC		      imul    edx
CODE:004033FE		      add     edx, [ebx+20]
CODE:00403401		      mov     [ebx+20],	edx
CODE:00403404		      mov     eax, [ds:mp3_out2_b0]
CODE:00403409		      mov     edx, [ebp+44]
CODE:0040340C		      imul    edx
CODE:0040340E		      mov     [ebx+44],	edx
CODE:00403411		      mov     [dword ptr ebx+68], 0 ; [ebx+(2*6+i)*4]
CODE:00403418		      add     edi, -1532      ;	(1*4) -	(2*6*SBLIMIT*4)	; dst
CODE:0040341E		      add     esi, 64	      ;	18*4 - (2*4) ; sb_hybrid
CODE:00403421		      add     ebx, 72	      ;	18*4 ; mdct_buf
CODE:00403424		      inc     [ds:_@@@JJJ]    ;	next
CODE:0040342A		      mov     eax, [ds:_@@@JJJ]
CODE:0040342F		      cmp     eax, [ds:_@@sblimit]
CODE:00403435		      jb      @@imdct12_lop
CODE:0040343B
CODE:0040343B @@imdct12_done:			      ;	...
CODE:0040343B		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00403442		      jz      short @@@no_rdtsc_supported@ ; timelog_end rdtsc_imdct12
CODE:00403444		      rdtsc
CODE:00403446		      add     [ds:rdtsc_imdct12], eax
CODE:0040344C		      adc     [ds:rdtsc_imdct12+4], edx
CODE:00403452
CODE:00403452 @@@no_rdtsc_supported@:		      ;	...
CODE:00403452		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_imdct0
CODE:00403459		      jz      short @@@no_rdtsc_supported@@
CODE:0040345B		      rdtsc
CODE:0040345D		      sub     [ds:rdtsc_imdct0], eax
CODE:00403463		      sbb     [ds:rdtsc_imdct0+4], edx
CODE:00403469
CODE:00403469 @@@no_rdtsc_supported@@:		      ;	...
CODE:00403469		      cmp     [ds:_@@@JJJ], 32 ; SBLIMIT
CODE:00403470		      jnb     @@zero_outer_done
CODE:00403476
CODE:00403476 @@zero_outer_lop:			      ;	...
CODE:00403476		      mov     eax, [ebx]      ;	zero bands
CODE:00403476					      ;	IRP nn,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
CODE:00403476					      ;	 mov  eax,dword	ptr [ebx+nn*4]
CODE:00403476					      ;	 mov  dword ptr	[ebx+nn*4],0
CODE:00403476					      ;	 mov  dword ptr	[edi+nn*SBLIMIT*4],eax ; [dst]
CODE:00403476					      ;	ENDM
CODE:00403478		      mov     [dword ptr ebx], 0 ; nn =	0
CODE:0040347E		      mov     [edi], eax
CODE:00403480		      mov     eax, [ebx+4]    ;	nn = 1
CODE:00403483		      mov     [dword ptr ebx+4], 0
CODE:0040348A		      mov     [edi+128], eax
CODE:00403490		      mov     eax, [ebx+8]
CODE:00403493		      mov     [dword ptr ebx+8], 0
CODE:0040349A		      mov     [edi+256], eax
CODE:004034A0		      mov     eax, [ebx+12]
CODE:004034A3		      mov     [dword ptr ebx+12], 0
CODE:004034AA		      mov     [edi+384], eax
CODE:004034B0		      mov     eax, [ebx+16]   ;	nn = 4
CODE:004034B3		      mov     [dword ptr ebx+16], 0
CODE:004034BA		      mov     [edi+512], eax
CODE:004034C0		      mov     eax, [ebx+20]
CODE:004034C3		      mov     [dword ptr ebx+20], 0
CODE:004034CA		      mov     [edi+640], eax  ;	[edi+5*SBLIMIT*4]
CODE:004034D0		      mov     eax, [ebx+24]
CODE:004034D3		      mov     [dword ptr ebx+24], 0
CODE:004034DA		      mov     [edi+768], eax
CODE:004034E0		      mov     eax, [ebx+28]   ;	nn = 7
CODE:004034E3		      mov     [dword ptr ebx+28], 0
CODE:004034EA		      mov     [edi+896], eax
CODE:004034F0		      mov     eax, [ebx+32]
CODE:004034F3		      mov     [dword ptr ebx+32], 0
CODE:004034FA		      mov     [edi+1024], eax ;	[edi+8*SBLIMIT*4]
CODE:00403500		      mov     eax, [ebx+36]
CODE:00403503		      mov     [dword ptr ebx+36], 0
CODE:0040350A		      mov     [edi+1152], eax
CODE:00403510		      mov     eax, [ebx+40]
CODE:00403513		      mov     [dword ptr ebx+40], 0
CODE:0040351A		      mov     [edi+1280], eax
CODE:00403520		      mov     eax, [ebx+44]
CODE:00403523		      mov     [dword ptr ebx+44], 0
CODE:0040352A		      mov     [edi+1408], eax
CODE:00403530		      mov     eax, [ebx+48]
CODE:00403533		      mov     [dword ptr ebx+48], 0
CODE:0040353A		      mov     [edi+1536], eax
CODE:00403540		      mov     eax, [ebx+52]
CODE:00403543		      mov     [dword ptr ebx+52], 0
CODE:0040354A		      mov     [edi+1664], eax
CODE:00403550		      mov     eax, [ebx+56]
CODE:00403553		      mov     [dword ptr ebx+56], 0
CODE:0040355A		      mov     [edi+1792], eax
CODE:00403560		      mov     eax, [ebx+60]
CODE:00403563		      mov     [dword ptr ebx+60], 0
CODE:0040356A		      mov     [edi+1920], eax
CODE:00403570		      mov     eax, [ebx+64]
CODE:00403573		      mov     [dword ptr ebx+64], 0 ; [edi+16*SBLIMIT*4]
CODE:0040357A		      mov     [edi+2048], eax
CODE:00403580		      mov     eax, [ebx+68]   ;	nn = 17
CODE:00403583		      mov     [dword ptr ebx+68], 0
CODE:0040358A		      mov     [edi+2176], eax ;	ENDM
CODE:00403590		      add     ebx, 72	      ;	18*4
CODE:00403593		      add     edi, 4
CODE:00403596		      inc     [ds:_@@@JJJ]
CODE:0040359C		      cmp     [ds:_@@@JJJ], 32
CODE:004035A3		      jb      @@zero_outer_lop
CODE:004035A9
CODE:004035A9 @@zero_outer_done:		      ;	...
CODE:004035A9		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_imdct0
CODE:004035B0		      jz      short @@@no_rdtsc_supported@@@
CODE:004035B2		      rdtsc
CODE:004035B4		      add     [ds:rdtsc_imdct0], eax
CODE:004035BA		      adc     [ds:rdtsc_imdct0+4], edx
CODE:004035C0
CODE:004035C0 @@@no_rdtsc_supported@@@:		      ;	...
CODE:004035C0		      pop     ebx
CODE:004035C1		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_imdct
CODE:004035C8		      jz      short @@@@no_rdtsc_supported
CODE:004035CA		      rdtsc
CODE:004035CC		      add     [ds:rdtsc_imdct],	eax
CODE:004035D2		      adc     [ds:rdtsc_imdct+4], edx
CODE:004035D8
CODE:004035D8 @@@@no_rdtsc_supported:		      ;	...
CODE:004035D8		      retn
CODE:004035D8 endp	      mp3_compute_imdct
CODE:004035D8
CODE:004035D8 ;	---------------------------------------------------------------------------
CODE:004035D9		      align 10h
CODE:004035E0
CODE:004035E0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004035E0
CODE:004035E0
CODE:004035E0 proc	      mp3_dct32_shift_0	near  ;	...
CODE:004035E0		      mov     eax, [esi]      ;	mp3_dct32_macro	macro rate_shift ; rate_shift =	0
CODE:004035E2		      mov     edx, [esi+124]  ;	@@BF macro a,b,sign,cos,shift
CODE:004035E2					      ;	@@BF 0,31,+,COS0_0,1
CODE:004035E2					      ;	@@need_a equ (rate_shift EQ 0) or (a LT	16) ; a	= 0
CODE:004035E2					      ;	@@need_b equ (rate_shift EQ 0) or (b LT	16) ; b	= 31
CODE:004035E2					      ;	IF @@need_a AND	@@need_b ; rate_shift =	0
CODE:004035E2					      ;	   mov eax,dword ptr [esi+a*4]
CODE:004035E2					      ;	   mov edx,dword ptr [esi+b*4]
CODE:004035E2					      ;	   add dword ptr [esi+a*4],edx
CODE:004035E5		      add     [esi], edx
CODE:004035E7		      sub     eax, edx
CODE:004035E9		      shl     eax, 1	      ;	shl  eax,shift
CODE:004035E9					      ;	(needed	when COS.fraction is less than 32bit)
CODE:004035EB		      mov     edx, 4013C251h  ;	sign&&cos ; +COS0_0 = 4013C251h
CODE:004035F0		      imul    edx
CODE:004035F2		      mov     [esi+124], edx  ;	[esi+b*4] ; upper 32bit	of multiply result
CODE:004035F5		      mov     eax, [esi+60]   ;	@@BF 15,16,+,COS0_15,5
CODE:004035F5					      ;	[esi+a*4]
CODE:004035F8		      mov     edx, [esi+64]   ;	[esi+b*4]
CODE:004035FB		      add     [esi+60],	edx   ;	[esi+a*4]
CODE:004035FE		      sub     eax, edx
CODE:00403600		      shl     eax, 5	      ;	shl eax,shift
CODE:00403603		      mov     edx, 518522FBh  ;	sign&&cos ; +COS0_15 = 518522FBh
CODE:00403608		      imul    edx
CODE:0040360A		      mov     [esi+64],	edx   ;	[esi+b*4]
CODE:0040360D		      mov     eax, [esi]      ;	@@BF 0,15,+,COS1_0,1
CODE:0040360F		      mov     edx, [esi+60]
CODE:00403612		      add     [esi], edx
CODE:00403614		      sub     eax, edx
CODE:00403616		      shl     eax, 1
CODE:00403618		      mov     edx, 404F4672h  ;	+COS1_0
CODE:0040361D		      imul    edx
CODE:0040361F		      mov     [esi+60],	edx
CODE:00403622		      mov     eax, [esi+64]   ;	@@BF 16,31,-,COS1_0,1
CODE:00403625		      mov     edx, [esi+124]
CODE:00403628		      add     [esi+64],	edx
CODE:0040362B		      sub     eax, edx
CODE:0040362D		      shl     eax, 1
CODE:0040362F		      mov     edx, 0BFB0B98Eh ;	-COS1_0
CODE:00403634		      imul    edx
CODE:00403636		      mov     [esi+124], edx
CODE:00403639		      mov     eax, [esi+28]   ;	@@BF 7,24,+,COS0_7,1
CODE:0040363C		      mov     edx, [esi+96]
CODE:0040363F		      add     [esi+28],	edx
CODE:00403642		      sub     eax, edx
CODE:00403644		      shl     eax, 1
CODE:00403646		      mov     edx, 56601EA7h
CODE:0040364B		      imul    edx
CODE:0040364D		      mov     [esi+96],	edx
CODE:00403650		      mov     eax, [esi+32]   ;	@@BF 8,23,+,COS0_8,1
CODE:00403653		      mov     edx, [esi+92]
CODE:00403656		      add     [esi+32],	edx
CODE:00403659		      sub     eax, edx
CODE:0040365B		      shl     eax, 1
CODE:0040365D		      mov     edx, 5F4CF6ECh
CODE:00403662		      imul    edx
CODE:00403664		      mov     [esi+92],	edx
CODE:00403667		      mov     eax, [esi+28]   ;	@@BF 7,8,+,COS1_7,4
CODE:0040366A		      mov     edx, [esi+32]
CODE:0040366D		      add     [esi+28],	edx
CODE:00403670		      sub     eax, edx
CODE:00403672		      shl     eax, 4
CODE:00403675		      mov     edx, 519E4E04h
CODE:0040367A		      imul    edx
CODE:0040367C		      mov     [esi+32],	edx
CODE:0040367F		      mov     eax, [esi+92]   ;	@@BF 23,24,-,COS1_7,4
CODE:00403682		      mov     edx, [esi+96]
CODE:00403685		      add     [esi+92],	edx
CODE:00403688		      sub     eax, edx
CODE:0040368A		      shl     eax, 4
CODE:0040368D		      mov     edx, 0AE61B1FCh
CODE:00403692		      imul    edx
CODE:00403694		      mov     [esi+96],	edx
CODE:00403697		      mov     eax, [esi]      ;	@@BF 0,7,+,COS2_0,1
CODE:00403699		      mov     edx, [esi+28]
CODE:0040369C		      add     [esi], edx
CODE:0040369E		      sub     eax, edx
CODE:004036A0		      shl     eax, 1
CODE:004036A2		      mov     edx, 4140FB46h
CODE:004036A7		      imul    edx
CODE:004036A9		      mov     [esi+28],	edx
CODE:004036AC		      mov     eax, [esi+32]   ;	@@BF 8,15,-,COS2_0,1
CODE:004036AF		      mov     edx, [esi+60]
CODE:004036B2		      add     [esi+32],	edx
CODE:004036B5		      sub     eax, edx
CODE:004036B7		      shl     eax, 1
CODE:004036B9		      mov     edx, 0BEBF04BAh
CODE:004036BE		      imul    edx
CODE:004036C0		      mov     [esi+60],	edx
CODE:004036C3		      mov     eax, [esi+64]   ;	@@BF 16,23,+,COS2_0,1
CODE:004036C6		      mov     edx, [esi+92]
CODE:004036C9		      add     [esi+40h], edx
CODE:004036CC		      sub     eax, edx
CODE:004036CE		      shl     eax, 1
CODE:004036D0		      mov     edx, 4140FB46h
CODE:004036D5		      imul    edx
CODE:004036D7		      mov     [esi+92],	edx
CODE:004036DA		      mov     eax, [esi+96]   ;	@@BF 24,31,-,COS2_0,1
CODE:004036DD		      mov     edx, [esi+124]
CODE:004036E0		      add     [esi+96],	edx
CODE:004036E3		      sub     eax, edx
CODE:004036E5		      shl     eax, 1
CODE:004036E7		      mov     edx, 0BEBF04BAh
CODE:004036EC		      imul    edx
CODE:004036EE		      mov     [esi+124], edx
CODE:004036F1		      mov     eax, [esi+12]   ;	@@BF 3,28,+,COS0_3,1
CODE:004036F4		      mov     edx, [esi+112]
CODE:004036F7		      add     [esi+12],	edx
CODE:004036FA		      sub     eax, edx
CODE:004036FC		      shl     eax, 1
CODE:004036FE		      mov     edx, 43F93421h
CODE:00403703		      imul    edx
CODE:00403705		      mov     [esi+112], edx
CODE:00403708		      mov     eax, [esi+48]   ;	@@BF 12,19,+,COS0_12,2
CODE:0040370B		      mov     edx, [esi+76]
CODE:0040370E		      add     [esi+48],	edx
CODE:00403711		      sub     eax, edx
CODE:00403713		      shl     eax, 2
CODE:00403716		      mov     edx, 5EFC8D97h
CODE:0040371B		      imul    edx
CODE:0040371D		      mov     [esi+76],	edx
CODE:00403720		      mov     eax, [esi+12]   ;	@@BF 3,12,+,COS1_3,1
CODE:00403723		      mov     edx, [esi+48]
CODE:00403726		      add     [esi+12],	edx
CODE:00403729		      sub     eax, edx
CODE:0040372B		      shl     eax, 1
CODE:0040372D		      mov     edx, 52CB0E63h
CODE:00403732		      imul    edx
CODE:00403734		      mov     [esi+48],	edx
CODE:00403737		      mov     eax, [esi+76]   ;	@@BF 19,28,-,COS1_3,1
CODE:0040373A		      mov     edx, [esi+112]
CODE:0040373D		      add     [esi+76],	edx
CODE:00403740		      sub     eax, edx
CODE:00403742		      shl     eax, 1
CODE:00403744		      mov     edx, 0AD34F19Dh
CODE:00403749		      imul    edx
CODE:0040374B		      mov     [esi+112], edx
CODE:0040374E		      mov     eax, [esi+16]   ;	@@BF 4,27,+,COS0_4,1
CODE:00403751		      mov     edx, [esi+108]
CODE:00403754		      add     [esi+16],	edx
CODE:00403757		      sub     eax, edx
CODE:00403759		      shl     eax, 1
CODE:0040375B		      mov     edx, 46CC1BC5h
CODE:00403760		      imul    edx
CODE:00403762		      mov     [esi+108], edx
CODE:00403765		      mov     eax, [esi+44]   ;	@@BF 11,20,+,COS0_11,2
CODE:00403768		      mov     edx, [esi+80]
CODE:0040376B		      add     [esi+44],	edx
CODE:0040376E		      sub     eax, edx
CODE:00403770		      shl     eax, 2
CODE:00403773		      mov     edx, 4AD81A98h
CODE:00403778		      imul    edx
CODE:0040377A		      mov     [esi+80],	edx
CODE:0040377D		      mov     eax, [esi+16]   ;	@@BF 4,11,+,COS1_4,1
CODE:00403780		      mov     edx, [esi+44]
CODE:00403783		      add     [esi+16],	edx
CODE:00403786		      sub     eax, edx
CODE:00403788		      shl     eax, 1
CODE:0040378A		      mov     edx, 64E2402Eh
CODE:0040378F		      imul    edx
CODE:00403791		      mov     [esi+44],	edx
CODE:00403794		      mov     eax, [esi+80]   ;	@@BF 20,27,-,COS1_4,1
CODE:00403797		      mov     edx, [esi+108]
CODE:0040379A		      add     [esi+80],	edx
CODE:0040379D		      sub     eax, edx
CODE:0040379F		      shl     eax, 1
CODE:004037A1		      mov     edx, 9B1DBFD2h
CODE:004037A6		      imul    edx
CODE:004037A8		      mov     [esi+108], edx
CODE:004037AB		      mov     eax, [esi+12]   ;	@@BF 3,4,+,COS2_3,3
CODE:004037AE		      mov     edx, [esi+16]
CODE:004037B1		      add     [esi+12],	edx
CODE:004037B4		      sub     eax, edx
CODE:004037B6		      shl     eax, 3
CODE:004037B9		      mov     edx, 52036742h
CODE:004037BE		      imul    edx
CODE:004037C0		      mov     [esi+16],	edx
CODE:004037C3		      mov     eax, [esi+44]   ;	@@BF 11,12,-,COS2_3,3
CODE:004037C6		      mov     edx, [esi+48]
CODE:004037C9		      add     [esi+44],	edx
CODE:004037CC		      sub     eax, edx
CODE:004037CE		      shl     eax, 3
CODE:004037D1		      mov     edx, 0ADFC98BEh ;	-COS2_3
CODE:004037D6		      imul    edx
CODE:004037D8		      mov     [esi+48],	edx
CODE:004037DB		      mov     eax, [esi+76]   ;	@@BF 19,20,+,COS2_3,3
CODE:004037DE		      mov     edx, [esi+80]
CODE:004037E1		      add     [esi+4Ch], edx
CODE:004037E4		      sub     eax, edx
CODE:004037E6		      shl     eax, 3
CODE:004037E9		      mov     edx, 52036742h  ;	+COS2_3
CODE:004037EE		      imul    edx
CODE:004037F0		      mov     [esi+80],	edx
CODE:004037F3		      mov     eax, [esi+108]  ;	@@BF 27,28,-,COS2_3,3
CODE:004037F6		      mov     edx, [esi+112]
CODE:004037F9		      add     [esi+108], edx
CODE:004037FC		      sub     eax, edx
CODE:004037FE		      shl     eax, 3
CODE:00403801		      mov     edx, 0ADFC98BEh
CODE:00403806		      imul    edx
CODE:00403808		      mov     [esi+112], edx
CODE:0040380B		      mov     eax, [esi]      ;	@@BF 0,3,+,COS3_0,1
CODE:0040380D		      mov     edx, [esi+12]
CODE:00403810		      add     [esi], edx
CODE:00403812		      sub     eax, edx
CODE:00403814		      shl     eax, 1
CODE:00403816		      mov     edx, 4545E9F0h
CODE:0040381B		      imul    edx
CODE:0040381D		      mov     [esi+12],	edx
CODE:00403820		      mov     eax, [esi+16]   ;	@@BF 4,7,-,COS3_0,1
CODE:00403823		      mov     edx, [esi+28]
CODE:00403826		      add     [esi+16],	edx
CODE:00403829		      sub     eax, edx
CODE:0040382B		      shl     eax, 1
CODE:0040382D		      mov     edx, 0BABA1610h
CODE:00403832		      imul    edx
CODE:00403834		      mov     [esi+28],	edx
CODE:00403837		      mov     eax, [esi+32]   ;	@@BF 8,11,+,COS3_0,1
CODE:0040383A		      mov     edx, [esi+44]
CODE:0040383D		      add     [esi+32],	edx
CODE:00403840		      sub     eax, edx
CODE:00403842		      shl     eax, 1
CODE:00403844		      mov     edx, 4545E9F0h
CODE:00403849		      imul    edx
CODE:0040384B		      mov     [esi+44],	edx
CODE:0040384E		      mov     eax, [esi+48]   ;	@@BF 12,15,-,COS3_0,1
CODE:00403851		      mov     edx, [esi+60]
CODE:00403854		      add     [esi+48],	edx
CODE:00403857		      sub     eax, edx
CODE:00403859		      shl     eax, 1
CODE:0040385B		      mov     edx, 0BABA1610h
CODE:00403860		      imul    edx
CODE:00403862		      mov     [esi+60],	edx
CODE:00403865		      mov     eax, [esi+64]   ;	@@BF 16,19,+,COS3_0,1
CODE:00403868		      mov     edx, [esi+76]
CODE:0040386B		      add     [esi+64],	edx
CODE:0040386E		      sub     eax, edx
CODE:00403870		      shl     eax, 1
CODE:00403872		      mov     edx, 4545E9F0h
CODE:00403877		      imul    edx
CODE:00403879		      mov     [esi+76],	edx
CODE:0040387C		      mov     eax, [esi+80]   ;	@@BF 20,23,-,COS3_0,1
CODE:0040387F		      mov     edx, [esi+92]
CODE:00403882		      add     [esi+80],	edx
CODE:00403885		      sub     eax, edx
CODE:00403887		      shl     eax, 1
CODE:00403889		      mov     edx, 0BABA1610h ;	-COS3_0
CODE:0040388E		      imul    edx
CODE:00403890		      mov     [esi+92],	edx
CODE:00403893		      mov     eax, [esi+96]   ;	@@BF 24,27,+,COS3_0,1
CODE:00403896		      mov     edx, [esi+108]
CODE:00403899		      add     [esi+96],	edx
CODE:0040389C		      sub     eax, edx
CODE:0040389E		      shl     eax, 1
CODE:004038A0		      mov     edx, 4545E9F0h  ;	+COS3_0
CODE:004038A5		      imul    edx
CODE:004038A7		      mov     [esi+108], edx
CODE:004038AA		      mov     eax, [esi+112]  ;	@@BF 28,31,-,COS3_0,1
CODE:004038AD		      mov     edx, [esi+124]
CODE:004038B0		      add     [esi+112], edx
CODE:004038B3		      sub     eax, edx
CODE:004038B5		      shl     eax, 1
CODE:004038B7		      mov     edx, 0BABA1610h
CODE:004038BC		      imul    edx
CODE:004038BE		      mov     [esi+124], edx
CODE:004038C1		      mov     eax, [esi+4]    ;	@@BF 1,30,+,COS0_1,1
CODE:004038C4		      mov     edx, [esi+120]
CODE:004038C7		      add     [esi+4], edx
CODE:004038CA		      sub     eax, edx
CODE:004038CC		      shl     eax, 1
CODE:004038CE		      mov     edx, 40B345BDh
CODE:004038D3		      imul    edx
CODE:004038D5		      mov     [esi+120], edx
CODE:004038D8		      mov     eax, [esi+56]   ;	@@BF 14,17,+,COS0_14,3
CODE:004038DB		      mov     edx, [esi+68]
CODE:004038DE		      add     [esi+56],	edx
CODE:004038E1		      sub     eax, edx
CODE:004038E3		      shl     eax, 3
CODE:004038E6		      mov     edx, 6D0B20D0h
CODE:004038EB		      imul    edx
CODE:004038ED		      mov     [esi+68],	edx
CODE:004038F0		      mov     eax, [esi+4]    ;	@@BF 1,14,+,COS1_1,1
CODE:004038F3		      mov     edx, [esi+56]
CODE:004038F6		      add     [esi+4], edx
CODE:004038F9		      sub     eax, edx
CODE:004038FB		      shl     eax, 1
CODE:004038FD		      mov     edx, 42E13C10h
CODE:00403902		      imul    edx
CODE:00403904		      mov     [esi+56],	edx
CODE:00403907		      mov     eax, [esi+68]   ;	@@BF 17,30,-,COS1_1,1
CODE:0040390A		      mov     edx, [esi+120]
CODE:0040390D		      add     [esi+68],	edx
CODE:00403910		      sub     eax, edx
CODE:00403912		      shl     eax, 1
CODE:00403914		      mov     edx, 0BD1EC3F0h
CODE:00403919		      imul    edx
CODE:0040391B		      mov     [esi+120], edx
CODE:0040391E		      mov     eax, [esi+24]   ;	@@BF 6,25,+,COS0_6,1
CODE:00403921		      mov     edx, [esi+100]
CODE:00403924		      add     [esi+24],	edx
CODE:00403927		      sub     eax, edx
CODE:00403929		      shl     eax, 1
CODE:0040392B		      mov     edx, 4FAE3712h
CODE:00403930		      imul    edx
CODE:00403932		      mov     [esi+100], edx
CODE:00403935		      mov     eax, [esi+36]   ;	@@BF 9,22,+,COS0_9,1
CODE:00403938		      mov     edx, [esi+88]
CODE:0040393B		      add     [esi+36],	edx
CODE:0040393E		      sub     eax, edx
CODE:00403940		      shl     eax, 1
CODE:00403942		      mov     edx, 6B6FCF27h
CODE:00403947		      imul    edx
CODE:00403949		      mov     [esi+88],	edx
CODE:0040394C		      mov     eax, [esi+24]   ;	@@BF 6,	9,+,COS1_6,2
CODE:0040394F		      mov     edx, [esi+36]
CODE:00403952		      add     [esi+24],	edx
CODE:00403955		      sub     eax, edx
CODE:00403957		      shl     eax, 2
CODE:0040395A		      mov     edx, 6E3C92C2h
CODE:0040395F		      imul    edx
CODE:00403961		      mov     [esi+36],	edx
CODE:00403964		      mov     eax, [esi+88]   ;	@@BF 22,25,-,COS1_6,2
CODE:00403967		      mov     edx, [esi+100]
CODE:0040396A		      add     [esi+88],	edx
CODE:0040396D		      sub     eax, edx
CODE:0040396F		      shl     eax, 2
CODE:00403972		      mov     edx, 91C36D3Eh
CODE:00403977		      imul    edx
CODE:00403979		      mov     [esi+100], edx
CODE:0040397C		      mov     eax, [esi+4]    ;	@@BF 1,	6,+,COS2_1,1
CODE:0040397F		      mov     edx, [esi+24]
CODE:00403982		      add     [esi+4], edx
CODE:00403985		      sub     eax, edx
CODE:00403987		      shl     eax, 1
CODE:00403989		      mov     edx, 4CF8DE88h
CODE:0040398E		      imul    edx
CODE:00403990		      mov     [esi+24],	edx
CODE:00403993		      mov     eax, [esi+36]   ;	@@BF 9,14,-,COS2_1,1
CODE:00403996		      mov     edx, [esi+56]
CODE:00403999		      add     [esi+36],	edx
CODE:0040399C		      sub     eax, edx
CODE:0040399E		      shl     eax, 1
CODE:004039A0		      mov     edx, 0B3072178h
CODE:004039A5		      imul    edx
CODE:004039A7		      mov     [esi+56],	edx
CODE:004039AA		      mov     eax, [esi+68]   ;	@@BF 17,22,+,COS2_1,1
CODE:004039AD		      mov     edx, [esi+88]
CODE:004039B0		      add     [esi+68],	edx
CODE:004039B3		      sub     eax, edx
CODE:004039B5		      shl     eax, 1
CODE:004039B7		      mov     edx, 4CF8DE88h
CODE:004039BC		      imul    edx
CODE:004039BE		      mov     [esi+88],	edx
CODE:004039C1		      mov     eax, [esi+100]  ;	@@BF 25,30,-,COS2_1,1
CODE:004039C4		      mov     edx, [esi+120]
CODE:004039C7		      add     [esi+100], edx
CODE:004039CA		      sub     eax, edx
CODE:004039CC		      shl     eax, 1
CODE:004039CE		      mov     edx, 0B3072178h
CODE:004039D3		      imul    edx
CODE:004039D5		      mov     [esi+120], edx
CODE:004039D8		      mov     eax, [esi+8]    ;	@@BF 2,29,+,COS0_2,1
CODE:004039DB		      mov     edx, [esi+116]
CODE:004039DE		      add     [esi+8], edx
CODE:004039E1		      sub     eax, edx
CODE:004039E3		      shl     eax, 1
CODE:004039E5		      mov     edx, 41FA2D6Eh
CODE:004039EA		      imul    edx
CODE:004039EC		      mov     [esi+116], edx
CODE:004039EF		      mov     eax, [esi+52]   ;	@@BF 13,18,+,COS0_13,3
CODE:004039F2		      mov     edx, [esi+72]
CODE:004039F5		      add     [esi+52],	edx
CODE:004039F8		      sub     eax, edx
CODE:004039FA		      shl     eax, 3
CODE:004039FD		      mov     edx, 41D95790h
CODE:00403A02		      imul    edx
CODE:00403A04		      mov     [esi+72],	edx
CODE:00403A07		      mov     eax, [esi+8]    ;	@@BF 2,13,+,COS1_2,1
CODE:00403A0A		      mov     edx, [esi+52]
CODE:00403A0D		      add     [esi+8], edx
CODE:00403A10		      sub     eax, edx
CODE:00403A12		      shl     eax, 1
CODE:00403A14		      mov     edx, 48919F45h
CODE:00403A19		      imul    edx
CODE:00403A1B		      mov     [esi+52],	edx
CODE:00403A1E		      mov     eax, [esi+72]   ;	@@BF 18,29,-,COS1_2,1
CODE:00403A21		      mov     edx, [esi+116]
CODE:00403A24		      add     [esi+72],	edx
CODE:00403A27		      sub     eax, edx
CODE:00403A29		      shl     eax, 1
CODE:00403A2B		      mov     edx, 0B76E60BBh
CODE:00403A30		      imul    edx
CODE:00403A32		      mov     [esi+116], edx
CODE:00403A35		      mov     eax, [esi+20]   ;	@@BF 5,26,+,COS0_5,1
CODE:00403A38		      mov     edx, [esi+104]
CODE:00403A3B		      add     [esi+20],	edx
CODE:00403A3E		      sub     eax, edx
CODE:00403A40		      shl     eax, 1
CODE:00403A42		      mov     edx, 4A9D9CF1h
CODE:00403A47		      imul    edx
CODE:00403A49		      mov     [esi+104], edx
CODE:00403A4C		      mov     eax, [esi+40]   ;	@@BF 10,21,+,COS0_10,1
CODE:00403A4F		      mov     edx, [esi+84]
CODE:00403A52		      add     [esi+40],	edx
CODE:00403A55		      sub     eax, edx
CODE:00403A57		      shl     eax, 1
CODE:00403A59		      mov     edx, 7C7D1DB4h
CODE:00403A5E		      imul    edx
CODE:00403A60		      mov     [esi+84],	edx
CODE:00403A63		      mov     eax, [esi+20]   ;	@@BF 5,10,+,COS1_5,2
CODE:00403A66		      mov     edx, [esi+40]
CODE:00403A69		      add     [esi+20],	edx
CODE:00403A6C		      sub     eax, edx
CODE:00403A6E		      shl     eax, 2
CODE:00403A71		      mov     edx, 43E224AAh
CODE:00403A76		      imul    edx
CODE:00403A78		      mov     [esi+40],	edx
CODE:00403A7B		      mov     eax, [esi+84]   ;	@@BF 21,26,-,COS1_5,2
CODE:00403A7E		      mov     edx, [esi+104]
CODE:00403A81		      add     [esi+84],	edx
CODE:00403A84		      sub     eax, edx
CODE:00403A86		      shl     eax, 2
CODE:00403A89		      mov     edx, 0BC1DDB56h
CODE:00403A8E		      imul    edx
CODE:00403A90		      mov     [esi+104], edx
CODE:00403A93		      mov     eax, [esi+8]    ;	@@BF 2,5,+,COS2_2,1
CODE:00403A96		      mov     edx, [esi+20]
CODE:00403A99		      add     [esi+8], edx
CODE:00403A9C		      sub     eax, edx
CODE:00403A9E		      shl     eax, 1
CODE:00403AA0		      mov     edx, 73326BBFh  ;	+COS2_2
CODE:00403AA5		      imul    edx
CODE:00403AA7		      mov     [esi+20],	edx
CODE:00403AAA		      mov     eax, [esi+40]   ;	@@BF 10,13,-,COS2_2,1
CODE:00403AAD		      mov     edx, [esi+52]
CODE:00403AB0		      add     [esi+40],	edx
CODE:00403AB3		      sub     eax, edx
CODE:00403AB5		      shl     eax, 1
CODE:00403AB7		      mov     edx, 8CCD9441h  ;	-COS2_2
CODE:00403ABC		      imul    edx
CODE:00403ABE		      mov     [esi+52],	edx
CODE:00403AC1		      mov     eax, [esi+72]   ;	@@BF 18,21,+,COS2_2,1
CODE:00403AC4		      mov     edx, [esi+84]
CODE:00403AC7		      add     [esi+72],	edx
CODE:00403ACA		      sub     eax, edx
CODE:00403ACC		      shl     eax, 1
CODE:00403ACE		      mov     edx, 73326BBFh
CODE:00403AD3		      imul    edx
CODE:00403AD5		      mov     [esi+84],	edx
CODE:00403AD8		      mov     eax, [esi+104]  ;	@@BF 26,29,-,COS2_2,1
CODE:00403ADB		      mov     edx, [esi+116]
CODE:00403ADE		      add     [esi+104], edx
CODE:00403AE1		      sub     eax, edx
CODE:00403AE3		      shl     eax, 1
CODE:00403AE5		      mov     edx, 8CCD9441h
CODE:00403AEA		      imul    edx
CODE:00403AEC		      mov     [esi+116], edx
CODE:00403AEF		      mov     eax, [esi+4]    ;	@@BF 1,2,+,COS3_1,2
CODE:00403AF2		      mov     edx, [esi+8]
CODE:00403AF5		      add     [esi+4], edx
CODE:00403AF8		      sub     eax, edx
CODE:00403AFA		      shl     eax, 2
CODE:00403AFD		      mov     edx, 539EBA46h
CODE:00403B02		      imul    edx
CODE:00403B04		      mov     [esi+8], edx
CODE:00403B07		      mov     eax, [esi+20]   ;	@@BF 5,6,-,COS3_1,2
CODE:00403B0A		      mov     edx, [esi+24]
CODE:00403B0D		      add     [esi+20],	edx
CODE:00403B10		      sub     eax, edx
CODE:00403B12		      shl     eax, 2
CODE:00403B15		      mov     edx, 0AC6145BAh
CODE:00403B1A		      imul    edx
CODE:00403B1C		      mov     [esi+24],	edx
CODE:00403B1F		      mov     eax, [esi+36]   ;	IF rate_shift LT 2
CODE:00403B1F					      ;	@@BF 9,10,+,COS3_1,2
CODE:00403B22		      mov     edx, [esi+40]
CODE:00403B25		      add     [esi+36],	edx
CODE:00403B28		      sub     eax, edx
CODE:00403B2A		      shl     eax, 2
CODE:00403B2D		      mov     edx, 539EBA46h
CODE:00403B32		      imul    edx
CODE:00403B34		      mov     [esi+40],	edx
CODE:00403B37		      mov     eax, [esi+52]   ;	@@BF 13,14,-,COS3_1,2
CODE:00403B3A		      mov     edx, [esi+56]
CODE:00403B3D		      add     [esi+52],	edx
CODE:00403B40		      sub     eax, edx
CODE:00403B42		      shl     eax, 2
CODE:00403B45		      mov     edx, 0AC6145BAh
CODE:00403B4A		      imul    edx
CODE:00403B4C		      mov     [esi+56],	edx   ;	ENDIF
CODE:00403B4F		      mov     eax, [esi+68]   ;	@@BF 17,18,+,COS3_1,2
CODE:00403B52		      mov     edx, [esi+72]
CODE:00403B55		      add     [esi+68],	edx
CODE:00403B58		      sub     eax, edx
CODE:00403B5A		      shl     eax, 2
CODE:00403B5D		      mov     edx, 539EBA46h
CODE:00403B62		      imul    edx
CODE:00403B64		      mov     [esi+72],	edx
CODE:00403B67		      mov     eax, [esi+84]   ;	@@BF 21,22,-,COS3_1,2
CODE:00403B6A		      mov     edx, [esi+88]
CODE:00403B6D		      add     [esi+84],	edx
CODE:00403B70		      sub     eax, edx
CODE:00403B72		      shl     eax, 2
CODE:00403B75		      mov     edx, 0AC6145BAh
CODE:00403B7A		      imul    edx
CODE:00403B7C		      mov     [esi+88],	edx
CODE:00403B7F		      mov     eax, [esi+100]  ;	@@BF 25,26,+,COS3_1,2
CODE:00403B82		      mov     edx, [esi+104]
CODE:00403B85		      add     [esi+100], edx
CODE:00403B88		      sub     eax, edx
CODE:00403B8A		      shl     eax, 2
CODE:00403B8D		      mov     edx, 539EBA46h
CODE:00403B92		      imul    edx
CODE:00403B94		      mov     [esi+104], edx
CODE:00403B97		      mov     eax, [esi+116]  ;	@@BF 29,30,-,COS3_1,2
CODE:00403B9A		      mov     edx, [esi+120]
CODE:00403B9D		      add     [esi+116], edx
CODE:00403BA0		      sub     eax, edx
CODE:00403BA2		      shl     eax, 2
CODE:00403BA5		      mov     edx, 0AC6145BAh
CODE:00403BAA		      imul    edx
CODE:00403BAC		      mov     [esi+120], edx
CODE:00403BAF		      mov     eax, [esi]      ;	@@BF1 macro a, b, c, d
CODE:00403BAF					      ;	  @@BF	a, b,+,COS4_0, 1
CODE:00403BAF					      ;	  @@BF	c, d,-,COS4_0, 1
CODE:00403BAF					      ;	  @@ADD	c, d
CODE:00403BAF					      ;	 endm
CODE:00403BAF					      ;	@@BF1 0,1,2,3
CODE:00403BB1		      mov     edx, [esi+4]    ;	@@BF 0,1,+,COS4_0,1
CODE:00403BB4		      add     [esi], edx
CODE:00403BB6		      sub     eax, edx
CODE:00403BB8		      shl     eax, 1
CODE:00403BBA		      mov     edx, 5A82799Ah  ;	+COS4_0
CODE:00403BBF		      imul    edx
CODE:00403BC1		      mov     [esi+4], edx
CODE:00403BC4		      mov     eax, [esi+8]    ;	@@BF 2,3,-,COS4_0,1
CODE:00403BC7		      mov     edx, [esi+12]
CODE:00403BCA		      add     [esi+8], edx
CODE:00403BCD		      sub     eax, edx
CODE:00403BCF		      shl     eax, 1
CODE:00403BD1		      mov     edx, 0A57D8666h ;	-COS4_0
CODE:00403BD6		      imul    edx
CODE:00403BD8		      mov     [esi+12],	edx
CODE:00403BDB		      mov     eax, [esi+12]   ;	@@ADD 2,3
CODE:00403BDE		      add     [esi+8], eax
CODE:00403BE1		      mov     eax, [esi+16]   ;	@@BF2 macro a, b, c, d
CODE:00403BE1					      ;	  @@BF	a, b,+,COS4_0, 1
CODE:00403BE1					      ;	  @@BF	c, d,-,COS4_0, 1
CODE:00403BE1					      ;	  @@ADD	c, d
CODE:00403BE1					      ;	  @@ADD	a, c
CODE:00403BE1					      ;	  @@ADD	c, b
CODE:00403BE1					      ;	  @@ADD	b, d
CODE:00403BE1					      ;	 endm
CODE:00403BE1					      ;	@@BF2 4,5,6,7
CODE:00403BE4		      mov     edx, [esi+20]   ;	@@BF 4,5,+,COS4_0,1
CODE:00403BE7		      add     [esi+16],	edx
CODE:00403BEA		      sub     eax, edx
CODE:00403BEC		      shl     eax, 1
CODE:00403BEE		      mov     edx, 5A82799Ah
CODE:00403BF3		      imul    edx
CODE:00403BF5		      mov     [esi+20],	edx
CODE:00403BF8		      mov     eax, [esi+24]   ;	@@BF 6,7,-,COS4_0,1
CODE:00403BFB		      mov     edx, [esi+28]
CODE:00403BFE		      add     [esi+24],	edx
CODE:00403C01		      sub     eax, edx
CODE:00403C03		      shl     eax, 1
CODE:00403C05		      mov     edx, 0A57D8666h
CODE:00403C0A		      imul    edx
CODE:00403C0C		      mov     [esi+28],	edx
CODE:00403C0F		      mov     eax, [esi+28]   ;	@@ADD macro dst,src
CODE:00403C0F					      ;	  IF (rate_shift EQ 0) or (dst LT 16)
CODE:00403C0F					      ;	   ;tab[a] += tab[b]
CODE:00403C0F					      ;	   mov	eax,dword ptr [esi+src*4]
CODE:00403C0F					      ;	   add	dword ptr [esi+dst*4],eax
CODE:00403C0F					      ;	  ENDIF
CODE:00403C0F					      ;	 endm
CODE:00403C0F					      ;	@@ADD 6,7
CODE:00403C12		      add     [esi+24],	eax
CODE:00403C15		      mov     eax, [esi+24]   ;	@@ADD 4,6
CODE:00403C18		      add     [esi+16],	eax
CODE:00403C1B		      mov     eax, [esi+20]   ;	@@ADD 6,5
CODE:00403C1E		      add     [esi+24],	eax
CODE:00403C21		      mov     eax, [esi+28]   ;	@@ADD 5,7
CODE:00403C24		      add     [esi+20],	eax
CODE:00403C27		      mov     eax, [esi+32]   ;	IF rate_shift LT 2
CODE:00403C27					      ;	@@BF1 8,9,10,11
CODE:00403C2A		      mov     edx, [esi+36]   ;	@@BF 8,9,+,COS4_0,1
CODE:00403C2D		      add     [esi+32],	edx
CODE:00403C30		      sub     eax, edx
CODE:00403C32		      shl     eax, 1
CODE:00403C34		      mov     edx, 5A82799Ah
CODE:00403C39		      imul    edx
CODE:00403C3B		      mov     [esi+36],	edx
CODE:00403C3E		      mov     eax, [esi+40]   ;	@@BF 10,11,-,COS4_0,1
CODE:00403C41		      mov     edx, [esi+44]
CODE:00403C44		      add     [esi+40],	edx
CODE:00403C47		      sub     eax, edx
CODE:00403C49		      shl     eax, 1
CODE:00403C4B		      mov     edx, 0A57D8666h
CODE:00403C50		      imul    edx
CODE:00403C52		      mov     [esi+44],	edx
CODE:00403C55		      mov     eax, [esi+44]   ;	@@ADD 10,11
CODE:00403C58		      add     [esi+40],	eax
CODE:00403C5B		      mov     eax, [esi+48]   ;	@@BF2 12,13,14,15
CODE:00403C5E		      mov     edx, [esi+52]   ;	@@BF 12,13,+,COS4_0,1
CODE:00403C61		      add     [esi+48],	edx
CODE:00403C64		      sub     eax, edx
CODE:00403C66		      shl     eax, 1
CODE:00403C68		      mov     edx, 5A82799Ah
CODE:00403C6D		      imul    edx
CODE:00403C6F		      mov     [esi+52],	edx
CODE:00403C72		      mov     eax, [esi+56]   ;	@@BF 14,15,-,COS4_0,1
CODE:00403C75		      mov     edx, [esi+60]
CODE:00403C78		      add     [esi+56],	edx
CODE:00403C7B		      sub     eax, edx
CODE:00403C7D		      shl     eax, 1
CODE:00403C7F		      mov     edx, 0A57D8666h
CODE:00403C84		      imul    edx
CODE:00403C86		      mov     [esi+60],	edx
CODE:00403C89		      mov     eax, [esi+60]   ;	@@ADD 14,15
CODE:00403C8C		      add     [esi+56],	eax
CODE:00403C8F		      mov     eax, [esi+56]   ;	@@ADD 12,14
CODE:00403C92		      add     [esi+48],	eax
CODE:00403C95		      mov     eax, [esi+52]   ;	@@ADD 14,13
CODE:00403C98		      add     [esi+56],	eax
CODE:00403C9B		      mov     eax, [esi+60]   ;	@@ADD 13,15
CODE:00403C9E		      add     [esi+52],	eax   ;	ENDIF
CODE:00403CA1		      mov     eax, [esi+64]   ;	@@BF1 16,17,18,19
CODE:00403CA4		      mov     edx, [esi+68]
CODE:00403CA7		      add     [esi+64],	edx
CODE:00403CAA		      sub     eax, edx
CODE:00403CAC		      shl     eax, 1
CODE:00403CAE		      mov     edx, 5A82799Ah  ;	+COS4_0
CODE:00403CB3		      imul    edx
CODE:00403CB5		      mov     [esi+68],	edx
CODE:00403CB8		      mov     eax, [esi+72]
CODE:00403CBB		      mov     edx, [esi+76]
CODE:00403CBE		      add     [esi+72],	edx
CODE:00403CC1		      sub     eax, edx
CODE:00403CC3		      shl     eax, 1
CODE:00403CC5		      mov     edx, 0A57D8666h ;	-COS4_0
CODE:00403CCA		      imul    edx
CODE:00403CCC		      mov     [esi+76],	edx
CODE:00403CCF		      mov     eax, [esi+76]   ;	@@ADD 18,19
CODE:00403CD2		      add     [esi+72],	eax
CODE:00403CD5		      mov     eax, [esi+80]   ;	@@BF2 20,21,22,23
CODE:00403CD8		      mov     edx, [esi+84]
CODE:00403CDB		      add     [esi+80],	edx
CODE:00403CDE		      sub     eax, edx
CODE:00403CE0		      shl     eax, 1
CODE:00403CE2		      mov     edx, 5A82799Ah
CODE:00403CE7		      imul    edx
CODE:00403CE9		      mov     [esi+84],	edx
CODE:00403CEC		      mov     eax, [esi+88]
CODE:00403CEF		      mov     edx, [esi+92]
CODE:00403CF2		      add     [esi+88],	edx
CODE:00403CF5		      sub     eax, edx
CODE:00403CF7		      shl     eax, 1
CODE:00403CF9		      mov     edx, 0A57D8666h
CODE:00403CFE		      imul    edx
CODE:00403D00		      mov     [esi+92],	edx
CODE:00403D03		      mov     eax, [esi+92]   ;	@@ADD 22,23
CODE:00403D06		      add     [esi+88],	eax
CODE:00403D09		      mov     eax, [esi+88]   ;	@@ADD 20,22
CODE:00403D0C		      add     [esi+80],	eax
CODE:00403D0F		      mov     eax, [esi+84]
CODE:00403D12		      add     [esi+88],	eax
CODE:00403D15		      mov     eax, [esi+92]
CODE:00403D18		      add     [esi+84],	eax
CODE:00403D1B		      mov     eax, [esi+96]   ;	@@BF1 24,25,26,27
CODE:00403D1E		      mov     edx, [esi+100]
CODE:00403D21		      add     [esi+96],	edx
CODE:00403D24		      sub     eax, edx
CODE:00403D26		      shl     eax, 1
CODE:00403D28		      mov     edx, 5A82799Ah
CODE:00403D2D		      imul    edx
CODE:00403D2F		      mov     [esi+100], edx
CODE:00403D32		      mov     eax, [esi+104]
CODE:00403D35		      mov     edx, [esi+108]
CODE:00403D38		      add     [esi+104], edx
CODE:00403D3B		      sub     eax, edx
CODE:00403D3D		      shl     eax, 1
CODE:00403D3F		      mov     edx, 0A57D8666h
CODE:00403D44		      imul    edx
CODE:00403D46		      mov     [esi+108], edx
CODE:00403D49		      mov     eax, [esi+108]
CODE:00403D4C		      add     [esi+104], eax
CODE:00403D4F		      mov     eax, [esi+112]  ;	@@BF2 28,29,30,31
CODE:00403D52		      mov     edx, [esi+116]
CODE:00403D55		      add     [esi+112], edx
CODE:00403D58		      sub     eax, edx
CODE:00403D5A		      shl     eax, 1
CODE:00403D5C		      mov     edx, 5A82799Ah
CODE:00403D61		      imul    edx
CODE:00403D63		      mov     [esi+116], edx
CODE:00403D66		      mov     eax, [esi+120]
CODE:00403D69		      mov     edx, [esi+124]
CODE:00403D6C		      add     [esi+120], edx
CODE:00403D6F		      sub     eax, edx
CODE:00403D71		      shl     eax, 1
CODE:00403D73		      mov     edx, 0A57D8666h
CODE:00403D78		      imul    edx
CODE:00403D7A		      mov     [esi+124], edx
CODE:00403D7D		      mov     eax, [esi+124]
CODE:00403D80		      add     [esi+120], eax
CODE:00403D83		      mov     eax, [esi+120]
CODE:00403D86		      add     [esi+112], eax
CODE:00403D89		      mov     eax, [esi+116]
CODE:00403D8C		      add     [esi+120], eax
CODE:00403D8F		      mov     eax, [esi+124]
CODE:00403D92		      add     [esi+116], eax
CODE:00403D95		      mov     eax, [esi]      ;	@@OUT macro dst,src1,src2
CODE:00403D95					      ;	IF ((dst AND ((1 SHL rate_shift)-1)) EQ	0)
CODE:00403D95					      ;	   mov eax,dword ptr [esi+src1*4]
CODE:00403D95					      ;	   IFDIFI <src2>,<->
CODE:00403D95					      ;	     add eax,dword ptr [esi+src2*4]
CODE:00403D95					      ;	   ENDIF
CODE:00403D95					      ;	   IF SYNTH32
CODE:00403D95					      ;	      mov dword	ptr [edi+dst*4],eax
CODE:00403D95					      ;	      IF (LONG_WINDOW EQ 0)
CODE:00403D95					      ;		 mov dword ptr [edi+dst*4+512*4],eax
CODE:00403D95					      ;	      ENDIF
CODE:00403D95					      ;	   ELSE
CODE:00403D95					      ;	       ......
CODE:00403D95					      ;	   ENDIF
CODE:00403D95					      ;	@@OUT 0,0,-
CODE:00403D97		      mov     [edi], eax      ;	mov dword ptr [edi+dst*4],eax
CODE:00403D99		      mov     eax, [esi+4]    ;	@@OUT 16,1, -
CODE:00403D99					      ;	mov eax,dword ptr [esi+src1*4]
CODE:00403D9C		      mov     [edi+64],	eax   ;	mov dword ptr [edi+dst*4],eax
CODE:00403D9F		      mov     eax, [esi+8]    ;	@@OUT 8,2,-
CODE:00403DA2		      mov     [edi+32],	eax
CODE:00403DA5		      mov     eax, [esi+12]   ;	@@OUT 24,3,-
CODE:00403DA8		      mov     [edi+96],	eax
CODE:00403DAB		      mov     eax, [esi+16]   ;	@@OUT 4,4,-
CODE:00403DAE		      mov     [edi+16],	eax
CODE:00403DB1		      mov     eax, [esi+20]   ;	@@OUT 20,5,-
CODE:00403DB4		      mov     [edi+80],	eax
CODE:00403DB7		      mov     eax, [esi+24]   ;	@@OUT 12,6,-
CODE:00403DBA		      mov     [edi+48],	eax
CODE:00403DBD		      mov     eax, [esi+28]   ;	@@OUT 28,7,-
CODE:00403DC0		      mov     [edi+112], eax
CODE:00403DC3		      mov     eax, [esi+32]   ;	@@OUT 2,8,12
CODE:00403DC6		      add     eax, [esi+48]   ;	add eax,dword ptr [esi+src2*4]
CODE:00403DC9		      mov     [edi+8], eax
CODE:00403DCC		      mov     eax, [esi+36]   ;	@@OUT 18,9,13
CODE:00403DCF		      add     eax, [esi+52]   ;	add eax,dword ptr [esi+src2*4]
CODE:00403DD2		      mov     [edi+72],	eax
CODE:00403DD5		      mov     eax, [esi+40]   ;	@@OUT 10,10,14
CODE:00403DD8		      add     eax, [esi+56]
CODE:00403DDB		      mov     [edi+40],	eax
CODE:00403DDE		      mov     eax, [esi+44]   ;	@@OUT 26,11,15
CODE:00403DE1		      add     eax, [esi+60]
CODE:00403DE4		      mov     [edi+104], eax
CODE:00403DE7		      mov     eax, [esi+48]   ;	@@OUT 6,12,10
CODE:00403DEA		      add     eax, [esi+40]
CODE:00403DED		      mov     [edi+24],	eax
CODE:00403DF0		      mov     eax, [esi+52]   ;	@@OUT 22,13,11
CODE:00403DF3		      add     eax, [esi+44]
CODE:00403DF6		      mov     [edi+88],	eax
CODE:00403DF9		      mov     eax, [esi+56]   ;	@@OUT 14,14,9
CODE:00403DFC		      add     eax, [esi+36]
CODE:00403DFF		      mov     [edi+56],	eax
CODE:00403E02		      mov     eax, [esi+60]   ;	@@OUT 30,15,-
CODE:00403E05		      mov     [edi+120], eax
CODE:00403E08		      mov     eax, [esi+112]  ;	@@ADD 24,28
CODE:00403E0B		      add     [esi+96],	eax
CODE:00403E0E		      mov     eax, [esi+104]  ;	@@ADD 28,26
CODE:00403E11		      add     [esi+112], eax
CODE:00403E14		      mov     eax, [esi+120]  ;	@@ADD 26,30
CODE:00403E17		      add     [esi+104], eax
CODE:00403E1A		      mov     eax, [esi+100]  ;	@@ADD 30,25
CODE:00403E1D		      add     [esi+120], eax
CODE:00403E20		      mov     eax, [esi+116]  ;	@@ADD 25,29
CODE:00403E23		      add     [esi+100], eax
CODE:00403E26		      mov     eax, [esi+108]  ;	@@ADD 29,27
CODE:00403E29		      add     [esi+116], eax
CODE:00403E2C		      mov     eax, [esi+124]  ;	@@ADD 27,31
CODE:00403E2F		      add     [esi+108], eax
CODE:00403E32		      mov     eax, [esi+64]   ;	@@OUT 1,16,24
CODE:00403E35		      add     eax, [esi+96]
CODE:00403E38		      mov     [edi+4], eax
CODE:00403E3B		      mov     eax, [esi+68]   ;	@@OUT 17,17,25
CODE:00403E3E		      add     eax, [esi+100]
CODE:00403E41		      mov     [edi+68],	eax
CODE:00403E44		      mov     eax, [esi+72]   ;	@@OUT 9,18,26
CODE:00403E47		      add     eax, [esi+104]
CODE:00403E4A		      mov     [edi+36],	eax
CODE:00403E4D		      mov     eax, [esi+76]   ;	@@OUT 25,19,27
CODE:00403E50		      add     eax, [esi+108]
CODE:00403E53		      mov     [edi+100], eax
CODE:00403E56		      mov     eax, [esi+80]   ;	@@OUT 5,20,28
CODE:00403E59		      add     eax, [esi+112]
CODE:00403E5C		      mov     [edi+20],	eax
CODE:00403E5F		      mov     eax, [esi+84]   ;	@@OUT 21,21,29
CODE:00403E62		      add     eax, [esi+116]
CODE:00403E65		      mov     [edi+84],	eax
CODE:00403E68		      mov     eax, [esi+88]   ;	@@OUT 13,22,30
CODE:00403E6B		      add     eax, [esi+120]
CODE:00403E6E		      mov     [edi+52],	eax
CODE:00403E71		      mov     eax, [esi+92]   ;	@@OUT 29,23,31
CODE:00403E74		      add     eax, [esi+124]
CODE:00403E77		      mov     [edi+116], eax
CODE:00403E7A		      mov     eax, [esi+96]   ;	@@OUT 3,24,20
CODE:00403E7D		      add     eax, [esi+80]
CODE:00403E80		      mov     [edi+12],	eax
CODE:00403E83		      mov     eax, [esi+100]  ;	@@OUT 19,25,21
CODE:00403E86		      add     eax, [esi+84]
CODE:00403E89		      mov     [edi+76],	eax
CODE:00403E8C		      mov     eax, [esi+104]  ;	@@OUT 11,26,22
CODE:00403E8F		      add     eax, [esi+88]
CODE:00403E92		      mov     [edi+44],	eax
CODE:00403E95		      mov     eax, [esi+108]  ;	@@OUT 27,27,23
CODE:00403E98		      add     eax, [esi+92]
CODE:00403E9B		      mov     [edi+108], eax
CODE:00403E9E		      mov     eax, [esi+112]  ;	@@OUT 7,28,18
CODE:00403EA1		      add     eax, [esi+72]
CODE:00403EA4		      mov     [edi+28],	eax
CODE:00403EA7		      mov     eax, [esi+116]  ;	@@OUT 23,29,19
CODE:00403EAA		      add     eax, [esi+76]
CODE:00403EAD		      mov     [edi+92],	eax
CODE:00403EB0		      mov     eax, [esi+120]  ;	@@OUT 15,30,17
CODE:00403EB3		      add     eax, [esi+68]
CODE:00403EB6		      mov     [edi+60],	eax
CODE:00403EB9		      mov     eax, [esi+124]  ;	@@OUT 31,31,-
CODE:00403EBC		      mov     [edi+124], eax
CODE:00403EBF		      retn
CODE:00403EBF endp	      mp3_dct32_shift_0
CODE:00403EBF
CODE:00403EC0
CODE:00403EC0 ;	===============	S U B R	O U T I	N E =======================================
CODE:00403EC0
CODE:00403EC0
CODE:00403EC0 proc	      mp3_dct32_shift_1	near  ;	...
CODE:00403EC0		      mov     eax, [esi+124]  ;	mp3_dct32_macro	macro rate_shift ; rate_shift =	1
CODE:00403EC3		      add     [esi], eax      ;	@@BF macro a,b,sign,cos,shift
CODE:00403EC3					      ;	@@need_a equ (rate_shift EQ 0) or (a LT	16) ; a	= 0
CODE:00403EC3					      ;	@@need_b equ (rate_shift EQ 0) or (b LT	16) ; b	= 31
CODE:00403EC3					      ;	IF @@need_a AND	@@need_b ; rate_shift =	0
CODE:00403EC3					      ;	   mov eax,dword ptr [esi+a*4]
CODE:00403EC3					      ;	   mov edx,dword ptr [esi+b*4]
CODE:00403EC3					      ;	   add dword ptr [esi+a*4],edx
CODE:00403EC3					      ;	ELSEIF @@need_a
CODE:00403EC3					      ;	   mov eax,dword ptr [esi+b*4]
CODE:00403EC3					      ;	   add dword ptr [esi+a*4],eax
CODE:00403EC3					      ;
CODE:00403EC3					      ;	@@BF 0,31,+,COS0_0,1
CODE:00403EC5		      mov     eax, [esi+64]   ;	@@BF 15,16,+,COS0_15,5
CODE:00403EC8		      add     [esi+60],	eax
CODE:00403ECB		      mov     eax, [esi]      ;	@@BF 0,15,+,COS1_0,1
CODE:00403ECD		      mov     edx, [esi+60]
CODE:00403ED0		      add     [esi], edx
CODE:00403ED2		      sub     eax, edx
CODE:00403ED4		      shl     eax, 1
CODE:00403ED6		      mov     edx, 404F4672h  ;	COS1_0
CODE:00403EDB		      imul    edx
CODE:00403EDD		      mov     [esi+60],	edx
CODE:00403EE0		      mov     eax, [esi+96]   ;	skip @@BF 16,31,-,COS1_0,1
CODE:00403EE0					      ;	@@BF 7,24,+,COS0_7,1
CODE:00403EE3		      add     [esi+28],	eax
CODE:00403EE6		      mov     eax, [esi+92]   ;	@@BF 8,23,+,COS0_8,1
CODE:00403EE9		      add     [esi+32],	eax
CODE:00403EEC		      mov     eax, [esi+28]   ;	@@BF 7,8,+,COS1_7,4
CODE:00403EEF		      mov     edx, [esi+32]
CODE:00403EF2		      add     [esi+28],	edx
CODE:00403EF5		      sub     eax, edx
CODE:00403EF7		      shl     eax, 4
CODE:00403EFA		      mov     edx, 519E4E04h  ;	COS1_7
CODE:00403EFF		      imul    edx
CODE:00403F01		      mov     [esi+32],	edx
CODE:00403F04		      mov     eax, [esi]      ;	skip @@BF 23,24,-,COS1_7,4
CODE:00403F04					      ;	@@BF 0,7,+,COS2_0,1
CODE:00403F06		      mov     edx, [esi+28]
CODE:00403F09		      add     [esi], edx
CODE:00403F0B		      sub     eax, edx
CODE:00403F0D		      shl     eax, 1
CODE:00403F0F		      mov     edx, 4140FB46h  ;	COS2_0
CODE:00403F14		      imul    edx
CODE:00403F16		      mov     [esi+28],	edx
CODE:00403F19		      mov     eax, [esi+32]   ;	@@BF 8,15,-,COS2_0,1
CODE:00403F1C		      mov     edx, [esi+60]
CODE:00403F1F		      add     [esi+32],	edx
CODE:00403F22		      sub     eax, edx
CODE:00403F24		      shl     eax, 1
CODE:00403F26		      mov     edx, 0BEBF04BAh ;	-COS2_0
CODE:00403F2B		      imul    edx
CODE:00403F2D		      mov     [esi+60],	edx
CODE:00403F30		      mov     eax, [esi+112]  ;	skip @@BF 16,23,+,COS2_0,1
CODE:00403F30					      ;	     @@BF 24,31,-,COS2_0,1
CODE:00403F30					      ;	@@BF 3,28,+,COS0_3,1
CODE:00403F33		      add     [esi+12],	eax
CODE:00403F36		      mov     eax, [esi+76]   ;	@@BF 12,19,+,COS0_12,2
CODE:00403F39		      add     [esi+48],	eax
CODE:00403F3C		      mov     eax, [esi+12]   ;	@@BF 3,12,+,COS1_3,1
CODE:00403F3F		      mov     edx, [esi+48]
CODE:00403F42		      add     [esi+12],	edx
CODE:00403F45		      sub     eax, edx
CODE:00403F47		      shl     eax, 1
CODE:00403F49		      mov     edx, 52CB0E63h
CODE:00403F4E		      imul    edx
CODE:00403F50		      mov     [esi+48],	edx
CODE:00403F53		      mov     eax, [esi+108]  ;	@@BF 4,27,+,COS0_4,1
CODE:00403F56		      add     [esi+16],	eax
CODE:00403F59		      mov     eax, [esi+80]   ;	@@BF 11,20,+,COS0_11,2
CODE:00403F5C		      add     [esi+44],	eax
CODE:00403F5F		      mov     eax, [esi+16]   ;	@@BF 4,11,+,COS1_4,1
CODE:00403F62		      mov     edx, [esi+44]
CODE:00403F65		      add     [esi+16],	edx
CODE:00403F68		      sub     eax, edx
CODE:00403F6A		      shl     eax, 1
CODE:00403F6C		      mov     edx, 64E2402Eh  ;	COS1_4
CODE:00403F71		      imul    edx
CODE:00403F73		      mov     [esi+44],	edx
CODE:00403F76		      mov     eax, [esi+12]   ;	@@BF 3,4,+,COS2_3,3
CODE:00403F79		      mov     edx, [esi+16]
CODE:00403F7C		      add     [esi+12],	edx
CODE:00403F7F		      sub     eax, edx
CODE:00403F81		      shl     eax, 3
CODE:00403F84		      mov     edx, 52036742h
CODE:00403F89		      imul    edx
CODE:00403F8B		      mov     [esi+16],	edx
CODE:00403F8E		      mov     eax, [esi+44]   ;	@@BF 11,12,-,COS2_3,3
CODE:00403F91		      mov     edx, [esi+48]
CODE:00403F94		      add     [esi+44],	edx
CODE:00403F97		      sub     eax, edx
CODE:00403F99		      shl     eax, 3
CODE:00403F9C		      mov     edx, 0ADFC98BEh ;	-COS2_3
CODE:00403FA1		      imul    edx
CODE:00403FA3		      mov     [esi+48],	edx
CODE:00403FA6		      mov     eax, [esi]      ;	@@BF 0,3,+,COS3_0,1
CODE:00403FA8		      mov     edx, [esi+12]
CODE:00403FAB		      add     [esi], edx
CODE:00403FAD		      sub     eax, edx
CODE:00403FAF		      shl     eax, 1
CODE:00403FB1		      mov     edx, 4545E9F0h
CODE:00403FB6		      imul    edx
CODE:00403FB8		      mov     [esi+12],	edx
CODE:00403FBB		      mov     eax, [esi+16]   ;	@@BF 4,7,-,COS3_0,1
CODE:00403FBE		      mov     edx, [esi+28]
CODE:00403FC1		      add     [esi+16],	edx
CODE:00403FC4		      sub     eax, edx
CODE:00403FC6		      shl     eax, 1
CODE:00403FC8		      mov     edx, 0BABA1610h
CODE:00403FCD		      imul    edx
CODE:00403FCF		      mov     [esi+28],	edx
CODE:00403FD2		      mov     eax, [esi+32]   ;	@@BF 8,11,+,COS3_0,1
CODE:00403FD5		      mov     edx, [esi+44]
CODE:00403FD8		      add     [esi+32],	edx
CODE:00403FDB		      sub     eax, edx
CODE:00403FDD		      shl     eax, 1
CODE:00403FDF		      mov     edx, 4545E9F0h
CODE:00403FE4		      imul    edx
CODE:00403FE6		      mov     [esi+44],	edx
CODE:00403FE9		      mov     eax, [esi+48]   ;	@@BF 12,15,-,COS3_0,1
CODE:00403FEC		      mov     edx, [esi+60]
CODE:00403FEF		      add     [esi+48],	edx
CODE:00403FF2		      sub     eax, edx
CODE:00403FF4		      shl     eax, 1
CODE:00403FF6		      mov     edx, 0BABA1610h ;	-COS3_0
CODE:00403FFB		      imul    edx
CODE:00403FFD		      mov     [esi+60],	edx
CODE:00404000		      mov     eax, [esi+120]  ;	@@BF 1,30,+,COS0_1,1
CODE:00404003		      add     [esi+4], eax
CODE:00404006		      mov     eax, [esi+68]   ;	@@BF 14,17,+,COS0_14,3
CODE:00404009		      add     [esi+56],	eax
CODE:0040400C		      mov     eax, [esi+4]    ;	@@BF 1,14,+,COS1_1,1
CODE:0040400F		      mov     edx, [esi+56]
CODE:00404012		      add     [esi+4], edx
CODE:00404015		      sub     eax, edx
CODE:00404017		      shl     eax, 1
CODE:00404019		      mov     edx, 42E13C10h
CODE:0040401E		      imul    edx
CODE:00404020		      mov     [esi+56],	edx
CODE:00404023		      mov     eax, [esi+100]  ;	@@BF 6,25,+,COS0_6,1
CODE:00404026		      add     [esi+24],	eax
CODE:00404029		      mov     eax, [esi+88]   ;	@@BF 9,22,+,COS0_9,1
CODE:0040402C		      add     [esi+36],	eax
CODE:0040402F		      mov     eax, [esi+24]   ;	@@BF 6,9,+,COS1_6,2
CODE:00404032		      mov     edx, [esi+36]
CODE:00404035		      add     [esi+24],	edx
CODE:00404038		      sub     eax, edx
CODE:0040403A		      shl     eax, 2
CODE:0040403D		      mov     edx, 6E3C92C2h  ;	+COS1_6
CODE:00404042		      imul    edx
CODE:00404044		      mov     [esi+36],	edx
CODE:00404047		      mov     eax, [esi+4]    ;	@@BF 1,6,+,COS2_1,1
CODE:0040404A		      mov     edx, [esi+24]
CODE:0040404D		      add     [esi+4], edx
CODE:00404050		      sub     eax, edx
CODE:00404052		      shl     eax, 1
CODE:00404054		      mov     edx, 4CF8DE88h
CODE:00404059		      imul    edx
CODE:0040405B		      mov     [esi+24],	edx
CODE:0040405E		      mov     eax, [esi+36]   ;	@@BF 9,14,-,COS2_1,1
CODE:00404061		      mov     edx, [esi+56]
CODE:00404064		      add     [esi+36],	edx
CODE:00404067		      sub     eax, edx
CODE:00404069		      shl     eax, 1
CODE:0040406B		      mov     edx, 0B3072178h ;	-COS2_1
CODE:00404070		      imul    edx
CODE:00404072		      mov     [esi+56],	edx
CODE:00404075		      mov     eax, [esi+116]  ;	@@BF 2,29,+,COS0_2,1
CODE:00404078		      add     [esi+8], eax
CODE:0040407B		      mov     eax, [esi+72]   ;	@@BF 13,18,+,COS0_13,3
CODE:0040407E		      add     [esi+52],	eax
CODE:00404081		      mov     eax, [esi+8]    ;	@@BF 2,13,+,COS1_2,1
CODE:00404084		      mov     edx, [esi+52]
CODE:00404087		      add     [esi+8], edx
CODE:0040408A		      sub     eax, edx
CODE:0040408C		      shl     eax, 1
CODE:0040408E		      mov     edx, 48919F45h
CODE:00404093		      imul    edx
CODE:00404095		      mov     [esi+52],	edx
CODE:00404098		      mov     eax, [esi+104]  ;	@@BF 5,26,+,COS0_5,1
CODE:0040409B		      add     [esi+20],	eax
CODE:0040409E		      mov     eax, [esi+84]   ;	@@BF 10,21,+,COS0_10,1
CODE:004040A1		      add     [esi+40],	eax
CODE:004040A4		      mov     eax, [esi+20]   ;	@@BF 5,10,+,COS1_5,2
CODE:004040A7		      mov     edx, [esi+40]
CODE:004040AA		      add     [esi+20],	edx
CODE:004040AD		      sub     eax, edx
CODE:004040AF		      shl     eax, 2
CODE:004040B2		      mov     edx, 43E224AAh
CODE:004040B7		      imul    edx
CODE:004040B9		      mov     [esi+40],	edx
CODE:004040BC		      mov     eax, [esi+8]    ;	@@BF 2,5,+,COS2_2,1
CODE:004040BF		      mov     edx, [esi+20]
CODE:004040C2		      add     [esi+8], edx
CODE:004040C5		      sub     eax, edx
CODE:004040C7		      shl     eax, 1
CODE:004040C9		      mov     edx, 73326BBFh  ;	COS2_2
CODE:004040CE		      imul    edx
CODE:004040D0		      mov     [esi+20],	edx
CODE:004040D3		      mov     eax, [esi+40]   ;	@@BF 10,13,-,COS2_2,1
CODE:004040D6		      mov     edx, [esi+52]
CODE:004040D9		      add     [esi+40],	edx
CODE:004040DC		      sub     eax, edx
CODE:004040DE		      shl     eax, 1
CODE:004040E0		      mov     edx, 8CCD9441h  ;	-COS2_2
CODE:004040E5		      imul    edx
CODE:004040E7		      mov     [esi+52],	edx
CODE:004040EA		      mov     eax, [esi+4]    ;	@@BF 1,2,+,COS3_1,2
CODE:004040ED		      mov     edx, [esi+8]
CODE:004040F0		      add     [esi+4], edx
CODE:004040F3		      sub     eax, edx
CODE:004040F5		      shl     eax, 2
CODE:004040F8		      mov     edx, 539EBA46h
CODE:004040FD		      imul    edx
CODE:004040FF		      mov     [esi+8], edx
CODE:00404102		      mov     eax, [esi+20]   ;	@@BF 5,6,-,COS3_1,2
CODE:00404105		      mov     edx, [esi+24]
CODE:00404108		      add     [esi+20],	edx
CODE:0040410B		      sub     eax, edx
CODE:0040410D		      shl     eax, 2
CODE:00404110		      mov     edx, 0AC6145BAh
CODE:00404115		      imul    edx
CODE:00404117		      mov     [esi+24],	edx
CODE:0040411A		      mov     eax, [esi+36]   ;	IF rate_shift LT 2
CODE:0040411A					      ;	@@BF 9,10,+,COS3_1,2
CODE:0040411D		      mov     edx, [esi+40]
CODE:00404120		      add     [esi+36],	edx
CODE:00404123		      sub     eax, edx
CODE:00404125		      shl     eax, 2
CODE:00404128		      mov     edx, 539EBA46h  ;	+COS3_1
CODE:0040412D		      imul    edx
CODE:0040412F		      mov     [esi+40],	edx
CODE:00404132		      mov     eax, [esi+52]   ;	@@BF 13,14,-,COS3_1,2
CODE:00404135		      mov     edx, [esi+56]
CODE:00404138		      add     [esi+52],	edx
CODE:0040413B		      sub     eax, edx
CODE:0040413D		      shl     eax, 2
CODE:00404140		      mov     edx, 0AC6145BAh ;	-COS3_1
CODE:00404145		      imul    edx
CODE:00404147		      mov     [esi+56],	edx   ;	ENDIF
CODE:0040414A		      mov     eax, [esi]      ;	@@BF1 macro a, b, c, d
CODE:0040414A					      ;	  @@BF	a, b,+,COS4_0, 1
CODE:0040414A					      ;	  @@BF	c, d,-,COS4_0, 1
CODE:0040414A					      ;	  @@ADD	c, d
CODE:0040414A					      ;	 endm
CODE:0040414A					      ;	@@BF1 0,1,2,3
CODE:0040414C		      mov     edx, [esi+4]    ;	@@BF 0,1,+,COS4_0,1
CODE:0040414F		      add     [esi], edx
CODE:00404151		      sub     eax, edx
CODE:00404153		      shl     eax, 1
CODE:00404155		      mov     edx, 5A82799Ah
CODE:0040415A		      imul    edx
CODE:0040415C		      mov     [esi+4], edx
CODE:0040415F		      mov     eax, [esi+8]    ;	@@BF 2,3,+,COS4_0,1
CODE:00404162		      mov     edx, [esi+12]
CODE:00404165		      add     [esi+8], edx
CODE:00404168		      sub     eax, edx
CODE:0040416A		      shl     eax, 1
CODE:0040416C		      mov     edx, 0A57D8666h
CODE:00404171		      imul    edx
CODE:00404173		      mov     [esi+12],	edx
CODE:00404176		      mov     eax, [esi+12]   ;	@@ADD 2,3
CODE:00404179		      add     [esi+8], eax
CODE:0040417C		      mov     eax, [esi+16]   ;	@@BF2 macro a, b, c, d
CODE:0040417C					      ;	  @@BF	a, b,+,COS4_0, 1
CODE:0040417C					      ;	  @@BF	c, d,-,COS4_0, 1
CODE:0040417C					      ;	  @@ADD	c, d
CODE:0040417C					      ;	  @@ADD	a, c
CODE:0040417C					      ;	  @@ADD	c, b
CODE:0040417C					      ;	  @@ADD	b, d
CODE:0040417C					      ;	 endm
CODE:0040417C					      ;	@@BF2 4,5,6,7
CODE:0040417F		      mov     edx, [esi+20]   ;	@@BF 4,5,+,COS4_0,1
CODE:00404182		      add     [esi+16],	edx
CODE:00404185		      sub     eax, edx
CODE:00404187		      shl     eax, 1
CODE:00404189		      mov     edx, 5A82799Ah  ;	+COS4_0
CODE:0040418E		      imul    edx
CODE:00404190		      mov     [esi+20],	edx
CODE:00404193		      mov     eax, [esi+24]   ;	@@BF 6,7,-,COS4_0,1
CODE:00404196		      mov     edx, [esi+28]
CODE:00404199		      add     [esi+24],	edx
CODE:0040419C		      sub     eax, edx
CODE:0040419E		      shl     eax, 1
CODE:004041A0		      mov     edx, 0A57D8666h ;	-COS4_0
CODE:004041A5		      imul    edx
CODE:004041A7		      mov     [esi+28],	edx
CODE:004041AA		      mov     eax, [esi+28]   ;	@@ADD macro dst,src
CODE:004041AA					      ;	  IF (rate_shift EQ 0) or (dst LT 16)
CODE:004041AA					      ;	   ;tab[a] += tab[b]
CODE:004041AA					      ;	   mov	eax,dword ptr [esi+src*4]
CODE:004041AA					      ;	   add	dword ptr [esi+dst*4],eax
CODE:004041AA					      ;	  ENDIF
CODE:004041AA					      ;	 endm
CODE:004041AA					      ;	@@ADD 6,7
CODE:004041AD		      add     [esi+24],	eax
CODE:004041B0		      mov     eax, [esi+24]   ;	@@ADD 4,6
CODE:004041B3		      add     [esi+16],	eax
CODE:004041B6		      mov     eax, [esi+20]   ;	@@ADD 6,5
CODE:004041B9		      add     [esi+24],	eax
CODE:004041BC		      mov     eax, [esi+28]   ;	@@ADD 5,7
CODE:004041BF		      add     [esi+20],	eax
CODE:004041C2		      mov     eax, [esi+32]   ;	IF rate_shift LT 2
CODE:004041C2					      ;	@@BF1 8,9,10,11
CODE:004041C5		      mov     edx, [esi+36]
CODE:004041C8		      add     [esi+32],	edx
CODE:004041CB		      sub     eax, edx
CODE:004041CD		      shl     eax, 1
CODE:004041CF		      mov     edx, 5A82799Ah
CODE:004041D4		      imul    edx
CODE:004041D6		      mov     [esi+36],	edx
CODE:004041D9		      mov     eax, [esi+40]
CODE:004041DC		      mov     edx, [esi+44]
CODE:004041DF		      add     [esi+40],	edx
CODE:004041E2		      sub     eax, edx
CODE:004041E4		      shl     eax, 1
CODE:004041E6		      mov     edx, 0A57D8666h
CODE:004041EB		      imul    edx
CODE:004041ED		      mov     [esi+44],	edx
CODE:004041F0		      mov     eax, [esi+44]
CODE:004041F3		      add     [esi+40],	eax
CODE:004041F6		      mov     eax, [esi+48]   ;	@@BF2 12,13,14,15
CODE:004041F9		      mov     edx, [esi+52]
CODE:004041FC		      add     [esi+48],	edx
CODE:004041FF		      sub     eax, edx
CODE:00404201		      shl     eax, 1
CODE:00404203		      mov     edx, 5A82799Ah
CODE:00404208		      imul    edx
CODE:0040420A		      mov     [esi+52],	edx
CODE:0040420D		      mov     eax, [esi+56]
CODE:00404210		      mov     edx, [esi+60]
CODE:00404213		      add     [esi+56],	edx
CODE:00404216		      sub     eax, edx
CODE:00404218		      shl     eax, 1
CODE:0040421A		      mov     edx, 0A57D8666h
CODE:0040421F		      imul    edx
CODE:00404221		      mov     [esi+60],	edx
CODE:00404224		      mov     eax, [esi+60]
CODE:00404227		      add     [esi+56],	eax
CODE:0040422A		      mov     eax, [esi+56]
CODE:0040422D		      add     [esi+48],	eax
CODE:00404230		      mov     eax, [esi+52]
CODE:00404233		      add     [esi+56],	eax
CODE:00404236		      mov     eax, [esi+60]
CODE:00404239		      add     [esi+52],	eax
CODE:0040423C		      mov     eax, [esi]      ;	@@OUT macro dst,src1,src2
CODE:0040423C					      ;	IF ((dst AND ((1 SHL rate_shift)-1)) EQ	0)
CODE:0040423C					      ;	   mov eax,dword ptr [esi+src1*4]
CODE:0040423C					      ;	   IFDIFI <src2>,<->
CODE:0040423C					      ;	     add eax,dword ptr [esi+src2*4]
CODE:0040423C					      ;	   ENDIF
CODE:0040423C					      ;	   IF SYNTH32
CODE:0040423C					      ;	      mov dword	ptr [edi+dst*4],eax
CODE:0040423C					      ;	      IF (LONG_WINDOW EQ 0)
CODE:0040423C					      ;		 mov dword ptr [edi+dst*4+512*4],eax
CODE:0040423C					      ;	      ENDIF
CODE:0040423C					      ;	   ELSE
CODE:0040423C					      ;	       ......
CODE:0040423C					      ;	   ENDIF
CODE:0040423C					      ;	@@OUT 0,0,-
CODE:0040423E		      mov     [edi], eax
CODE:00404240		      mov     eax, [esi+4]    ;	@@OUT 16,1,-
CODE:00404243		      mov     [edi+64],	eax
CODE:00404246		      mov     eax, [esi+8]    ;	@@OUT 8,2,-
CODE:00404249		      mov     [edi+32],	eax
CODE:0040424C		      mov     eax, [esi+12]   ;	@@OUT 24,3,-
CODE:0040424F		      mov     [edi+96],	eax
CODE:00404252		      mov     eax, [esi+16]   ;	@@OUT 4,4,-
CODE:00404255		      mov     [edi+16],	eax
CODE:00404258		      mov     eax, [esi+20]   ;	@@OUT 20,5,-
CODE:0040425B		      mov     [edi+80],	eax
CODE:0040425E		      mov     eax, [esi+24]   ;	@@OUT 12,6,-
CODE:00404261		      mov     [edi+48],	eax
CODE:00404264		      mov     eax, [esi+28]   ;	@@OUT 28,7,-
CODE:00404267		      mov     [edi+112], eax
CODE:0040426A		      mov     eax, [esi+32]   ;	@@OUT 2,8,12
CODE:0040426D		      add     eax, [esi+48]
CODE:00404270		      mov     [edi+8], eax
CODE:00404273		      mov     eax, [esi+36]   ;	@@OUT 18,9,13
CODE:00404276		      add     eax, [esi+52]
CODE:00404279		      mov     [edi+72],	eax
CODE:0040427C		      mov     eax, [esi+40]   ;	@@OUT 10,10,14
CODE:0040427F		      add     eax, [esi+56]
CODE:00404282		      mov     [edi+40],	eax
CODE:00404285		      mov     eax, [esi+44]   ;	@@OUT 26,11,15
CODE:00404288		      add     eax, [esi+60]
CODE:0040428B		      mov     [edi+104], eax
CODE:0040428E		      mov     eax, [esi+48]   ;	@@OUT 6,12,10
CODE:00404291		      add     eax, [esi+40]
CODE:00404294		      mov     [edi+24],	eax
CODE:00404297		      mov     eax, [esi+52]   ;	@@OUT 22,13,11
CODE:0040429A		      add     eax, [esi+44]
CODE:0040429D		      mov     [edi+88],	eax
CODE:004042A0		      mov     eax, [esi+56]   ;	@@OUT 14,14,9
CODE:004042A3		      add     eax, [esi+36]
CODE:004042A6		      mov     [edi+56],	eax
CODE:004042A9		      mov     eax, [esi+60]   ;	@@OUT 30,15,-
CODE:004042AC		      mov     [edi+120], eax
CODE:004042AF		      retn
CODE:004042AF endp	      mp3_dct32_shift_1
CODE:004042AF
CODE:004042B0
CODE:004042B0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004042B0
CODE:004042B0
CODE:004042B0 proc	      mp3_dct32_shift_2	near  ;	...
CODE:004042B0		      mov     eax, [esi+124]  ;	mp3_dct32_macro	macro rate_shift ; rate_shift =	2
CODE:004042B3		      add     [esi], eax      ;	@@BF macro a,b,sign,cos,shift
CODE:004042B3					      ;	@@need_a equ (rate_shift EQ 0) or (a LT	16) ; a	= 0
CODE:004042B3					      ;	@@need_b equ (rate_shift EQ 0) or (b LT	16) ; b	= 31
CODE:004042B3					      ;	IF @@need_a AND	@@need_b ; rate_shift =	0
CODE:004042B3					      ;	   mov eax,dword ptr [esi+a*4]
CODE:004042B3					      ;	   mov edx,dword ptr [esi+b*4]
CODE:004042B3					      ;	   add dword ptr [esi+a*4],edx
CODE:004042B3					      ;	ELSEIF @@need_a
CODE:004042B3					      ;	   mov eax,dword ptr [esi+b*4]
CODE:004042B3					      ;	   add dword ptr [esi+a*4],eax
CODE:004042B3					      ;
CODE:004042B3					      ;	@@BF 0,31,+,COS0_0,1
CODE:004042B5		      mov     eax, [esi+64]   ;	@@BF 15,16,+,COS0_15,5
CODE:004042B8		      add     [esi+60],	eax
CODE:004042BB		      mov     eax, [esi]      ;	@@BF 0,15,+,COS1_0,1
CODE:004042BD		      mov     edx, [esi+60]
CODE:004042C0		      add     [esi], edx
CODE:004042C2		      sub     eax, edx
CODE:004042C4		      shl     eax, 1
CODE:004042C6		      mov     edx, 404F4672h  ;	COS1_0
CODE:004042CB		      imul    edx
CODE:004042CD		      mov     [esi+60],	edx
CODE:004042D0		      mov     eax, [esi+96]   ;	@@BF 7,24,+,COS0_7,1
CODE:004042D3		      add     [esi+28],	eax
CODE:004042D6		      mov     eax, [esi+92]   ;	@@BF 8,23,+,COS0_8,1
CODE:004042D9		      add     [esi+32],	eax
CODE:004042DC		      mov     eax, [esi+28]   ;	@@BF 7,8,+,COS1_7,4
CODE:004042DF		      mov     edx, [esi+32]
CODE:004042E2		      add     [esi+28],	edx
CODE:004042E5		      sub     eax, edx
CODE:004042E7		      shl     eax, 4
CODE:004042EA		      mov     edx, 519E4E04h  ;	COS1_7
CODE:004042EF		      imul    edx
CODE:004042F1		      mov     [esi+32],	edx
CODE:004042F4		      mov     eax, [esi]      ;	@@BF 0,7,+,COS2_0,1
CODE:004042F6		      mov     edx, [esi+28]
CODE:004042F9		      add     [esi], edx
CODE:004042FB		      sub     eax, edx
CODE:004042FD		      shl     eax, 1
CODE:004042FF		      mov     edx, 4140FB46h  ;	COS2_0
CODE:00404304		      imul    edx
CODE:00404306		      mov     [esi+28],	edx
CODE:00404309		      mov     eax, [esi+32]   ;	@@BF 8,15,-,COS2_0,1
CODE:0040430C		      mov     edx, [esi+60]
CODE:0040430F		      add     [esi+32],	edx
CODE:00404312		      sub     eax, edx
CODE:00404314		      shl     eax, 1
CODE:00404316		      mov     edx, 0BEBF04BAh
CODE:0040431B		      imul    edx
CODE:0040431D		      mov     [esi+60],	edx
CODE:00404320		      mov     eax, [esi+112]  ;	@@BF 3,28,+,COS0_3,1
CODE:00404323		      add     [esi+12],	eax
CODE:00404326		      mov     eax, [esi+76]   ;	@@BF 12,19,+,COS0_12,2
CODE:00404329		      add     [esi+48],	eax
CODE:0040432C		      mov     eax, [esi+12]   ;	@@BF 3,12,+,COS1_3,1
CODE:0040432F		      mov     edx, [esi+48]
CODE:00404332		      add     [esi+12],	edx
CODE:00404335		      sub     eax, edx
CODE:00404337		      shl     eax, 1
CODE:00404339		      mov     edx, 52CB0E63h  ;	COS1_3
CODE:0040433E		      imul    edx
CODE:00404340		      mov     [esi+48],	edx
CODE:00404343		      mov     eax, [esi+108]  ;	@@BF 4,27,+,COS0_4,1
CODE:00404346		      add     [esi+16],	eax
CODE:00404349		      mov     eax, [esi+80]   ;	@@BF 11,20,+,COS0_11,2
CODE:0040434C		      add     [esi+44],	eax
CODE:0040434F		      mov     eax, [esi+16]   ;	@@BF 4,11,+,COS1_4,1
CODE:00404352		      mov     edx, [esi+44]
CODE:00404355		      add     [esi+16],	edx
CODE:00404358		      sub     eax, edx
CODE:0040435A		      shl     eax, 1
CODE:0040435C		      mov     edx, 64E2402Eh
CODE:00404361		      imul    edx
CODE:00404363		      mov     [esi+44],	edx
CODE:00404366		      mov     eax, [esi+12]   ;	@@BF 3,4,+,COS2_3,3
CODE:00404369		      mov     edx, [esi+16]
CODE:0040436C		      add     [esi+12],	edx
CODE:0040436F		      sub     eax, edx
CODE:00404371		      shl     eax, 3
CODE:00404374		      mov     edx, 52036742h
CODE:00404379		      imul    edx
CODE:0040437B		      mov     [esi+16],	edx
CODE:0040437E		      mov     eax, [esi+44]   ;	@@BF 11,12,-,COS2_3,3
CODE:00404381		      mov     edx, [esi+48]
CODE:00404384		      add     [esi+44],	edx
CODE:00404387		      sub     eax, edx
CODE:00404389		      shl     eax, 3
CODE:0040438C		      mov     edx, 0ADFC98BEh ;	-COS2_3
CODE:00404391		      imul    edx
CODE:00404393		      mov     [esi+48],	edx
CODE:00404396		      mov     eax, [esi]      ;	@@BF 0,3,+,COS3_0,1
CODE:00404398		      mov     edx, [esi+12]
CODE:0040439B		      add     [esi], edx
CODE:0040439D		      sub     eax, edx
CODE:0040439F		      shl     eax, 1
CODE:004043A1		      mov     edx, 4545E9F0h
CODE:004043A6		      imul    edx
CODE:004043A8		      mov     [esi+12],	edx
CODE:004043AB		      mov     eax, [esi+16]   ;	@@BF 4,7,-,COS3_0,1
CODE:004043AE		      mov     edx, [esi+28]
CODE:004043B1		      add     [esi+16],	edx
CODE:004043B4		      sub     eax, edx
CODE:004043B6		      shl     eax, 1
CODE:004043B8		      mov     edx, 0BABA1610h
CODE:004043BD		      imul    edx
CODE:004043BF		      mov     [esi+28],	edx
CODE:004043C2		      mov     eax, [esi+32]   ;	@@BF 8,11,+,COS3_0,1
CODE:004043C5		      mov     edx, [esi+44]
CODE:004043C8		      add     [esi+32],	edx
CODE:004043CB		      sub     eax, edx
CODE:004043CD		      shl     eax, 1
CODE:004043CF		      mov     edx, 4545E9F0h
CODE:004043D4		      imul    edx
CODE:004043D6		      mov     [esi+44],	edx
CODE:004043D9		      mov     eax, [esi+48]   ;	@@BF 12,15,-,COS3_0,1
CODE:004043DC		      mov     edx, [esi+60]
CODE:004043DF		      add     [esi+48],	edx
CODE:004043E2		      sub     eax, edx
CODE:004043E4		      shl     eax, 1
CODE:004043E6		      mov     edx, 0BABA1610h
CODE:004043EB		      imul    edx
CODE:004043ED		      mov     [esi+60],	edx
CODE:004043F0		      mov     eax, [esi+120]  ;	@@BF 1,30,+,COS0_1,1
CODE:004043F3		      add     [esi+4], eax
CODE:004043F6		      mov     eax, [esi+68]   ;	@@BF 14,17,+,COS0_14,3
CODE:004043F9		      add     [esi+56],	eax
CODE:004043FC		      mov     eax, [esi+4]    ;	@@BF 1,14,+,COS1_1,1
CODE:004043FF		      mov     edx, [esi+56]
CODE:00404402		      add     [esi+4], edx
CODE:00404405		      sub     eax, edx
CODE:00404407		      shl     eax, 1
CODE:00404409		      mov     edx, 42E13C10h  ;	COS1_1
CODE:0040440E		      imul    edx
CODE:00404410		      mov     [esi+56],	edx
CODE:00404413		      mov     eax, [esi+100]  ;	@@BF 6,25,+,COS0_6,1
CODE:00404416		      add     [esi+24],	eax
CODE:00404419		      mov     eax, [esi+88]   ;	@@BF 9,22,+,COS0_9,1
CODE:0040441C		      add     [esi+36],	eax
CODE:0040441F		      mov     eax, [esi+24]   ;	@@BF 6,9,+,COS1_6,2
CODE:00404422		      mov     edx, [esi+36]
CODE:00404425		      add     [esi+24],	edx
CODE:00404428		      sub     eax, edx
CODE:0040442A		      shl     eax, 2
CODE:0040442D		      mov     edx, 6E3C92C2h
CODE:00404432		      imul    edx
CODE:00404434		      mov     [esi+36],	edx
CODE:00404437		      mov     eax, [esi+4]    ;	@@BF 1,6,+,COS2_1,1
CODE:0040443A		      mov     edx, [esi+24]
CODE:0040443D		      add     [esi+4], edx
CODE:00404440		      sub     eax, edx
CODE:00404442		      shl     eax, 1
CODE:00404444		      mov     edx, 4CF8DE88h  ;	COS2_1
CODE:00404449		      imul    edx
CODE:0040444B		      mov     [esi+24],	edx
CODE:0040444E		      mov     eax, [esi+36]   ;	@@BF 9,14,-,COS2_1,1
CODE:00404451		      mov     edx, [esi+56]
CODE:00404454		      add     [esi+36],	edx
CODE:00404457		      sub     eax, edx
CODE:00404459		      shl     eax, 1
CODE:0040445B		      mov     edx, 0B3072178h ;	-COS2_1
CODE:00404460		      imul    edx
CODE:00404462		      mov     [esi+56],	edx
CODE:00404465		      mov     eax, [esi+116]  ;	@@BF 2,29,+,COS0_2,1
CODE:00404468		      add     [esi+8], eax
CODE:0040446B		      mov     eax, [esi+72]   ;	@@BF 13,18,+,COS0_13,3
CODE:0040446E		      add     [esi+52],	eax
CODE:00404471		      mov     eax, [esi+8]    ;	@@BF 2,13,+,COS1_2,1
CODE:00404474		      mov     edx, [esi+52]
CODE:00404477		      add     [esi+8], edx
CODE:0040447A		      sub     eax, edx
CODE:0040447C		      shl     eax, 1
CODE:0040447E		      mov     edx, 48919F45h
CODE:00404483		      imul    edx
CODE:00404485		      mov     [esi+52],	edx
CODE:00404488		      mov     eax, [esi+104]  ;	@@BF 5,26,+,COS0_5,1
CODE:0040448B		      add     [esi+20],	eax
CODE:0040448E		      mov     eax, [esi+84]   ;	@@BF 10,21,+,COS0_10,1
CODE:00404491		      add     [esi+40],	eax
CODE:00404494		      mov     eax, [esi+20]   ;	@@BF 5,10,+,COS1_5,2
CODE:00404497		      mov     edx, [esi+40]
CODE:0040449A		      add     [esi+20],	edx
CODE:0040449D		      sub     eax, edx
CODE:0040449F		      shl     eax, 2
CODE:004044A2		      mov     edx, 43E224AAh
CODE:004044A7		      imul    edx
CODE:004044A9		      mov     [esi+40],	edx
CODE:004044AC		      mov     eax, [esi+8]    ;	@@BF 2,5,+,COS2_2,1
CODE:004044AF		      mov     edx, [esi+20]
CODE:004044B2		      add     [esi+8], edx
CODE:004044B5		      sub     eax, edx
CODE:004044B7		      shl     eax, 1
CODE:004044B9		      mov     edx, 73326BBFh  ;	COS2_2
CODE:004044BE		      imul    edx
CODE:004044C0		      mov     [esi+20],	edx
CODE:004044C3		      mov     eax, [esi+40]   ;	@@BF 10,13,-,COS2_2,1
CODE:004044C6		      mov     edx, [esi+52]
CODE:004044C9		      add     [esi+40],	edx
CODE:004044CC		      sub     eax, edx
CODE:004044CE		      shl     eax, 1
CODE:004044D0		      mov     edx, 8CCD9441h  ;	-COS2_2
CODE:004044D5		      imul    edx
CODE:004044D7		      mov     [esi+52],	edx
CODE:004044DA		      mov     eax, [esi+4]    ;	@@BF 1,2,+,COS3_1,2
CODE:004044DD		      mov     edx, [esi+8]
CODE:004044E0		      add     [esi+4], edx
CODE:004044E3		      sub     eax, edx
CODE:004044E5		      shl     eax, 2
CODE:004044E8		      mov     edx, 539EBA46h  ;	COS3_1
CODE:004044ED		      imul    edx
CODE:004044EF		      mov     [esi+8], edx
CODE:004044F2		      mov     eax, [esi+20]   ;	@@BF 5,6,-,COS3_1,2
CODE:004044F5		      mov     edx, [esi+24]
CODE:004044F8		      add     [esi+14h], edx
CODE:004044FB		      sub     eax, edx
CODE:004044FD		      shl     eax, 2
CODE:00404500		      mov     edx, 0AC6145BAh ;	-COS3_1
CODE:00404505		      imul    edx
CODE:00404507		      mov     [esi+24],	edx
CODE:0040450A		      mov     eax, [esi]      ;	@@BF1 macro a, b, c, d
CODE:0040450A					      ;	  @@BF	a, b,+,COS4_0, 1
CODE:0040450A					      ;	  @@BF	c, d,-,COS4_0, 1
CODE:0040450A					      ;	  @@ADD	c, d
CODE:0040450A					      ;	 endm
CODE:0040450A					      ;	@@BF1 0,1,2,3
CODE:0040450C		      mov     edx, [esi+4]    ;	@@BF 0,1,+,COS4_0,1
CODE:0040450F		      add     [esi], edx
CODE:00404511		      sub     eax, edx
CODE:00404513		      shl     eax, 1
CODE:00404515		      mov     edx, 5A82799Ah
CODE:0040451A		      imul    edx
CODE:0040451C		      mov     [esi+4], edx
CODE:0040451F		      mov     eax, [esi+8]    ;	@@BF 2,3,-,COS4_0,1
CODE:00404522		      mov     edx, [esi+12]
CODE:00404525		      add     [esi+8], edx
CODE:00404528		      sub     eax, edx
CODE:0040452A		      shl     eax, 1
CODE:0040452C		      mov     edx, 0A57D8666h
CODE:00404531		      imul    edx
CODE:00404533		      mov     [esi+12],	edx
CODE:00404536		      mov     eax, [esi+12]   ;	@@ADD 2,3
CODE:00404539		      add     [esi+8], eax
CODE:0040453C		      mov     eax, [esi+16]   ;	@@BF2 macro a, b, c, d
CODE:0040453C					      ;	  @@BF	a, b,+,COS4_0, 1
CODE:0040453C					      ;	  @@BF	c, d,-,COS4_0, 1
CODE:0040453C					      ;	  @@ADD	c, d
CODE:0040453C					      ;	  @@ADD	a, c
CODE:0040453C					      ;	  @@ADD	c, b
CODE:0040453C					      ;	  @@ADD	b, d
CODE:0040453C					      ;	 endm
CODE:0040453C					      ;	@@BF2 4,5,6,7
CODE:0040453F		      mov     edx, [esi+20]   ;	@@BF 4,5,+,COS4_0,1
CODE:00404542		      add     [esi+16],	edx
CODE:00404545		      sub     eax, edx
CODE:00404547		      shl     eax, 1
CODE:00404549		      mov     edx, 5A82799Ah  ;	COS4_0
CODE:0040454E		      imul    edx
CODE:00404550		      mov     [esi+20],	edx
CODE:00404553		      mov     eax, [esi+24]   ;	@@BF 6,7,-,COS4_0,1
CODE:00404556		      mov     edx, [esi+28]
CODE:00404559		      add     [esi+18h], edx
CODE:0040455C		      sub     eax, edx
CODE:0040455E		      shl     eax, 1
CODE:00404560		      mov     edx, 0A57D8666h ;	-COS4_0
CODE:00404565		      imul    edx
CODE:00404567		      mov     [esi+28],	edx
CODE:0040456A		      mov     eax, [esi+28]   ;	@@ADD 6,7
CODE:0040456D		      add     [esi+24],	eax
CODE:00404570		      mov     eax, [esi+24]   ;	@@ADD 4,6
CODE:00404573		      add     [esi+16],	eax
CODE:00404576		      mov     eax, [esi+20]   ;	@@ADD 6,5
CODE:00404579		      add     [esi+24],	eax
CODE:0040457C		      mov     eax, [esi+28]   ;	@@ADD 5,7
CODE:0040457F		      add     [esi+20],	eax
CODE:00404582		      mov     eax, [esi]      ;	@@OUT macro dst,src1,src2
CODE:00404582					      ;	IF ((dst AND ((1 SHL rate_shift)-1)) EQ	0)
CODE:00404582					      ;	   mov eax,dword ptr [esi+src1*4]
CODE:00404582					      ;	   IFDIFI <src2>,<->
CODE:00404582					      ;	     add eax,dword ptr [esi+src2*4]
CODE:00404582					      ;	   ENDIF
CODE:00404582					      ;	   IF SYNTH32
CODE:00404582					      ;	      mov dword	ptr [edi+dst*4],eax
CODE:00404582					      ;	      IF (LONG_WINDOW EQ 0)
CODE:00404582					      ;		 mov dword ptr [edi+dst*4+512*4],eax
CODE:00404582					      ;	      ENDIF
CODE:00404582					      ;	   ELSE
CODE:00404582					      ;	       ......
CODE:00404582					      ;	   ENDIF
CODE:00404582					      ;	@@OUT 0,0,-
CODE:00404584		      mov     [edi], eax
CODE:00404586		      mov     eax, [esi+4]    ;	@@OUT 16,1,-
CODE:00404589		      mov     [edi+64],	eax
CODE:0040458C		      mov     eax, [esi+8]    ;	@@OUT 8,2,-
CODE:0040458F		      mov     [edi+32],	eax
CODE:00404592		      mov     eax, [esi+12]   ;	@@OUT 24,3,-
CODE:00404595		      mov     [edi+96],	eax
CODE:00404598		      mov     eax, [esi+16]   ;	@@OUT 4,4,-
CODE:0040459B		      mov     [edi+16],	eax
CODE:0040459E		      mov     eax, [esi+20]   ;	@@OUT 20,5,-
CODE:004045A1		      mov     [edi+80],	eax
CODE:004045A4		      mov     eax, [esi+24]   ;	@@OUT 12,6,-
CODE:004045A7		      mov     [edi+48],	eax
CODE:004045AA		      mov     eax, [esi+28]   ;	@@OUT 28,7,-
CODE:004045AD		      mov     [edi+112], eax
CODE:004045B0		      retn
CODE:004045B0 endp	      mp3_dct32_shift_2
CODE:004045B0
CODE:004045B0 ;	---------------------------------------------------------------------------
CODE:004045B1		      align 10h
CODE:004045C0
CODE:004045C0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004045C0
CODE:004045C0
CODE:004045C0 proc	      synth_16bit_shift_0_fast near ; ...
CODE:004045C0		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 0,0,1
CODE:004045C7		      jz      short @@no_rdtsc_supported
CODE:004045C9		      rdtsc
CODE:004045CB		      sub     [ds:rdtsc_synth_dct], eax
CODE:004045D1		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:004045D7
CODE:004045D7 @@no_rdtsc_supported:		      ;	...
CODE:004045D7		      mov     esi, offset mp3_sb_samples
CODE:004045DC		      mov     edi, [ds:mp3_samples_dst]
CODE:004045E2		      mov     [ds:mp3_curr_channel], 0
CODE:004045EC
CODE:004045EC @@synth_channel_lop:		      ;	...
CODE:004045EC		      push    esi
CODE:004045ED		      push    edi
CODE:004045EE		      mov     [ds:mp3_curr_syn_dst], edi
CODE:004045F4		      mov     [ds:mp3_curr_frame], 0
CODE:004045FE
CODE:004045FE @@synth_frame_lop:		      ;	...
CODE:004045FE		      push    esi
CODE:004045FF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404606		      jz      short @@no_rdtsc_supported@
CODE:00404608		      rdtsc
CODE:0040460A		      sub     [ds:rdtsc_dct32],	eax
CODE:00404610		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00404616
CODE:00404616 @@no_rdtsc_supported@:		      ;	...
CODE:00404616		      mov     edx, [ds:mp3_curr_channel]
CODE:0040461C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00404623		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:0040462B		      shl     edx, 10
CODE:0040462E		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00404633		      or      eax, edx
CODE:00404635		      mov     [ds:mp3_curr_syn_index], eax
CODE:0040463A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00404640		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00404647		      call    mp3_dct32_shift_0
CODE:0040464C		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404653		      jz      short @@no_rdtsc_supported@@
CODE:00404655		      rdtsc
CODE:00404657		      add     [ds:rdtsc_dct32],	eax
CODE:0040465D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00404663
CODE:00404663 @@no_rdtsc_supported@@:		      ;	...
CODE:00404663		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040466A		      jz      short @@@no_rdtsc_supported
CODE:0040466C		      rdtsc
CODE:0040466E		      sub     [ds:rdtsc_synth],	eax
CODE:00404674		      sbb     [ds:rdtsc_synth+4], edx
CODE:0040467A
CODE:0040467A @@@no_rdtsc_supported:		      ;	...
CODE:0040467A		      call    mp3_synth_filter_this_16bit_shift_0_fast ;
CODE:0040467A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:0040467F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404686		      jz      short @@@no_rdtsc_supported@
CODE:00404688		      rdtsc
CODE:0040468A		      add     [ds:rdtsc_synth],	eax
CODE:00404690		      adc     [ds:rdtsc_synth+4], edx
CODE:00404696
CODE:00404696 @@@no_rdtsc_supported@:		      ;	...
CODE:00404696		      pop     esi
CODE:00404697		      mov     eax, [ds:mp3_samples_dst_step]
CODE:0040469C		      shl     eax, 5
CODE:0040469F		      mov     cl, [ds:option_rate_shift]
CODE:004046A5		      shr     eax, cl
CODE:004046A7		      add     [ds:mp3_curr_syn_dst], eax
CODE:004046AD		      add     esi, 128	      ;	SBLIMIT*4
CODE:004046B3		      inc     [ds:mp3_curr_frame]
CODE:004046B9		      mov     eax, [ds:mp3_curr_frame]
CODE:004046BE		      cmp     eax, [ds:mp3_nb_frames]
CODE:004046C4		      jb      @@synth_frame_lop
CODE:004046CA		      pop     edi
CODE:004046CB		      pop     esi
CODE:004046CC		      add     edi, [ds:mp3_bytes_per_sample]
CODE:004046D2		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:004046D8		      inc     [ds:mp3_curr_channel]
CODE:004046DE		      mov     eax, [ds:mp3_curr_channel]
CODE:004046E3		      cmp     eax, [ds:mp3_output_num_channels]
CODE:004046E9		      jb      @@synth_channel_lop
CODE:004046EF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004046F6		      jz      short @@@no_rdtsc_supported@@
CODE:004046F8		      rdtsc
CODE:004046FA		      add     [ds:rdtsc_synth_dct], eax
CODE:00404700		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00404706
CODE:00404706 @@@no_rdtsc_supported@@:		      ;	...
CODE:00404706		      retn
CODE:00404706 endp	      synth_16bit_shift_0_fast
CODE:00404706
CODE:00404706 ;	---------------------------------------------------------------------------
CODE:00404707		      align 10h
CODE:00404710
CODE:00404710 ;	===============	S U B R	O U T I	N E =======================================
CODE:00404710
CODE:00404710
CODE:00404710 proc	      mp3_synth_filter_this_16bit_shift_0_fast near ; ...
CODE:00404710		      mov     eax, [ds:mp3_curr_syn_index]
CODE:00404715		      test    eax, 1E0h	      ;	1FFh-1Fh
CODE:0040471A		      jz      @@append_copy_to_window
CODE:00404720		      nop
CODE:00404721
CODE:00404721 @@append_copy_to_window_back:	      ;	...
CODE:00404721		      mov     ebp, eax
CODE:00404723		      and     ebp, 1C0h	      ;	@win1,1FFh-1Fh-20h
CODE:00404729		      and     eax, 420h	      ;	and eax,20h+(1 shl 10) ; bit5 and channel
CODE:0040472E		      lea     esi, [eax+10h]  ;	@@syn1,[eax+10h]
CODE:00404731		      lea     edi, [eax+30h]  ;	@@syn2,[eax+30h]
CODE:00404734		      neg     ebp
CODE:00404736		      and     ebp, 1C0h	      ;	@win1,1FFh-1Fh-20h
CODE:0040473C		      mov     ecx, [ds:mp3_curr_syn_dst] ; @@dst,dword ptr [mp3_curr_syn_dst]
CODE:00404742
CODE:00404742 @@samples_lop:			      ;	...
CODE:00404742		      mov     ebx, 20002000h  ;	mov @@sum,(8000h SHL (@@out_shift))+(1 SHL (@@out_shift-1))
CODE:00404742					      ;	@@out_shift equ	(OUT_SHIFT_fast+(8*force_8bit))
CODE:00404742					      ;	out_shift = 14
CODE:00404747		      mov     edx, [ds:mp3_synth_buf+esi*4] ; @@SUM8 macro sum,win,ww,syn
CODE:00404747					      ;	@@SUM8 @@sum,@@win1,0,@@syn1
CODE:00404747					      ;	IRP nn,0,1,2,3,4,5,6,7
CODE:00404747					      ;	mov edx,dword ptr [mp3_synth_buf+syn*4+(nn*64*4)]
CODE:00404747					      ;	movsx eax,word ptr [mp3_synth_win+win*2+(nn*64*2)+ww*2]
CODE:00404747					      ;	imul eax,edx
CODE:00404747					      ;	add sum,eax
CODE:0040474E		      movsx   eax, [word ptr ds:mp3_synth_win+ebp*2] ; nn=0, ww=0
CODE:00404756		      imul    eax, edx
CODE:00404759		      add     ebx, eax
CODE:0040475B		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4]
CODE:00404762		      movsx   eax, [word ptr ds:(mp3_synth_win+80h)+ebp*2] ; nn=1, ww=0
CODE:0040476A		      imul    eax, edx
CODE:0040476D		      add     ebx, eax
CODE:0040476F		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00404776		      movsx   eax, [word ptr ds:(mp3_synth_win+100h)+ebp*2] ; nn=2
CODE:0040477E		      imul    eax, edx
CODE:00404781		      add     ebx, eax
CODE:00404783		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:0040478A		      movsx   eax, [word ptr ds:(mp3_synth_win+180h)+ebp*2] ; nn=3
CODE:00404792		      imul    eax, edx
CODE:00404795		      add     ebx, eax
CODE:00404797		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:0040479E		      movsx   eax, [word ptr ds:(mp3_synth_win+200h)+ebp*2] ; nn=4
CODE:004047A6		      imul    eax, edx
CODE:004047A9		      add     ebx, eax
CODE:004047AB		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:004047B2		      movsx   eax, [word ptr ds:(mp3_synth_win+280h)+ebp*2] ; nn=5
CODE:004047BA		      imul    eax, edx
CODE:004047BD		      add     ebx, eax
CODE:004047BF		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:004047C6		      movsx   eax, [word ptr ds:(mp3_synth_win+300h)+ebp*2] ; nn=6
CODE:004047CE		      imul    eax, edx
CODE:004047D1		      add     ebx, eax
CODE:004047D3		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:004047DA		      movsx   eax, [word ptr ds:(mp3_synth_win+380h)+ebp*2] ; nn=7
CODE:004047E2		      imul    eax, edx
CODE:004047E5		      add     ebx, eax
CODE:004047E7		      mov     edx, [ds:mp3_synth_buf+edi*4] ; @@SUM8 @@sum,@@win1,32, @@syn2
CODE:004047EE		      movsx   eax, [word ptr ds:(mp3_synth_win+40h)+ebp*2] ; nn=0, ww=32
CODE:004047F6		      imul    eax, edx
CODE:004047F9		      add     ebx, eax
CODE:004047FB		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00404802		      movsx   eax, [word ptr ds:(mp3_synth_win+0C0h)+ebp*2] ; nn=1, ww=32
CODE:0040480A		      imul    eax, edx
CODE:0040480D		      add     ebx, eax
CODE:0040480F		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:00404816		      movsx   eax, [word ptr ds:(mp3_synth_win+140h)+ebp*2] ; nn=2
CODE:0040481E		      imul    eax, edx
CODE:00404821		      add     ebx, eax
CODE:00404823		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:0040482A		      movsx   eax, [word ptr ds:(mp3_synth_win+1C0h)+ebp*2] ; nn=3
CODE:00404832		      imul    eax, edx
CODE:00404835		      add     ebx, eax
CODE:00404837		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:0040483E		      movsx   eax, [word ptr ds:(mp3_synth_win+240h)+ebp*2] ; nn=4
CODE:00404846		      imul    eax, edx
CODE:00404849		      add     ebx, eax
CODE:0040484B		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00404852		      movsx   eax, [word ptr ds:(mp3_synth_win+2C0h)+ebp*2] ; nn=5
CODE:0040485A		      imul    eax, edx
CODE:0040485D		      add     ebx, eax
CODE:0040485F		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:00404866		      movsx   eax, [word ptr ds:(mp3_synth_win+340h)+ebp*2] ; nn=6
CODE:0040486E		      imul    eax, edx
CODE:00404871		      add     ebx, eax
CODE:00404873		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:0040487A		      movsx   eax, [word ptr ds:(mp3_synth_win+3C0h)+ebp*2] ; nn=7
CODE:00404882		      imul    eax, edx
CODE:00404885		      add     ebx, eax
CODE:00404887		      cmp     ebx, 40000000h  ;	cmp @@sum,10000h SHL (@@out_shift) ; out_shift = 14
CODE:0040488D		      jnb     short @@sat
CODE:0040488F		      sar     ebx, 14	      ;	sar @@sum,(@@out_shift)
CODE:00404892		      sub     ebx, 8000h      ;	sub @@sum,8000h	; make 16bit signed
CODE:00404898
CODE:00404898 @@sat_back:			      ;	...
CODE:00404898		      mov     [ecx], bx	      ;	mov word ptr [@@dst],@@sum_16bit
CODE:0040489B		      add     ecx, [ds:mp3_samples_dst_step]
CODE:004048A1		      inc     esi	      ;	inc @@syn1
CODE:004048A2		      dec     edi	      ;	dec @@syn2
CODE:004048A3		      inc     ebp	      ;	inc @@win1
CODE:004048A4		      test    ebp, 1Fh	      ;	IF LONG_WINDOW
CODE:004048AA		      jnz     @@samples_lop   ;	test @@win1,1Fh
CODE:004048B0		      retn
CODE:004048B0 ;	---------------------------------------------------------------------------
CODE:004048B1		      align 10h
CODE:004048C0
CODE:004048C0 @@sat:				      ;	...
CODE:004048C0		      sar     ebx, 31	      ;	sar @@sum,31 ; FFFFFFFFh,00000000h
CODE:004048C3		      xor     ebx, 7FFFh      ;	xor @@sum,7fffh	; FFFF8000h,00007FFFh (signed 16bit)
CODE:004048C9		      jmp     short @@sat_back
CODE:004048C9 ;	---------------------------------------------------------------------------
CODE:004048CB		      align 10h
CODE:004048D0
CODE:004048D0 @@append_copy_to_window:		      ;	...
CODE:004048D0		      lea     esi, [mp3_synth_buf+eax*4] ; IF SYNTH32
CODE:004048D7		      lea     edi, [esi+2048] ;	[esi+512*4]
CODE:004048DD		      mov     ecx, 18	      ;	(12h*4)/4
CODE:004048E2		      rep movsd
CODE:004048E4		      jmp     @@append_copy_to_window_back
CODE:004048E4 endp	      mp3_synth_filter_this_16bit_shift_0_fast
CODE:004048E4
CODE:004048E4 ;	---------------------------------------------------------------------------
CODE:004048E9		      align 10h
CODE:004048F0
CODE:004048F0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004048F0
CODE:004048F0
CODE:004048F0 proc	      synth_16bit_shift_1_fast near ; ...
CODE:004048F0		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 0,1,1
CODE:004048F7		      jz      short @@no_rdtsc_supported
CODE:004048F9		      rdtsc
CODE:004048FB		      sub     [ds:rdtsc_synth_dct], eax
CODE:00404901		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:00404907
CODE:00404907 @@no_rdtsc_supported:		      ;	...
CODE:00404907		      mov     esi, offset mp3_sb_samples
CODE:0040490C		      mov     edi, [ds:mp3_samples_dst]
CODE:00404912		      mov     [ds:mp3_curr_channel], 0
CODE:0040491C
CODE:0040491C @@synth_channel_lop:		      ;	...
CODE:0040491C		      push    esi
CODE:0040491D		      push    edi
CODE:0040491E		      mov     [ds:mp3_curr_syn_dst], edi
CODE:00404924		      mov     [ds:mp3_curr_frame], 0
CODE:0040492E
CODE:0040492E @@synth_frame_lop:		      ;	...
CODE:0040492E		      push    esi
CODE:0040492F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404936		      jz      short @@no_rdtsc_supported@
CODE:00404938		      rdtsc
CODE:0040493A		      sub     [ds:rdtsc_dct32],	eax
CODE:00404940		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00404946
CODE:00404946 @@no_rdtsc_supported@:		      ;	...
CODE:00404946		      mov     edx, [ds:mp3_curr_channel]
CODE:0040494C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00404953		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:0040495B		      shl     edx, 10
CODE:0040495E		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00404963		      or      eax, edx
CODE:00404965		      mov     [ds:mp3_curr_syn_index], eax
CODE:0040496A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00404970		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00404977		      call    mp3_dct32_shift_1	; mp3_dct32_shift_&rate_shift
CODE:0040497C		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404983		      jz      short @@no_rdtsc_supported@@
CODE:00404985		      rdtsc
CODE:00404987		      add     [ds:rdtsc_dct32],	eax
CODE:0040498D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00404993
CODE:00404993 @@no_rdtsc_supported@@:		      ;	...
CODE:00404993		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040499A		      jz      short @@@no_rdtsc_supported
CODE:0040499C		      rdtsc
CODE:0040499E		      sub     [ds:rdtsc_synth],	eax
CODE:004049A4		      sbb     [ds:rdtsc_synth+4], edx
CODE:004049AA
CODE:004049AA @@@no_rdtsc_supported:		      ;	...
CODE:004049AA		      call    mp3_synth_filter_this_16bit_shift_1_fast ;
CODE:004049AA					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:004049AF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004049B6		      jz      short @@@no_rdtsc_supported@
CODE:004049B8		      rdtsc
CODE:004049BA		      add     [ds:rdtsc_synth],	eax
CODE:004049C0		      adc     [ds:rdtsc_synth+4], edx
CODE:004049C6
CODE:004049C6 @@@no_rdtsc_supported@:		      ;	...
CODE:004049C6		      pop     esi
CODE:004049C7		      mov     eax, [ds:mp3_samples_dst_step]
CODE:004049CC		      shl     eax, 5
CODE:004049CF		      mov     cl, [ds:option_rate_shift]
CODE:004049D5		      shr     eax, cl
CODE:004049D7		      add     [ds:mp3_curr_syn_dst], eax
CODE:004049DD		      add     esi, 128	      ;	SBLIMIT*4
CODE:004049E3		      inc     [ds:mp3_curr_frame]
CODE:004049E9		      mov     eax, [ds:mp3_curr_frame]
CODE:004049EE		      cmp     eax, [ds:mp3_nb_frames]
CODE:004049F4		      jb      @@synth_frame_lop
CODE:004049FA		      pop     edi
CODE:004049FB		      pop     esi
CODE:004049FC		      add     edi, [ds:mp3_bytes_per_sample]
CODE:00404A02		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:00404A08		      inc     [ds:mp3_curr_channel]
CODE:00404A0E		      mov     eax, [ds:mp3_curr_channel]
CODE:00404A13		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00404A19		      jb      @@synth_channel_lop
CODE:00404A1F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404A26		      jz      short @@@no_rdtsc_supported@@
CODE:00404A28		      rdtsc
CODE:00404A2A		      add     [ds:rdtsc_synth_dct], eax
CODE:00404A30		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00404A36
CODE:00404A36 @@@no_rdtsc_supported@@:		      ;	...
CODE:00404A36		      retn
CODE:00404A36 endp	      synth_16bit_shift_1_fast
CODE:00404A36
CODE:00404A36 ;	---------------------------------------------------------------------------
CODE:00404A37		      align 10h
CODE:00404A40
CODE:00404A40 ;	===============	S U B R	O U T I	N E =======================================
CODE:00404A40
CODE:00404A40
CODE:00404A40 proc	      mp3_synth_filter_this_16bit_shift_1_fast near ; ...
CODE:00404A40		      mov     eax, [ds:mp3_curr_syn_index]
CODE:00404A45		      test    eax, 1E0h	      ;	1FFh-1Fh
CODE:00404A4A		      jz      @@append_copy_to_window
CODE:00404A50		      nop
CODE:00404A51
CODE:00404A51 @@append_copy_to_window_back:	      ;	...
CODE:00404A51		      mov     ebp, eax
CODE:00404A53		      and     ebp, 1C0h
CODE:00404A59		      and     eax, 420h
CODE:00404A5E		      lea     esi, [eax+10h]
CODE:00404A61		      lea     edi, [eax+30h]
CODE:00404A64		      neg     ebp
CODE:00404A66		      and     ebp, 1C0h
CODE:00404A6C		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:00404A72
CODE:00404A72 @@samples_lop:			      ;	...
CODE:00404A72		      mov     ebx, 20002000h  ;	mov @@sum,(8000h SHL (@@out_shift))+(1 SHL (@@out_shift-1))
CODE:00404A72					      ;	@@out_shift equ	(OUT_SHIFT_fast+(8*force_8bit))
CODE:00404A72					      ;	out_shift = 14
CODE:00404A77		      mov     edx, [ds:mp3_synth_buf+esi*4] ; @@SUM8 macro sum,win,ww,syn
CODE:00404A77					      ;	@@SUM8 @@sum,@@win1,0,@@syn1
CODE:00404A77					      ;	IRP nn,0,1,2,3,4,5,6,7
CODE:00404A77					      ;	mov edx,dword ptr [mp3_synth_buf+syn*4+(nn*64*4)]
CODE:00404A77					      ;	movsx eax,word ptr [mp3_synth_win+win*2+(nn*64*2)+ww*2]
CODE:00404A77					      ;	imul eax,edx
CODE:00404A77					      ;	add sum,eax
CODE:00404A7E		      movsx   eax, [word ptr ds:mp3_synth_win+ebp*2]
CODE:00404A86		      imul    eax, edx
CODE:00404A89		      add     ebx, eax
CODE:00404A8B		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4] ; nn=1
CODE:00404A92		      movsx   eax, [word ptr ds:(mp3_synth_win+80h)+ebp*2] ; ww=0
CODE:00404A9A		      imul    eax, edx
CODE:00404A9D		      add     ebx, eax
CODE:00404A9F		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00404AA6		      movsx   eax, [word ptr ds:(mp3_synth_win+100h)+ebp*2]
CODE:00404AAE		      imul    eax, edx
CODE:00404AB1		      add     ebx, eax
CODE:00404AB3		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:00404ABA		      movsx   eax, [word ptr ds:(mp3_synth_win+180h)+ebp*2]
CODE:00404AC2		      imul    eax, edx
CODE:00404AC5		      add     ebx, eax
CODE:00404AC7		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4] ; nn=4
CODE:00404ACE		      movsx   eax, [word ptr ds:(mp3_synth_win+200h)+ebp*2]
CODE:00404AD6		      imul    eax, edx
CODE:00404AD9		      add     ebx, eax
CODE:00404ADB		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:00404AE2		      movsx   eax, [word ptr ds:(mp3_synth_win+280h)+ebp*2]
CODE:00404AEA		      imul    eax, edx
CODE:00404AED		      add     ebx, eax
CODE:00404AEF		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:00404AF6		      movsx   eax, [word ptr ds:(mp3_synth_win+300h)+ebp*2]
CODE:00404AFE		      imul    eax, edx
CODE:00404B01		      add     ebx, eax
CODE:00404B03		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4] ; nn=7
CODE:00404B0A		      movsx   eax, [word ptr ds:(mp3_synth_win+380h)+ebp*2] ; ww=0
CODE:00404B12		      imul    eax, edx
CODE:00404B15		      add     ebx, eax
CODE:00404B17		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:00404B1E		      movsx   eax, [word ptr ds:(mp3_synth_win+40h)+ebp*2]
CODE:00404B26		      imul    eax, edx
CODE:00404B29		      add     ebx, eax
CODE:00404B2B		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00404B32		      movsx   eax, [word ptr ds:(mp3_synth_win+0C0h)+ebp*2]
CODE:00404B3A		      imul    eax, edx
CODE:00404B3D		      add     ebx, eax
CODE:00404B3F		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4] ; nn=2, ww=32
CODE:00404B46		      movsx   eax, [word ptr ds:(mp3_synth_win+140h)+ebp*2]
CODE:00404B4E		      imul    eax, edx
CODE:00404B51		      add     ebx, eax
CODE:00404B53		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:00404B5A		      movsx   eax, [word ptr ds:(mp3_synth_win+1C0h)+ebp*2]
CODE:00404B62		      imul    eax, edx
CODE:00404B65		      add     ebx, eax
CODE:00404B67		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:00404B6E		      movsx   eax, [word ptr ds:(mp3_synth_win+240h)+ebp*2]
CODE:00404B76		      imul    eax, edx
CODE:00404B79		      add     ebx, eax
CODE:00404B7B		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00404B82		      movsx   eax, [word ptr ds:(mp3_synth_win+2C0h)+ebp*2]
CODE:00404B8A		      imul    eax, edx
CODE:00404B8D		      add     ebx, eax
CODE:00404B8F		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4] ; nn=6, ww=32
CODE:00404B96		      movsx   eax, [word ptr ds:(mp3_synth_win+340h)+ebp*2]
CODE:00404B9E		      imul    eax, edx
CODE:00404BA1		      add     ebx, eax
CODE:00404BA3		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:00404BAA		      movsx   eax, [word ptr ds:(mp3_synth_win+3C0h)+ebp*2]
CODE:00404BB2		      imul    eax, edx
CODE:00404BB5		      add     ebx, eax
CODE:00404BB7		      cmp     ebx, 40000000h  ;	cmp  @@sum,10000h SHL (@@out_shift)
CODE:00404BBD		      jnb     short @@sat
CODE:00404BBF		      sar     ebx, 14	      ;	sar @@sum,(@@out_shift)
CODE:00404BC2		      sub     ebx, 8000h      ;	make 16bit signed
CODE:00404BC8
CODE:00404BC8 @@sat_back:			      ;	...
CODE:00404BC8		      mov     [ecx], bx
CODE:00404BCB		      add     ecx, [ds:mp3_samples_dst_step]
CODE:00404BD1		      add     esi, 2	      ;	IF rate_shift
CODE:00404BD1					      ;	add  @@syn1,1 shl rate_shift
CODE:00404BD4		      sub     edi, 2	      ;	sub @@syn2,1 shl rate_shift
CODE:00404BD7		      add     ebp, 2	      ;	add @@win1,1 shl rate_shift
CODE:00404BDA		      test    ebp, 1Fh	      ;	IF LONG_WINDOW
CODE:00404BE0		      jnz     @@samples_lop   ;	test @@win1,1fh
CODE:00404BE6		      retn
CODE:00404BE6 ;	---------------------------------------------------------------------------
CODE:00404BE7		      align 10h
CODE:00404BF0
CODE:00404BF0 @@sat:				      ;	...
CODE:00404BF0		      sar     ebx, 31	      ;	sar @@sum,31 ; FFFFFFFFh,00000000h
CODE:00404BF3		      xor     ebx, 7FFFh      ;	xor @@sum,7fffh	; FFFF8000h,00007FFFh (signed 16bit)
CODE:00404BF9		      jmp     short @@sat_back
CODE:00404BF9 ;	---------------------------------------------------------------------------
CODE:00404BFB		      align 10h
CODE:00404C00
CODE:00404C00 @@append_copy_to_window:		      ;	...
CODE:00404C00		      lea     esi, [mp3_synth_buf+eax*4]
CODE:00404C07		      lea     edi, [esi+2048] ;	[esi+512*4]
CODE:00404C0D		      mov     ecx, 18	      ;	(12h*4)/4
CODE:00404C12		      rep movsd
CODE:00404C14		      jmp     @@append_copy_to_window_back
CODE:00404C14 endp	      mp3_synth_filter_this_16bit_shift_1_fast
CODE:00404C14
CODE:00404C14 ;	---------------------------------------------------------------------------
CODE:00404C19		      align 10h
CODE:00404C20
CODE:00404C20 ;	===============	S U B R	O U T I	N E =======================================
CODE:00404C20
CODE:00404C20
CODE:00404C20 proc	      synth_16bit_shift_2_fast near ; ...
CODE:00404C20		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 0,2,1
CODE:00404C27		      jz      short @@no_rdtsc_supported
CODE:00404C29		      rdtsc
CODE:00404C2B		      sub     [ds:rdtsc_synth_dct], eax
CODE:00404C31		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:00404C37
CODE:00404C37 @@no_rdtsc_supported:		      ;	...
CODE:00404C37		      mov     esi, offset mp3_sb_samples
CODE:00404C3C		      mov     edi, [ds:mp3_samples_dst]
CODE:00404C42		      mov     [ds:mp3_curr_channel], 0
CODE:00404C4C
CODE:00404C4C @@synth_channel_lop:		      ;	...
CODE:00404C4C		      push    esi
CODE:00404C4D		      push    edi
CODE:00404C4E		      mov     [ds:mp3_curr_syn_dst], edi
CODE:00404C54		      mov     [ds:mp3_curr_frame], 0
CODE:00404C5E
CODE:00404C5E @@synth_frame_lop:		      ;	...
CODE:00404C5E		      push    esi
CODE:00404C5F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404C66		      jz      short @@no_rdtsc_supported@
CODE:00404C68		      rdtsc
CODE:00404C6A		      sub     [ds:rdtsc_dct32],	eax
CODE:00404C70		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00404C76
CODE:00404C76 @@no_rdtsc_supported@:		      ;	...
CODE:00404C76		      mov     edx, [ds:mp3_curr_channel]
CODE:00404C7C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00404C83		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:00404C8B		      shl     edx, 10
CODE:00404C8E		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00404C93		      or      eax, edx
CODE:00404C95		      mov     [ds:mp3_curr_syn_index], eax
CODE:00404C9A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00404CA0		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00404CA7		      call    mp3_dct32_shift_2	; mp3_dct32_shift_&rate_shift
CODE:00404CAC		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404CB3		      jz      short @@no_rdtsc_supported@@
CODE:00404CB5		      rdtsc
CODE:00404CB7		      add     [ds:rdtsc_dct32],	eax
CODE:00404CBD		      adc     [ds:rdtsc_dct32+4], edx
CODE:00404CC3
CODE:00404CC3 @@no_rdtsc_supported@@:		      ;	...
CODE:00404CC3		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404CCA		      jz      short @@@no_rdtsc_supported
CODE:00404CCC		      rdtsc
CODE:00404CCE		      sub     [ds:rdtsc_synth],	eax
CODE:00404CD4		      sbb     [ds:rdtsc_synth+4], edx
CODE:00404CDA
CODE:00404CDA @@@no_rdtsc_supported:		      ;	...
CODE:00404CDA		      call    mp3_synth_filter_this_16bit_shift_2_fast ;
CODE:00404CDA					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fas
CODE:00404CDF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404CE6		      jz      short @@@no_rdtsc_supported@
CODE:00404CE8		      rdtsc
CODE:00404CEA		      add     [ds:rdtsc_synth],	eax
CODE:00404CF0		      adc     [ds:rdtsc_synth+4], edx
CODE:00404CF6
CODE:00404CF6 @@@no_rdtsc_supported@:		      ;	...
CODE:00404CF6		      pop     esi
CODE:00404CF7		      mov     eax, [ds:mp3_samples_dst_step]
CODE:00404CFC		      shl     eax, 5
CODE:00404CFF		      mov     cl, [ds:option_rate_shift]
CODE:00404D05		      shr     eax, cl
CODE:00404D07		      add     [ds:mp3_curr_syn_dst], eax
CODE:00404D0D		      add     esi, 128	      ;	SBLIMIT*4
CODE:00404D13		      inc     [ds:mp3_curr_frame]
CODE:00404D19		      mov     eax, [ds:mp3_curr_frame]
CODE:00404D1E		      cmp     eax, [ds:mp3_nb_frames]
CODE:00404D24		      jb      @@synth_frame_lop
CODE:00404D2A		      pop     edi
CODE:00404D2B		      pop     esi
CODE:00404D2C		      add     edi, [ds:mp3_bytes_per_sample]
CODE:00404D32		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:00404D38		      inc     [ds:mp3_curr_channel]
CODE:00404D3E		      mov     eax, [ds:mp3_curr_channel]
CODE:00404D43		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00404D49		      jb      @@synth_channel_lop
CODE:00404D4F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404D56		      jz      short @@@no_rdtsc_supported@@
CODE:00404D58		      rdtsc
CODE:00404D5A		      add     [ds:rdtsc_synth_dct], eax
CODE:00404D60		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00404D66
CODE:00404D66 @@@no_rdtsc_supported@@:		      ;	...
CODE:00404D66		      retn
CODE:00404D66 endp	      synth_16bit_shift_2_fast
CODE:00404D66
CODE:00404D66 ;	---------------------------------------------------------------------------
CODE:00404D67		      align 10h
CODE:00404D70
CODE:00404D70 ;	===============	S U B R	O U T I	N E =======================================
CODE:00404D70
CODE:00404D70
CODE:00404D70 proc	      mp3_synth_filter_this_16bit_shift_2_fast near ; ...
CODE:00404D70		      mov     eax, [ds:mp3_curr_syn_index]
CODE:00404D75		      test    eax, 1E0h	      ;	1FFh-1Fh
CODE:00404D7A		      jz      @@append_copy_to_window
CODE:00404D80		      nop
CODE:00404D81
CODE:00404D81 @@append_copy_to_window_back:	      ;	...
CODE:00404D81		      mov     ebp, eax
CODE:00404D83		      and     ebp, 1C0h	      ;	1FFh-1Fh-20h
CODE:00404D89		      and     eax, 420h	      ;	20h+(1 shl 10)
CODE:00404D8E		      lea     esi, [eax+10h]
CODE:00404D91		      lea     edi, [eax+30h]
CODE:00404D94		      neg     ebp
CODE:00404D96		      and     ebp, 1C0h
CODE:00404D9C		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:00404DA2
CODE:00404DA2 @@samples_lop:			      ;	...
CODE:00404DA2		      mov     ebx, 20002000h  ;	mov @@sum,(8000h SHL (@@out_shift))+(1 SHL (@@out_shift-1))
CODE:00404DA2					      ;	@@out_shift equ	(OUT_SHIFT_fast+(8*force_8bit))
CODE:00404DA2					      ;	out_shift = 14
CODE:00404DA7		      mov     edx, [ds:mp3_synth_buf+esi*4]
CODE:00404DAE		      movsx   eax, [word ptr ds:mp3_synth_win+ebp*2]
CODE:00404DB6		      imul    eax, edx
CODE:00404DB9		      add     ebx, eax
CODE:00404DBB		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4]
CODE:00404DC2		      movsx   eax, [word ptr ds:(mp3_synth_win+80h)+ebp*2]
CODE:00404DCA		      imul    eax, edx
CODE:00404DCD		      add     ebx, eax
CODE:00404DCF		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00404DD6		      movsx   eax, [word ptr ds:(mp3_synth_win+100h)+ebp*2]
CODE:00404DDE		      imul    eax, edx
CODE:00404DE1		      add     ebx, eax
CODE:00404DE3		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:00404DEA		      movsx   eax, [word ptr ds:(mp3_synth_win+180h)+ebp*2]
CODE:00404DF2		      imul    eax, edx
CODE:00404DF5		      add     ebx, eax
CODE:00404DF7		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:00404DFE		      movsx   eax, [word ptr ds:(mp3_synth_win+200h)+ebp*2]
CODE:00404E06		      imul    eax, edx
CODE:00404E09		      add     ebx, eax
CODE:00404E0B		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:00404E12		      movsx   eax, [word ptr ds:(mp3_synth_win+280h)+ebp*2]
CODE:00404E1A		      imul    eax, edx
CODE:00404E1D		      add     ebx, eax
CODE:00404E1F		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:00404E26		      movsx   eax, [word ptr ds:(mp3_synth_win+300h)+ebp*2]
CODE:00404E2E		      imul    eax, edx
CODE:00404E31		      add     ebx, eax
CODE:00404E33		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:00404E3A		      movsx   eax, [word ptr ds:(mp3_synth_win+380h)+ebp*2]
CODE:00404E42		      imul    eax, edx
CODE:00404E45		      add     ebx, eax
CODE:00404E47		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:00404E4E		      movsx   eax, [word ptr ds:(mp3_synth_win+40h)+ebp*2]
CODE:00404E56		      imul    eax, edx
CODE:00404E59		      add     ebx, eax
CODE:00404E5B		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00404E62		      movsx   eax, [word ptr ds:(mp3_synth_win+0C0h)+ebp*2]
CODE:00404E6A		      imul    eax, edx
CODE:00404E6D		      add     ebx, eax
CODE:00404E6F		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:00404E76		      movsx   eax, [word ptr ds:(mp3_synth_win+140h)+ebp*2]
CODE:00404E7E		      imul    eax, edx
CODE:00404E81		      add     ebx, eax
CODE:00404E83		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:00404E8A		      movsx   eax, [word ptr ds:(mp3_synth_win+1C0h)+ebp*2]
CODE:00404E92		      imul    eax, edx
CODE:00404E95		      add     ebx, eax
CODE:00404E97		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:00404E9E		      movsx   eax, [word ptr ds:(mp3_synth_win+240h)+ebp*2]
CODE:00404EA6		      imul    eax, edx
CODE:00404EA9		      add     ebx, eax
CODE:00404EAB		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00404EB2		      movsx   eax, [word ptr ds:(mp3_synth_win+2C0h)+ebp*2]
CODE:00404EBA		      imul    eax, edx
CODE:00404EBD		      add     ebx, eax
CODE:00404EBF		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:00404EC6		      movsx   eax, [word ptr ds:(mp3_synth_win+340h)+ebp*2]
CODE:00404ECE		      imul    eax, edx
CODE:00404ED1		      add     ebx, eax
CODE:00404ED3		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:00404EDA		      movsx   eax, [word ptr ds:(mp3_synth_win+3C0h)+ebp*2]
CODE:00404EE2		      imul    eax, edx
CODE:00404EE5		      add     ebx, eax
CODE:00404EE7		      cmp     ebx, 40000000h
CODE:00404EED		      jnb     short @@sat
CODE:00404EEF		      sar     ebx, 14
CODE:00404EF2		      sub     ebx, 8000h      ;	make 16bit signed
CODE:00404EF8
CODE:00404EF8 @@sat_back:			      ;	...
CODE:00404EF8		      mov     [ecx], bx
CODE:00404EFB		      add     ecx, [ds:mp3_samples_dst_step]
CODE:00404F01		      add     esi, 4
CODE:00404F04		      sub     edi, 4
CODE:00404F07		      add     ebp, 4
CODE:00404F0A		      test    ebp, 1Fh
CODE:00404F10		      jnz     @@samples_lop
CODE:00404F16		      retn
CODE:00404F16 ;	---------------------------------------------------------------------------
CODE:00404F17		      align 10h
CODE:00404F20
CODE:00404F20 @@sat:				      ;	...
CODE:00404F20		      sar     ebx, 31
CODE:00404F23		      xor     ebx, 7FFFh
CODE:00404F29		      jmp     short @@sat_back
CODE:00404F29 ;	---------------------------------------------------------------------------
CODE:00404F2B		      align 10h
CODE:00404F30
CODE:00404F30 @@append_copy_to_window:		      ;	...
CODE:00404F30		      lea     esi, [mp3_synth_buf+eax*4]
CODE:00404F37		      lea     edi, [esi+2048]
CODE:00404F3D		      mov     ecx, 18
CODE:00404F42		      rep movsd
CODE:00404F44		      jmp     @@append_copy_to_window_back
CODE:00404F44 endp	      mp3_synth_filter_this_16bit_shift_2_fast
CODE:00404F44
CODE:00404F44 ;	---------------------------------------------------------------------------
CODE:00404F49		      align 10h
CODE:00404F50
CODE:00404F50 ;	===============	S U B R	O U T I	N E =======================================
CODE:00404F50
CODE:00404F50
CODE:00404F50 proc	      synth_8bit_shift_0_fast near ; ...
CODE:00404F50		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 1,0,1
CODE:00404F57		      jz      short @@no_rdtsc_supported
CODE:00404F59		      rdtsc
CODE:00404F5B		      sub     [ds:rdtsc_synth_dct], eax
CODE:00404F61		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:00404F67
CODE:00404F67 @@no_rdtsc_supported:		      ;	...
CODE:00404F67		      mov     esi, offset mp3_sb_samples
CODE:00404F6C		      mov     edi, [ds:mp3_samples_dst]
CODE:00404F72		      mov     [ds:mp3_curr_channel], 0
CODE:00404F7C
CODE:00404F7C @@synth_channel_lop:		      ;	...
CODE:00404F7C		      push    esi
CODE:00404F7D		      push    edi
CODE:00404F7E		      mov     [ds:mp3_curr_syn_dst], edi
CODE:00404F84		      mov     [ds:mp3_curr_frame], 0
CODE:00404F8E
CODE:00404F8E @@synth_frame_lop:		      ;	...
CODE:00404F8E		      push    esi
CODE:00404F8F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404F96		      jz      short @@no_rdtsc_supported@
CODE:00404F98		      rdtsc
CODE:00404F9A		      sub     [ds:rdtsc_dct32],	eax
CODE:00404FA0		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00404FA6
CODE:00404FA6 @@no_rdtsc_supported@:		      ;	...
CODE:00404FA6		      mov     edx, [ds:mp3_curr_channel]
CODE:00404FAC		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00404FB3		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:00404FBB		      shl     edx, 10
CODE:00404FBE		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00404FC3		      or      eax, edx
CODE:00404FC5		      mov     [ds:mp3_curr_syn_index], eax
CODE:00404FCA		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00404FD0		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00404FD7		      call    mp3_dct32_shift_0	; mp3_dct32_shift_&rate_shift
CODE:00404FDC		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404FE3		      jz      short @@no_rdtsc_supported@@
CODE:00404FE5		      rdtsc
CODE:00404FE7		      add     [ds:rdtsc_dct32],	eax
CODE:00404FED		      adc     [ds:rdtsc_dct32+4], edx
CODE:00404FF3
CODE:00404FF3 @@no_rdtsc_supported@@:		      ;	...
CODE:00404FF3		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00404FFA		      jz      short @@@no_rdtsc_supported
CODE:00404FFC		      rdtsc
CODE:00404FFE		      sub     [ds:rdtsc_synth],	eax
CODE:00405004		      sbb     [ds:rdtsc_synth+4], edx
CODE:0040500A
CODE:0040500A @@@no_rdtsc_supported:		      ;	...
CODE:0040500A		      call    mp3_synth_filter_this_8bit_shift_0_fast ;
CODE:0040500A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:0040500F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405016		      jz      short @@@no_rdtsc_supported@
CODE:00405018		      rdtsc
CODE:0040501A		      add     [ds:rdtsc_synth],	eax
CODE:00405020		      adc     [ds:rdtsc_synth+4], edx
CODE:00405026
CODE:00405026 @@@no_rdtsc_supported@:		      ;	...
CODE:00405026		      pop     esi
CODE:00405027		      mov     eax, [ds:mp3_samples_dst_step]
CODE:0040502C		      shl     eax, 5
CODE:0040502F		      mov     cl, [ds:option_rate_shift]
CODE:00405035		      shr     eax, cl
CODE:00405037		      add     [ds:mp3_curr_syn_dst], eax
CODE:0040503D		      add     esi, 128	      ;	SBLIMIT*4
CODE:00405043		      inc     [ds:mp3_curr_frame]
CODE:00405049		      mov     eax, [ds:mp3_curr_frame]
CODE:0040504E		      cmp     eax, [ds:mp3_nb_frames]
CODE:00405054		      jb      @@synth_frame_lop
CODE:0040505A		      pop     edi
CODE:0040505B		      pop     esi
CODE:0040505C		      add     edi, [ds:mp3_bytes_per_sample]
CODE:00405062		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:00405068		      inc     [ds:mp3_curr_channel]
CODE:0040506E		      mov     eax, [ds:mp3_curr_channel]
CODE:00405073		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00405079		      jb      @@synth_channel_lop
CODE:0040507F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405086		      jz      short @@@no_rdtsc_supported@@
CODE:00405088		      rdtsc
CODE:0040508A		      add     [ds:rdtsc_synth_dct], eax
CODE:00405090		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00405096
CODE:00405096 @@@no_rdtsc_supported@@:		      ;	...
CODE:00405096		      retn
CODE:00405096 endp	      synth_8bit_shift_0_fast
CODE:00405096
CODE:00405096 ;	---------------------------------------------------------------------------
CODE:00405097		      align 10h
CODE:004050A0
CODE:004050A0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004050A0
CODE:004050A0
CODE:004050A0 proc	      mp3_synth_filter_this_8bit_shift_0_fast near ; ...
CODE:004050A0		      mov     eax, [ds:mp3_curr_syn_index]
CODE:004050A5		      test    eax, 1E0h	      ;	1FFh-1Fh
CODE:004050AA		      jz      @@append_copy_to_window
CODE:004050B0		      nop
CODE:004050B1
CODE:004050B1 @@append_copy_to_window_back:	      ;	...
CODE:004050B1		      mov     ebp, eax
CODE:004050B3		      and     ebp, 1C0h	      ;	1FFh-1Fh-20h
CODE:004050B9		      and     eax, 420h	      ;	20h+(1 shl 10)
CODE:004050BE		      lea     esi, [eax+10h]
CODE:004050C1		      lea     edi, [eax+30h]
CODE:004050C4		      neg     ebp
CODE:004050C6		      and     ebp, 1C0h
CODE:004050CC		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:004050D2
CODE:004050D2 @@samples_lop:			      ;	...
CODE:004050D2		      mov     ebx, 20200000h  ;	mov @@sum,(80h SHL (@@out_shift))+(1 SHL (@@out_shift-1))
CODE:004050D2					      ;	@@out_shift equ	(OUT_SHIFT_fast(8*force_8bit))
CODE:004050D2					      ;	@@out_shift = 22
CODE:004050D7		      mov     edx, [ds:mp3_synth_buf+esi*4] ; @@SUM8 macro sum,win,ww,syn
CODE:004050D7					      ;	@@SUM8 @@sum,@@win1,0,@@syn1
CODE:004050D7					      ;	IRP nn,0,1,2,3,4,5,6,7
CODE:004050D7					      ;	mov edx,dword ptr [mp3_synth_buf+syn*4+(nn*64*4)]
CODE:004050D7					      ;	movsx eax,word ptr [mp3_synth_win+win*2+(nn*64*2)+ww*2]
CODE:004050D7					      ;	imul eax,edx
CODE:004050D7					      ;	add sum,eax
CODE:004050DE		      movsx   eax, [word ptr ds:mp3_synth_win+ebp*2]
CODE:004050E6		      imul    eax, edx
CODE:004050E9		      add     ebx, eax
CODE:004050EB		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4] ; nn=1
CODE:004050F2		      movsx   eax, [word ptr ds:(mp3_synth_win+80h)+ebp*2] ; ww=0
CODE:004050FA		      imul    eax, edx
CODE:004050FD		      add     ebx, eax
CODE:004050FF		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00405106		      movsx   eax, [word ptr ds:(mp3_synth_win+100h)+ebp*2]
CODE:0040510E		      imul    eax, edx
CODE:00405111		      add     ebx, eax
CODE:00405113		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:0040511A		      movsx   eax, [word ptr ds:(mp3_synth_win+180h)+ebp*2]
CODE:00405122		      imul    eax, edx
CODE:00405125		      add     ebx, eax
CODE:00405127		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:0040512E		      movsx   eax, [word ptr ds:(mp3_synth_win+200h)+ebp*2]
CODE:00405136		      imul    eax, edx
CODE:00405139		      add     ebx, eax
CODE:0040513B		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:00405142		      movsx   eax, [word ptr ds:(mp3_synth_win+280h)+ebp*2]
CODE:0040514A		      imul    eax, edx
CODE:0040514D		      add     ebx, eax
CODE:0040514F		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:00405156		      movsx   eax, [word ptr ds:(mp3_synth_win+300h)+ebp*2]
CODE:0040515E		      imul    eax, edx
CODE:00405161		      add     ebx, eax
CODE:00405163		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:0040516A		      movsx   eax, [word ptr ds:(mp3_synth_win+380h)+ebp*2]
CODE:00405172		      imul    eax, edx
CODE:00405175		      add     ebx, eax
CODE:00405177		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:0040517E		      movsx   eax, [word ptr ds:(mp3_synth_win+40h)+ebp*2]
CODE:00405186		      imul    eax, edx
CODE:00405189		      add     ebx, eax
CODE:0040518B		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00405192		      movsx   eax, [word ptr ds:(mp3_synth_win+0C0h)+ebp*2]
CODE:0040519A		      imul    eax, edx
CODE:0040519D		      add     ebx, eax
CODE:0040519F		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4] ; nn=2
CODE:004051A6		      movsx   eax, [word ptr ds:(mp3_synth_win+140h)+ebp*2] ; ww=32
CODE:004051AE		      imul    eax, edx
CODE:004051B1		      add     ebx, eax
CODE:004051B3		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:004051BA		      movsx   eax, [word ptr ds:(mp3_synth_win+1C0h)+ebp*2]
CODE:004051C2		      imul    eax, edx
CODE:004051C5		      add     ebx, eax
CODE:004051C7		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:004051CE		      movsx   eax, [word ptr ds:(mp3_synth_win+240h)+ebp*2]
CODE:004051D6		      imul    eax, edx
CODE:004051D9		      add     ebx, eax
CODE:004051DB		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:004051E2		      movsx   eax, [word ptr ds:(mp3_synth_win+2C0h)+ebp*2]
CODE:004051EA		      imul    eax, edx
CODE:004051ED		      add     ebx, eax
CODE:004051EF		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:004051F6		      movsx   eax, [word ptr ds:(mp3_synth_win+340h)+ebp*2]
CODE:004051FE		      imul    eax, edx
CODE:00405201		      add     ebx, eax
CODE:00405203		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:0040520A		      movsx   eax, [word ptr ds:(mp3_synth_win+3C0h)+ebp*2]
CODE:00405212		      imul    eax, edx
CODE:00405215		      add     ebx, eax
CODE:00405217		      cmp     ebx, 40000000h  ;	cmp  @@sum,100h	SHL (@@out_shift)
CODE:0040521D		      jnb     short @@sat
CODE:0040521F		      sar     ebx, 22	      ;	sar @@sum,(@@out_shift)
CODE:00405222
CODE:00405222 @@sat_back:			      ;	...
CODE:00405222		      mov     [ecx], bl	      ;	mov byte ptr [@@dst],@@sum_8bit
CODE:00405224		      add     ecx, [ds:mp3_samples_dst_step]
CODE:0040522A		      inc     esi	      ;	inc @@syn1
CODE:0040522B		      dec     edi	      ;	dec @@syn2
CODE:0040522C		      inc     ebp	      ;	inc @@win1
CODE:0040522D		      test    ebp, 1Fh	      ;	IF LONG_WINDOW
CODE:0040522D					      ;	test @@win1,1fh
CODE:00405233		      jnz     @@samples_lop
CODE:00405239		      retn
CODE:00405239 ;	---------------------------------------------------------------------------
CODE:0040523A		      align 10h
CODE:00405240
CODE:00405240 @@sat:				      ;	...
CODE:00405240		      sar     ebx, 31	      ;	sar @@sum,31 ; FFFFFFFFh,00000000h
CODE:00405243		      not     ebx	      ;	IF force_8bit
CODE:00405243					      ;	not @@sum ; 00000000h,FFFFFFFFh	(unsigned 8bit)
CODE:00405245		      jmp     short @@sat_back
CODE:00405245 ;	---------------------------------------------------------------------------
CODE:00405247		      align 10h
CODE:00405250
CODE:00405250 @@append_copy_to_window:		      ;	...
CODE:00405250		      lea     esi, [mp3_synth_buf+eax*4]
CODE:00405257		      lea     edi, [esi+2048] ;	[esi+512*4]
CODE:0040525D		      mov     ecx, 18	      ;	(12h*4)/4
CODE:00405262		      rep movsd
CODE:00405264		      jmp     @@append_copy_to_window_back
CODE:00405264 endp	      mp3_synth_filter_this_8bit_shift_0_fast
CODE:00405264
CODE:00405264 ;	---------------------------------------------------------------------------
CODE:00405269		      align 10h
CODE:00405270
CODE:00405270 ;	===============	S U B R	O U T I	N E =======================================
CODE:00405270
CODE:00405270
CODE:00405270 proc	      synth_8bit_shift_1_fast near ; ...
CODE:00405270		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 1,1,1
CODE:00405277		      jz      short @@no_rdtsc_supported
CODE:00405279		      rdtsc
CODE:0040527B		      sub     [ds:rdtsc_synth_dct], eax
CODE:00405281		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:00405287
CODE:00405287 @@no_rdtsc_supported:		      ;	...
CODE:00405287		      mov     esi, offset mp3_sb_samples
CODE:0040528C		      mov     edi, [ds:mp3_samples_dst]
CODE:00405292		      mov     [ds:mp3_curr_channel], 0
CODE:0040529C
CODE:0040529C @@synth_channel_lop:		      ;	...
CODE:0040529C		      push    esi
CODE:0040529D		      push    edi
CODE:0040529E		      mov     [ds:mp3_curr_syn_dst], edi
CODE:004052A4		      mov     [ds:mp3_curr_frame], 0
CODE:004052AE
CODE:004052AE @@synth_frame_lop:		      ;	...
CODE:004052AE		      push    esi
CODE:004052AF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004052B6		      jz      short @@no_rdtsc_supported@
CODE:004052B8		      rdtsc
CODE:004052BA		      sub     [ds:rdtsc_dct32],	eax
CODE:004052C0		      sbb     [ds:rdtsc_dct32+4], edx
CODE:004052C6
CODE:004052C6 @@no_rdtsc_supported@:		      ;	...
CODE:004052C6		      mov     edx, [ds:mp3_curr_channel]
CODE:004052CC		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:004052D3		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:004052DB		      shl     edx, 10
CODE:004052DE		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:004052E3		      or      eax, edx
CODE:004052E5		      mov     [ds:mp3_curr_syn_index], eax
CODE:004052EA		      mov     edi, [ds:mp3_curr_syn_index]
CODE:004052F0		      lea     edi, [mp3_synth_buf+edi*4]
CODE:004052F7		      call    mp3_dct32_shift_1	; mp3_dct32_shift_&rate_shift
CODE:004052FC		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405303		      jz      short @@no_rdtsc_supported@@
CODE:00405305		      rdtsc
CODE:00405307		      add     [ds:rdtsc_dct32],	eax
CODE:0040530D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00405313
CODE:00405313 @@no_rdtsc_supported@@:		      ;	...
CODE:00405313		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040531A		      jz      short @@@no_rdtsc_supported
CODE:0040531C		      rdtsc
CODE:0040531E		      sub     [ds:rdtsc_synth],	eax
CODE:00405324		      sbb     [ds:rdtsc_synth+4], edx
CODE:0040532A
CODE:0040532A @@@no_rdtsc_supported:		      ;	...
CODE:0040532A		      call    mp3_synth_filter_this_8bit_shift_1_fast ;
CODE:0040532A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:0040532F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405336		      jz      short @@@no_rdtsc_supported@
CODE:00405338		      rdtsc
CODE:0040533A		      add     [ds:rdtsc_synth],	eax
CODE:00405340		      adc     [ds:rdtsc_synth+4], edx
CODE:00405346
CODE:00405346 @@@no_rdtsc_supported@:		      ;	...
CODE:00405346		      pop     esi
CODE:00405347		      mov     eax, [ds:mp3_samples_dst_step]
CODE:0040534C		      shl     eax, 5
CODE:0040534F		      mov     cl, [ds:option_rate_shift]
CODE:00405355		      shr     eax, cl
CODE:00405357		      add     [ds:mp3_curr_syn_dst], eax
CODE:0040535D		      add     esi, 128	      ;	SBLIMIT*4
CODE:00405363		      inc     [ds:mp3_curr_frame]
CODE:00405369		      mov     eax, [ds:mp3_curr_frame]
CODE:0040536E		      cmp     eax, [ds:mp3_nb_frames]
CODE:00405374		      jb      @@synth_frame_lop
CODE:0040537A		      pop     edi
CODE:0040537B		      pop     esi
CODE:0040537C		      add     edi, [ds:mp3_bytes_per_sample]
CODE:00405382		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:00405388		      inc     [ds:mp3_curr_channel]
CODE:0040538E		      mov     eax, [ds:mp3_curr_channel]
CODE:00405393		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00405399		      jb      @@synth_channel_lop
CODE:0040539F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004053A6		      jz      short @@@no_rdtsc_supported@@
CODE:004053A8		      rdtsc
CODE:004053AA		      add     [ds:rdtsc_synth_dct], eax
CODE:004053B0		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:004053B6
CODE:004053B6 @@@no_rdtsc_supported@@:		      ;	...
CODE:004053B6		      retn
CODE:004053B6 endp	      synth_8bit_shift_1_fast
CODE:004053B6
CODE:004053B6 ;	---------------------------------------------------------------------------
CODE:004053B7		      align 10h
CODE:004053C0
CODE:004053C0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004053C0
CODE:004053C0
CODE:004053C0 proc	      mp3_synth_filter_this_8bit_shift_1_fast near ; ...
CODE:004053C0		      mov     eax, [ds:mp3_curr_syn_index]
CODE:004053C5		      test    eax, 1E0h
CODE:004053CA		      jz      @@append_copy_to_window
CODE:004053D0		      nop
CODE:004053D1
CODE:004053D1 @@append_copy_to_window_back:	      ;	...
CODE:004053D1		      mov     ebp, eax
CODE:004053D3		      and     ebp, 1C0h
CODE:004053D9		      and     eax, 420h
CODE:004053DE		      lea     esi, [eax+10h]
CODE:004053E1		      lea     edi, [eax+30h]
CODE:004053E4		      neg     ebp
CODE:004053E6		      and     ebp, 1C0h
CODE:004053EC		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:004053F2
CODE:004053F2 @@samples_lop:			      ;	...
CODE:004053F2		      mov     ebx, 20200000h
CODE:004053F7		      mov     edx, [ds:mp3_synth_buf+esi*4]
CODE:004053FE		      movsx   eax, [word ptr ds:mp3_synth_win+ebp*2]
CODE:00405406		      imul    eax, edx
CODE:00405409		      add     ebx, eax
CODE:0040540B		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4]
CODE:00405412		      movsx   eax, [word ptr ds:(mp3_synth_win+80h)+ebp*2]
CODE:0040541A		      imul    eax, edx
CODE:0040541D		      add     ebx, eax
CODE:0040541F		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00405426		      movsx   eax, [word ptr ds:(mp3_synth_win+100h)+ebp*2]
CODE:0040542E		      imul    eax, edx
CODE:00405431		      add     ebx, eax
CODE:00405433		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:0040543A		      movsx   eax, [word ptr ds:(mp3_synth_win+180h)+ebp*2]
CODE:00405442		      imul    eax, edx
CODE:00405445		      add     ebx, eax
CODE:00405447		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:0040544E		      movsx   eax, [word ptr ds:(mp3_synth_win+200h)+ebp*2]
CODE:00405456		      imul    eax, edx
CODE:00405459		      add     ebx, eax
CODE:0040545B		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:00405462		      movsx   eax, [word ptr ds:(mp3_synth_win+280h)+ebp*2]
CODE:0040546A		      imul    eax, edx
CODE:0040546D		      add     ebx, eax
CODE:0040546F		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:00405476		      movsx   eax, [word ptr ds:(mp3_synth_win+300h)+ebp*2]
CODE:0040547E		      imul    eax, edx
CODE:00405481		      add     ebx, eax
CODE:00405483		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:0040548A		      movsx   eax, [word ptr ds:(mp3_synth_win+380h)+ebp*2]
CODE:00405492		      imul    eax, edx
CODE:00405495		      add     ebx, eax
CODE:00405497		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:0040549E		      movsx   eax, [word ptr ds:(mp3_synth_win+40h)+ebp*2]
CODE:004054A6		      imul    eax, edx
CODE:004054A9		      add     ebx, eax
CODE:004054AB		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:004054B2		      movsx   eax, [word ptr ds:(mp3_synth_win+0C0h)+ebp*2]
CODE:004054BA		      imul    eax, edx
CODE:004054BD		      add     ebx, eax
CODE:004054BF		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:004054C6		      movsx   eax, [word ptr ds:(mp3_synth_win+140h)+ebp*2]
CODE:004054CE		      imul    eax, edx
CODE:004054D1		      add     ebx, eax
CODE:004054D3		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:004054DA		      movsx   eax, [word ptr ds:(mp3_synth_win+1C0h)+ebp*2]
CODE:004054E2		      imul    eax, edx
CODE:004054E5		      add     ebx, eax
CODE:004054E7		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:004054EE		      movsx   eax, [word ptr ds:(mp3_synth_win+240h)+ebp*2]
CODE:004054F6		      imul    eax, edx
CODE:004054F9		      add     ebx, eax
CODE:004054FB		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00405502		      movsx   eax, [word ptr ds:(mp3_synth_win+2C0h)+ebp*2]
CODE:0040550A		      imul    eax, edx
CODE:0040550D		      add     ebx, eax
CODE:0040550F		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:00405516		      movsx   eax, [word ptr ds:(mp3_synth_win+340h)+ebp*2]
CODE:0040551E		      imul    eax, edx
CODE:00405521		      add     ebx, eax
CODE:00405523		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:0040552A		      movsx   eax, [word ptr ds:(mp3_synth_win+3C0h)+ebp*2]
CODE:00405532		      imul    eax, edx
CODE:00405535		      add     ebx, eax
CODE:00405537		      cmp     ebx, 40000000h
CODE:0040553D		      jnb     short @@sat
CODE:0040553F		      sar     ebx, 22
CODE:00405542
CODE:00405542 @@sat_back:			      ;	...
CODE:00405542		      mov     [ecx], bl
CODE:00405544		      add     ecx, [ds:mp3_samples_dst_step]
CODE:0040554A		      add     esi, 2
CODE:0040554D		      sub     edi, 2
CODE:00405550		      add     ebp, 2
CODE:00405553		      test    ebp, 1Fh
CODE:00405559		      jnz     @@samples_lop
CODE:0040555F		      retn
CODE:00405560 ;	---------------------------------------------------------------------------
CODE:00405560
CODE:00405560 @@sat:				      ;	...
CODE:00405560		      sar     ebx, 31
CODE:00405563		      not     ebx
CODE:00405565		      jmp     short @@sat_back
CODE:00405565 ;	---------------------------------------------------------------------------
CODE:00405567		      align 10h
CODE:00405570
CODE:00405570 @@append_copy_to_window:		      ;	...
CODE:00405570		      lea     esi, [mp3_synth_buf+eax*4]
CODE:00405577		      lea     edi, [esi+2048]
CODE:0040557D		      mov     ecx, 18
CODE:00405582		      rep movsd
CODE:00405584		      jmp     @@append_copy_to_window_back
CODE:00405584 endp	      mp3_synth_filter_this_8bit_shift_1_fast
CODE:00405584
CODE:00405584 ;	---------------------------------------------------------------------------
CODE:00405589		      align 10h
CODE:00405590
CODE:00405590 ;	===============	S U B R	O U T I	N E =======================================
CODE:00405590
CODE:00405590
CODE:00405590 proc	      synth_8bit_shift_2_fast near ; ...
CODE:00405590		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 1,2,1
CODE:00405597		      jz      short @@no_rdtsc_supported
CODE:00405599		      rdtsc
CODE:0040559B		      sub     [ds:rdtsc_synth_dct], eax
CODE:004055A1		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:004055A7
CODE:004055A7 @@no_rdtsc_supported:		      ;	...
CODE:004055A7		      mov     esi, offset mp3_sb_samples
CODE:004055AC		      mov     edi, [ds:mp3_samples_dst]
CODE:004055B2		      mov     [ds:mp3_curr_channel], 0
CODE:004055BC
CODE:004055BC @@synth_channel_lop:		      ;	...
CODE:004055BC		      push    esi
CODE:004055BD		      push    edi
CODE:004055BE		      mov     [ds:mp3_curr_syn_dst], edi
CODE:004055C4		      mov     [ds:mp3_curr_frame], 0
CODE:004055CE
CODE:004055CE @@synth_frame_lop:		      ;	...
CODE:004055CE		      push    esi
CODE:004055CF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004055D6		      jz      short @@no_rdtsc_supported@
CODE:004055D8		      rdtsc
CODE:004055DA		      sub     [ds:rdtsc_dct32],	eax
CODE:004055E0		      sbb     [ds:rdtsc_dct32+4], edx
CODE:004055E6
CODE:004055E6 @@no_rdtsc_supported@:		      ;	...
CODE:004055E6		      mov     edx, [ds:mp3_curr_channel]
CODE:004055EC		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:004055F3		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:004055FB		      shl     edx, 10
CODE:004055FE		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00405603		      or      eax, edx
CODE:00405605		      mov     [ds:mp3_curr_syn_index], eax
CODE:0040560A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00405610		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00405617		      call    mp3_dct32_shift_2	; mp3_dct32_shift_&rate_shift
CODE:0040561C		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405623		      jz      short @@no_rdtsc_supported@@
CODE:00405625		      rdtsc
CODE:00405627		      add     [ds:rdtsc_dct32],	eax
CODE:0040562D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00405633
CODE:00405633 @@no_rdtsc_supported@@:		      ;	...
CODE:00405633		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040563A		      jz      short @@@no_rdtsc_supported
CODE:0040563C		      rdtsc
CODE:0040563E		      sub     [ds:rdtsc_synth],	eax
CODE:00405644		      sbb     [ds:rdtsc_synth+4], edx
CODE:0040564A
CODE:0040564A @@@no_rdtsc_supported:		      ;	...
CODE:0040564A		      call    mp3_synth_filter_this_8bit_shift_2_fast ;
CODE:0040564A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:0040564F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405656		      jz      short @@@no_rdtsc_supported@
CODE:00405658		      rdtsc
CODE:0040565A		      add     [ds:rdtsc_synth],	eax
CODE:00405660		      adc     [ds:rdtsc_synth+4], edx
CODE:00405666
CODE:00405666 @@@no_rdtsc_supported@:		      ;	...
CODE:00405666		      pop     esi
CODE:00405667		      mov     eax, [ds:mp3_samples_dst_step]
CODE:0040566C		      shl     eax, 5
CODE:0040566F		      mov     cl, [ds:option_rate_shift]
CODE:00405675		      shr     eax, cl
CODE:00405677		      add     [ds:mp3_curr_syn_dst], eax
CODE:0040567D		      add     esi, 128	      ;	SBLIMIT*4
CODE:00405683		      inc     [ds:mp3_curr_frame]
CODE:00405689		      mov     eax, [ds:mp3_curr_frame]
CODE:0040568E		      cmp     eax, [ds:mp3_nb_frames]
CODE:00405694		      jb      @@synth_frame_lop
CODE:0040569A		      pop     edi
CODE:0040569B		      pop     esi
CODE:0040569C		      add     edi, [ds:mp3_bytes_per_sample]
CODE:004056A2		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:004056A8		      inc     [ds:mp3_curr_channel]
CODE:004056AE		      mov     eax, [ds:mp3_curr_channel]
CODE:004056B3		      cmp     eax, [ds:mp3_output_num_channels]
CODE:004056B9		      jb      @@synth_channel_lop
CODE:004056BF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004056C6		      jz      short @@@no_rdtsc_supported@@
CODE:004056C8		      rdtsc
CODE:004056CA		      add     [ds:rdtsc_synth_dct], eax
CODE:004056D0		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:004056D6
CODE:004056D6 @@@no_rdtsc_supported@@:		      ;	...
CODE:004056D6		      retn
CODE:004056D6 endp	      synth_8bit_shift_2_fast
CODE:004056D6
CODE:004056D6 ;	---------------------------------------------------------------------------
CODE:004056D7		      align 10h
CODE:004056E0
CODE:004056E0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004056E0
CODE:004056E0
CODE:004056E0 proc	      mp3_synth_filter_this_8bit_shift_2_fast near ; ...
CODE:004056E0		      mov     eax, [ds:mp3_curr_syn_index]
CODE:004056E5		      test    eax, 1E0h
CODE:004056EA		      jz      @@append_copy_to_window
CODE:004056F0		      nop
CODE:004056F1
CODE:004056F1 @@append_copy_to_window_back:	      ;	...
CODE:004056F1		      mov     ebp, eax
CODE:004056F3		      and     ebp, 1C0h
CODE:004056F9		      and     eax, 420h
CODE:004056FE		      lea     esi, [eax+10h]
CODE:00405701		      lea     edi, [eax+30h]
CODE:00405704		      neg     ebp
CODE:00405706		      and     ebp, 1C0h
CODE:0040570C		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:00405712
CODE:00405712 @@samples_lop:			      ;	...
CODE:00405712		      mov     ebx, 20200000h
CODE:00405717		      mov     edx, [ds:mp3_synth_buf+esi*4]
CODE:0040571E		      movsx   eax, [word ptr ds:mp3_synth_win+ebp*2]
CODE:00405726		      imul    eax, edx
CODE:00405729		      add     ebx, eax
CODE:0040572B		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4]
CODE:00405732		      movsx   eax, [word ptr ds:(mp3_synth_win+80h)+ebp*2]
CODE:0040573A		      imul    eax, edx
CODE:0040573D		      add     ebx, eax
CODE:0040573F		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00405746		      movsx   eax, [word ptr ds:(mp3_synth_win+100h)+ebp*2]
CODE:0040574E		      imul    eax, edx
CODE:00405751		      add     ebx, eax
CODE:00405753		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:0040575A		      movsx   eax, [word ptr ds:(mp3_synth_win+180h)+ebp*2]
CODE:00405762		      imul    eax, edx
CODE:00405765		      add     ebx, eax
CODE:00405767		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:0040576E		      movsx   eax, [word ptr ds:(mp3_synth_win+200h)+ebp*2]
CODE:00405776		      imul    eax, edx
CODE:00405779		      add     ebx, eax
CODE:0040577B		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:00405782		      movsx   eax, [word ptr ds:(mp3_synth_win+280h)+ebp*2]
CODE:0040578A		      imul    eax, edx
CODE:0040578D		      add     ebx, eax
CODE:0040578F		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:00405796		      movsx   eax, [word ptr ds:(mp3_synth_win+300h)+ebp*2]
CODE:0040579E		      imul    eax, edx
CODE:004057A1		      add     ebx, eax
CODE:004057A3		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:004057AA		      movsx   eax, [word ptr ds:(mp3_synth_win+380h)+ebp*2]
CODE:004057B2		      imul    eax, edx
CODE:004057B5		      add     ebx, eax
CODE:004057B7		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:004057BE		      movsx   eax, [word ptr ds:(mp3_synth_win+40h)+ebp*2]
CODE:004057C6		      imul    eax, edx
CODE:004057C9		      add     ebx, eax
CODE:004057CB		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:004057D2		      movsx   eax, [word ptr ds:(mp3_synth_win+0C0h)+ebp*2]
CODE:004057DA		      imul    eax, edx
CODE:004057DD		      add     ebx, eax
CODE:004057DF		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:004057E6		      movsx   eax, [word ptr ds:(mp3_synth_win+140h)+ebp*2]
CODE:004057EE		      imul    eax, edx
CODE:004057F1		      add     ebx, eax
CODE:004057F3		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:004057FA		      movsx   eax, [word ptr ds:(mp3_synth_win+1C0h)+ebp*2]
CODE:00405802		      imul    eax, edx
CODE:00405805		      add     ebx, eax
CODE:00405807		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:0040580E		      movsx   eax, [word ptr ds:(mp3_synth_win+240h)+ebp*2]
CODE:00405816		      imul    eax, edx
CODE:00405819		      add     ebx, eax
CODE:0040581B		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00405822		      movsx   eax, [word ptr ds:(mp3_synth_win+2C0h)+ebp*2]
CODE:0040582A		      imul    eax, edx
CODE:0040582D		      add     ebx, eax
CODE:0040582F		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:00405836		      movsx   eax, [word ptr ds:(mp3_synth_win+340h)+ebp*2]
CODE:0040583E		      imul    eax, edx
CODE:00405841		      add     ebx, eax
CODE:00405843		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:0040584A		      movsx   eax, [word ptr ds:(mp3_synth_win+3C0h)+ebp*2]
CODE:00405852		      imul    eax, edx
CODE:00405855		      add     ebx, eax
CODE:00405857		      cmp     ebx, 40000000h
CODE:0040585D		      jnb     short @@sat
CODE:0040585F		      sar     ebx, 22
CODE:00405862
CODE:00405862 @@sat_back:			      ;	...
CODE:00405862		      mov     [ecx], bl
CODE:00405864		      add     ecx, [ds:mp3_samples_dst_step]
CODE:0040586A		      add     esi, 4
CODE:0040586D		      sub     edi, 4
CODE:00405870		      add     ebp, 4
CODE:00405873		      test    ebp, 1Fh
CODE:00405879		      jnz     @@samples_lop
CODE:0040587F		      retn
CODE:00405880 ;	---------------------------------------------------------------------------
CODE:00405880
CODE:00405880 @@sat:				      ;	...
CODE:00405880		      sar     ebx, 31
CODE:00405883		      not     ebx
CODE:00405885		      jmp     short @@sat_back
CODE:00405885 ;	---------------------------------------------------------------------------
CODE:00405887		      align 10h
CODE:00405890
CODE:00405890 @@append_copy_to_window:		      ;	...
CODE:00405890		      lea     esi, [mp3_synth_buf+eax*4]
CODE:00405897		      lea     edi, [esi+2048]
CODE:0040589D		      mov     ecx, 18
CODE:004058A2		      rep movsd
CODE:004058A4		      jmp     @@append_copy_to_window_back
CODE:004058A4 endp	      mp3_synth_filter_this_8bit_shift_2_fast
CODE:004058A4
CODE:004058A4 ;	---------------------------------------------------------------------------
CODE:004058A9		      align 10h
CODE:004058B0
CODE:004058B0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004058B0
CODE:004058B0
CODE:004058B0 proc	      synth_16bit_shift_0_slow near ; ...
CODE:004058B0		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004058B7		      jz      short @no_rdtsc_supported
CODE:004058B9		      rdtsc
CODE:004058BB		      sub     [ds:rdtsc_synth_dct], eax
CODE:004058C1		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:004058C7
CODE:004058C7 @no_rdtsc_supported:		      ;	...
CODE:004058C7		      mov     esi, offset mp3_sb_samples
CODE:004058CC		      mov     edi, [ds:mp3_samples_dst]
CODE:004058D2		      mov     [ds:mp3_curr_channel], 0
CODE:004058DC
CODE:004058DC @@synth_channel_lop:		      ;	...
CODE:004058DC		      push    esi
CODE:004058DD		      push    edi
CODE:004058DE		      mov     [ds:mp3_curr_syn_dst], edi
CODE:004058E4		      mov     [ds:mp3_curr_frame], 0
CODE:004058EE
CODE:004058EE @@synth_frame_lop:		      ;	...
CODE:004058EE		      push    esi
CODE:004058EF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004058F6		      jz      short @no_rdtsc_supported@
CODE:004058F8		      rdtsc
CODE:004058FA		      sub     [ds:rdtsc_dct32],	eax
CODE:00405900		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00405906
CODE:00405906 @no_rdtsc_supported@:		      ;	...
CODE:00405906		      mov     edx, [ds:mp3_curr_channel]
CODE:0040590C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00405913		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:0040591B		      shl     edx, 10	      ;	channel*1024
CODE:0040591E		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00405923		      or      eax, edx
CODE:00405925		      mov     [ds:mp3_curr_syn_index], eax
CODE:0040592A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00405930		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00405937		      call    mp3_dct32_shift_0	; mp3_dct32_shift_&rate_shift
CODE:0040593C		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_dct32
CODE:00405943		      jz      short @no_rdtsc_supported@@
CODE:00405945		      rdtsc
CODE:00405947		      add     [ds:rdtsc_dct32],	eax
CODE:0040594D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00405953
CODE:00405953 @no_rdtsc_supported@@:		      ;	...
CODE:00405953		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_synth
CODE:0040595A		      jz      short @@no_rdtsc_supported
CODE:0040595C		      rdtsc
CODE:0040595E		      sub     [ds:rdtsc_synth],	eax
CODE:00405964		      sbb     [ds:rdtsc_synth+4], edx
CODE:0040596A
CODE:0040596A @@no_rdtsc_supported:		      ;	...
CODE:0040596A		      call    mp3_synth_filter_this_16bit_shift_0_slow
CODE:0040596F		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_synth
CODE:00405976		      jz      short @@no_rdtsc_supported@
CODE:00405978		      rdtsc
CODE:0040597A		      add     [ds:rdtsc_synth],	eax
CODE:00405980		      adc     [ds:rdtsc_synth+4], edx
CODE:00405986
CODE:00405986 @@no_rdtsc_supported@:		      ;	...
CODE:00405986		      pop     esi
CODE:00405987		      mov     eax, [ds:mp3_samples_dst_step]
CODE:0040598C		      shl     eax, 5
CODE:0040598F		      mov     cl, [ds:option_rate_shift]
CODE:00405995		      shr     eax, cl
CODE:00405997		      add     [ds:mp3_curr_syn_dst], eax
CODE:0040599D		      add     esi, 128	      ;	SBLIMIT*4
CODE:004059A3		      inc     [ds:mp3_curr_frame]
CODE:004059A9		      mov     eax, [ds:mp3_curr_frame]
CODE:004059AE		      cmp     eax, [ds:mp3_nb_frames]
CODE:004059B4		      jb      @@synth_frame_lop
CODE:004059BA		      pop     edi
CODE:004059BB		      pop     esi
CODE:004059BC		      add     edi, [ds:mp3_bytes_per_sample]
CODE:004059C2		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:004059C8		      inc     [ds:mp3_curr_channel]
CODE:004059CE		      mov     eax, [ds:mp3_curr_channel]
CODE:004059D3		      cmp     eax, [ds:mp3_output_num_channels]
CODE:004059D9		      jb      @@synth_channel_lop
CODE:004059DF		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_synth_dct
CODE:004059E6		      jz      short @@no_rdtsc_supported@@
CODE:004059E8		      rdtsc
CODE:004059EA		      add     [ds:rdtsc_synth_dct], eax
CODE:004059F0		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:004059F6
CODE:004059F6 @@no_rdtsc_supported@@:		      ;	...
CODE:004059F6		      retn
CODE:004059F6 endp	      synth_16bit_shift_0_slow
CODE:004059F6
CODE:004059F6 ;	---------------------------------------------------------------------------
CODE:004059F7		      align 10h
CODE:00405A00
CODE:00405A00 ;	===============	S U B R	O U T I	N E =======================================
CODE:00405A00
CODE:00405A00
CODE:00405A00 proc	      mp3_synth_filter_this_16bit_shift_0_slow near ; ...
CODE:00405A00		      mov     eax, [ds:mp3_curr_syn_index]
CODE:00405A05		      test    eax, 1E0h	      ;	1FFh-1Fh
CODE:00405A0A		      jz      @@append_copy_to_window
CODE:00405A10		      nop
CODE:00405A11
CODE:00405A11 @@append_copy_to_window_back:	      ;	...
CODE:00405A11		      mov     ebp, eax	      ;	mov @@win1,eax
CODE:00405A13		      and     ebp, 1C0h	      ;	and @@win1,1FFh-1Fh-20h
CODE:00405A19		      and     eax, 420h	      ;	and eax,20h+(1 shl 10) ; bit5, and channel
CODE:00405A1E		      lea     esi, [eax+10h]  ;	lea @@syn1,[eax+10h]
CODE:00405A21		      lea     edi, [eax+30h]  ;	lea @@syn2,[eax+30h]
CODE:00405A24		      neg     ebp
CODE:00405A26		      and     ebp, 1C0h	      ;	and @@win1,1FFh-1Fh-20h
CODE:00405A2C		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:00405A32
CODE:00405A32 @@samples_lop:			      ;	...
CODE:00405A32		      mov     ebx, 100010h    ;	mov @@sum,(8000h SHL (@@out_shift))+(1 SHL (@@out_shift-1))
CODE:00405A32					      ;	@@out_shift = 5
CODE:00405A37
CODE:00405A37 @@SUM8_@:				      ;	@@SUM8 macro sum,win,ww,syn
CODE:00405A37		      mov     edx, [ds:mp3_synth_buf+esi*4] ; IRP nn,0,1,2,3,4,5,6,7
CODE:00405A37					      ;	@@SUM8 @@sum,@@win1,0, @@syn1
CODE:00405A3E		      mov     eax, [ds:mp3_synth_win+ebp*4] ; [mp3_synth_buf+syn*4+(nn*64*4)]
CODE:00405A45		      imul    edx	      ;	[mp3_synth_win+win*4+(nn*64*4)+ww*4]
CODE:00405A47		      add     ebx, edx
CODE:00405A49		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4]
CODE:00405A50		      mov     eax, [ds:(mp3_synth_win+100h)+ebp*4]
CODE:00405A57		      imul    edx
CODE:00405A59		      add     ebx, edx	      ;	add sum,edx
CODE:00405A5B		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00405A62		      mov     eax, [ds:(mp3_synth_win+200h)+ebp*4] ; [mp3_synth_win+win*4+(nn*64*4)+ww*4]
CODE:00405A69		      imul    edx	      ;	64bit =	32bit *	32bit
CODE:00405A6B		      add     ebx, edx
CODE:00405A6D		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:00405A74		      mov     eax, [ds:(mp3_synth_win+300h)+ebp*4]
CODE:00405A7B		      imul    edx
CODE:00405A7D		      add     ebx, edx
CODE:00405A7F		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:00405A86		      mov     eax, [ds:(mp3_synth_win+400h)+ebp*4]
CODE:00405A8D		      imul    edx
CODE:00405A8F		      add     ebx, edx
CODE:00405A91		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:00405A98		      mov     eax, [ds:(mp3_synth_win+500h)+ebp*4]
CODE:00405A9F		      imul    edx
CODE:00405AA1		      add     ebx, edx
CODE:00405AA3		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:00405AAA		      mov     eax, [ds:(mp3_synth_win+600h)+ebp*4]
CODE:00405AB1		      imul    edx
CODE:00405AB3		      add     ebx, edx
CODE:00405AB5		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:00405ABC		      mov     eax, [ds:(mp3_synth_win+700h)+ebp*4]
CODE:00405AC3		      imul    edx
CODE:00405AC5		      add     ebx, edx
CODE:00405AC7
CODE:00405AC7 @@skippp:				      ;	@@SUM8 macro sum,win,ww,syn
CODE:00405AC7		      mov     edx, [ds:mp3_synth_buf+edi*4] ; @@SUM8 @@sum,@@win1,32,@@syn2
CODE:00405AC7					      ;	[mp3_synth_buf+syn*4+(nn*64*4)]
CODE:00405ACE		      mov     eax, [ds:(mp3_synth_win+80h)+ebp*4] ; [mp3_synth_win+win*4+(nn*64*4)+ww*4]
CODE:00405AD5		      imul    edx
CODE:00405AD7		      add     ebx, edx
CODE:00405AD9		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00405AE0		      mov     eax, [ds:(mp3_synth_win+180h)+ebp*4]
CODE:00405AE7		      imul    edx
CODE:00405AE9		      add     ebx, edx
CODE:00405AEB		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:00405AF2		      mov     eax, [ds:(mp3_synth_win+280h)+ebp*4]
CODE:00405AF9		      imul    edx
CODE:00405AFB		      add     ebx, edx
CODE:00405AFD		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:00405B04		      mov     eax, [ds:(mp3_synth_win+380h)+ebp*4]
CODE:00405B0B		      imul    edx
CODE:00405B0D		      add     ebx, edx
CODE:00405B0F		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:00405B16		      mov     eax, [ds:(mp3_synth_win+480h)+ebp*4]
CODE:00405B1D		      imul    edx
CODE:00405B1F		      add     ebx, edx
CODE:00405B21		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00405B28		      mov     eax, [ds:(mp3_synth_win+580h)+ebp*4]
CODE:00405B2F		      imul    edx
CODE:00405B31		      add     ebx, edx
CODE:00405B33		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:00405B3A		      mov     eax, [ds:(mp3_synth_win+680h)+ebp*4]
CODE:00405B41		      imul    edx
CODE:00405B43		      add     ebx, edx
CODE:00405B45		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:00405B4C		      mov     eax, [ds:(mp3_synth_win+780h)+ebp*4]
CODE:00405B53		      imul    edx
CODE:00405B55		      add     ebx, edx
CODE:00405B57		      cmp     ebx, 200000h    ;	cmp @@sum,10000h SHL (@@out_shift)
CODE:00405B5D		      jnb     short @@sat
CODE:00405B5F		      sar     ebx, 5	      ;	sar @@sum,(@@out_shift)
CODE:00405B62		      sub     ebx, 8000h      ;	make 16bit signed
CODE:00405B68
CODE:00405B68 @@sat_back:			      ;	...
CODE:00405B68		      mov     [ecx], bx
CODE:00405B6B		      add     ecx, [ds:mp3_samples_dst_step]
CODE:00405B71		      inc     esi	      ;	inc @@syn1
CODE:00405B72		      dec     edi	      ;	dec @@syn2
CODE:00405B73		      inc     ebp	      ;	inc @@win1
CODE:00405B74		      test    ebp, 1Fh	      ;	test @@win1,1Fh
CODE:00405B7A		      jnz     @@samples_lop
CODE:00405B80		      retn
CODE:00405B80 ;	---------------------------------------------------------------------------
CODE:00405B81		      align 10h
CODE:00405B90
CODE:00405B90 @@sat:				      ;	...
CODE:00405B90		      sar     ebx, 31	      ;	FFFFFFFFh,00000000h
CODE:00405B93		      xor     ebx, 7FFFh      ;	FFFF8000h,00007FFFh (signed 16bit)
CODE:00405B99		      jmp     short @@sat_back
CODE:00405B99 ;	---------------------------------------------------------------------------
CODE:00405B9B		      align 10h
CODE:00405BA0
CODE:00405BA0 @@append_copy_to_window:		      ;	...
CODE:00405BA0		      lea     esi, [mp3_synth_buf+eax*4]
CODE:00405BA7		      lea     edi, [esi+2048] ;	[esi+512*4]
CODE:00405BAD		      mov     ecx, 18	      ;	(12h*4)/4
CODE:00405BB2		      rep movsd
CODE:00405BB4		      jmp     @@append_copy_to_window_back
CODE:00405BB4 endp	      mp3_synth_filter_this_16bit_shift_0_slow
CODE:00405BB4
CODE:00405BB4 ;	---------------------------------------------------------------------------
CODE:00405BB9		      align 10h
CODE:00405BC0
CODE:00405BC0 ;	===============	S U B R	O U T I	N E =======================================
CODE:00405BC0
CODE:00405BC0
CODE:00405BC0 proc	      synth_16bit_shift_1_slow near ; ...
CODE:00405BC0		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 0,1,0
CODE:00405BC7		      jz      short @@no_rdtsc_supported
CODE:00405BC9		      rdtsc
CODE:00405BCB		      sub     [ds:rdtsc_synth_dct], eax
CODE:00405BD1		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:00405BD7
CODE:00405BD7 @@no_rdtsc_supported:		      ;	...
CODE:00405BD7		      mov     esi, offset mp3_sb_samples
CODE:00405BDC		      mov     edi, [ds:mp3_samples_dst]
CODE:00405BE2		      mov     [ds:mp3_curr_channel], 0
CODE:00405BEC
CODE:00405BEC @@synth_channel_lop:		      ;	...
CODE:00405BEC		      push    esi
CODE:00405BED		      push    edi
CODE:00405BEE		      mov     [ds:mp3_curr_syn_dst], edi
CODE:00405BF4		      mov     [ds:mp3_curr_frame], 0
CODE:00405BFE
CODE:00405BFE @@synth_frame_lop:		      ;	...
CODE:00405BFE		      push    esi
CODE:00405BFF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405C06		      jz      short @@no_rdtsc_supported@
CODE:00405C08		      rdtsc
CODE:00405C0A		      sub     [ds:rdtsc_dct32],	eax
CODE:00405C10		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00405C16
CODE:00405C16 @@no_rdtsc_supported@:		      ;	...
CODE:00405C16		      mov     edx, [ds:mp3_curr_channel]
CODE:00405C1C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00405C23		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:00405C2B		      shl     edx, 10	      ;	channel*1024
CODE:00405C2E		      and     eax, 1E0h	      ;	1FFh-1Fh ; index(0..511), align	32
CODE:00405C33		      or      eax, edx
CODE:00405C35		      mov     [ds:mp3_curr_syn_index], eax
CODE:00405C3A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00405C40		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00405C47		      call    mp3_dct32_shift_1	; call mp3_dct32_shift_&rate_shift
CODE:00405C4C		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405C53		      jz      short @@no_rdtsc_supported@@
CODE:00405C55		      rdtsc
CODE:00405C57		      add     [ds:rdtsc_dct32],	eax
CODE:00405C5D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00405C63
CODE:00405C63 @@no_rdtsc_supported@@:		      ;	...
CODE:00405C63		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405C6A		      jz      short @@@no_rdtsc_supported
CODE:00405C6C		      rdtsc
CODE:00405C6E		      sub     [ds:rdtsc_synth],	eax
CODE:00405C74		      sbb     [ds:rdtsc_synth+4], edx
CODE:00405C7A
CODE:00405C7A @@@no_rdtsc_supported:		      ;	...
CODE:00405C7A		      call    mp3_synth_filter_this_16bit_shift_1_slow ;
CODE:00405C7A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:00405C7F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405C86		      jz      short @@@no_rdtsc_supported@
CODE:00405C88		      rdtsc
CODE:00405C8A		      add     [ds:rdtsc_synth],	eax
CODE:00405C90		      adc     [ds:rdtsc_synth+4], edx
CODE:00405C96
CODE:00405C96 @@@no_rdtsc_supported@:		      ;	...
CODE:00405C96		      pop     esi
CODE:00405C97		      mov     eax, [ds:mp3_samples_dst_step]
CODE:00405C9C		      shl     eax, 5
CODE:00405C9F		      mov     cl, [ds:option_rate_shift] ; IF with_rate_shift
CODE:00405CA5		      shr     eax, cl
CODE:00405CA7		      add     [ds:mp3_curr_syn_dst], eax
CODE:00405CAD		      add     esi, 128	      ;	SBLIMIT*4  ; src+32*4
CODE:00405CB3		      inc     [ds:mp3_curr_frame]
CODE:00405CB9		      mov     eax, [ds:mp3_curr_frame]
CODE:00405CBE		      cmp     eax, [ds:mp3_nb_frames]
CODE:00405CC4		      jb      @@synth_frame_lop
CODE:00405CCA		      pop     edi
CODE:00405CCB		      pop     esi
CODE:00405CCC		      add     edi, [ds:mp3_bytes_per_sample]
CODE:00405CD2		      add     esi, 4608	      ;	36*SBLIMIT*4 ; src
CODE:00405CD8		      inc     [ds:mp3_curr_channel]
CODE:00405CDE		      mov     eax, [ds:mp3_curr_channel]
CODE:00405CE3		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00405CE9		      jb      @@synth_channel_lop
CODE:00405CEF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405CF6		      jz      short @@@no_rdtsc_supported@@
CODE:00405CF8		      rdtsc
CODE:00405CFA		      add     [ds:rdtsc_synth_dct], eax
CODE:00405D00		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00405D06
CODE:00405D06 @@@no_rdtsc_supported@@:		      ;	...
CODE:00405D06		      retn
CODE:00405D06 endp	      synth_16bit_shift_1_slow
CODE:00405D06
CODE:00405D06 ;	---------------------------------------------------------------------------
CODE:00405D07		      align 10h
CODE:00405D10
CODE:00405D10 ;	===============	S U B R	O U T I	N E =======================================
CODE:00405D10
CODE:00405D10
CODE:00405D10 proc	      mp3_synth_filter_this_16bit_shift_1_slow near ; ...
CODE:00405D10		      mov     eax, [ds:mp3_curr_syn_index]
CODE:00405D15		      test    eax, 1E0h
CODE:00405D1A		      jz      @@append_copy_to_window
CODE:00405D20		      nop
CODE:00405D21
CODE:00405D21 @@append_copy_to_window_back:	      ;	...
CODE:00405D21		      mov     ebp, eax
CODE:00405D23		      and     ebp, 1C0h
CODE:00405D29		      and     eax, 420h
CODE:00405D2E		      lea     esi, [eax+10h]
CODE:00405D31		      lea     edi, [eax+30h]
CODE:00405D34		      neg     ebp
CODE:00405D36		      and     ebp, 1C0h
CODE:00405D3C		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:00405D42
CODE:00405D42 @@samples_lop:			      ;	...
CODE:00405D42		      mov     ebx, 100010h
CODE:00405D47		      mov     edx, [ds:mp3_synth_buf+esi*4]
CODE:00405D4E		      mov     eax, [ds:mp3_synth_win+ebp*4]
CODE:00405D55		      imul    edx
CODE:00405D57		      add     ebx, edx
CODE:00405D59		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4]
CODE:00405D60		      mov     eax, [ds:(mp3_synth_win+100h)+ebp*4]
CODE:00405D67		      imul    edx
CODE:00405D69		      add     ebx, edx
CODE:00405D6B		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00405D72		      mov     eax, [ds:(mp3_synth_win+200h)+ebp*4]
CODE:00405D79		      imul    edx
CODE:00405D7B		      add     ebx, edx
CODE:00405D7D		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:00405D84		      mov     eax, [ds:(mp3_synth_win+300h)+ebp*4]
CODE:00405D8B		      imul    edx
CODE:00405D8D		      add     ebx, edx
CODE:00405D8F		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:00405D96		      mov     eax, [ds:(mp3_synth_win+400h)+ebp*4]
CODE:00405D9D		      imul    edx
CODE:00405D9F		      add     ebx, edx
CODE:00405DA1		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:00405DA8		      mov     eax, [ds:(mp3_synth_win+500h)+ebp*4]
CODE:00405DAF		      imul    edx
CODE:00405DB1		      add     ebx, edx
CODE:00405DB3		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:00405DBA		      mov     eax, [ds:(mp3_synth_win+600h)+ebp*4]
CODE:00405DC1		      imul    edx
CODE:00405DC3		      add     ebx, edx
CODE:00405DC5		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:00405DCC		      mov     eax, [ds:(mp3_synth_win+700h)+ebp*4]
CODE:00405DD3		      imul    edx
CODE:00405DD5		      add     ebx, edx
CODE:00405DD7		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:00405DDE		      mov     eax, [ds:(mp3_synth_win+80h)+ebp*4]
CODE:00405DE5		      imul    edx
CODE:00405DE7		      add     ebx, edx
CODE:00405DE9		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00405DF0		      mov     eax, [ds:(mp3_synth_win+180h)+ebp*4]
CODE:00405DF7		      imul    edx
CODE:00405DF9		      add     ebx, edx
CODE:00405DFB		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:00405E02		      mov     eax, [ds:(mp3_synth_win+280h)+ebp*4]
CODE:00405E09		      imul    edx
CODE:00405E0B		      add     ebx, edx
CODE:00405E0D		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:00405E14		      mov     eax, [ds:(mp3_synth_win+380h)+ebp*4]
CODE:00405E1B		      imul    edx
CODE:00405E1D		      add     ebx, edx
CODE:00405E1F		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:00405E26		      mov     eax, [ds:(mp3_synth_win+480h)+ebp*4]
CODE:00405E2D		      imul    edx
CODE:00405E2F		      add     ebx, edx
CODE:00405E31		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00405E38		      mov     eax, [ds:(mp3_synth_win+580h)+ebp*4]
CODE:00405E3F		      imul    edx
CODE:00405E41		      add     ebx, edx
CODE:00405E43		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:00405E4A		      mov     eax, [ds:(mp3_synth_win+680h)+ebp*4]
CODE:00405E51		      imul    edx
CODE:00405E53		      add     ebx, edx
CODE:00405E55		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:00405E5C		      mov     eax, [ds:(mp3_synth_win+780h)+ebp*4]
CODE:00405E63		      imul    edx
CODE:00405E65		      add     ebx, edx
CODE:00405E67		      cmp     ebx, 200000h
CODE:00405E6D		      jnb     short @@sat
CODE:00405E6F		      sar     ebx, 5
CODE:00405E72		      sub     ebx, 8000h
CODE:00405E78
CODE:00405E78 @@sat_back:			      ;	...
CODE:00405E78		      mov     [ecx], bx
CODE:00405E7B		      add     ecx, [ds:mp3_samples_dst_step]
CODE:00405E81		      add     esi, 2
CODE:00405E84		      sub     edi, 2
CODE:00405E87		      add     ebp, 2
CODE:00405E8A		      test    ebp, 1Fh
CODE:00405E90		      jnz     @@samples_lop
CODE:00405E96		      retn
CODE:00405E96 ;	---------------------------------------------------------------------------
CODE:00405E97		      align 10h
CODE:00405EA0
CODE:00405EA0 @@sat:				      ;	...
CODE:00405EA0		      sar     ebx, 31
CODE:00405EA3		      xor     ebx, 7FFFh
CODE:00405EA9		      jmp     short @@sat_back
CODE:00405EA9 ;	---------------------------------------------------------------------------
CODE:00405EAB		      align 10h
CODE:00405EB0
CODE:00405EB0 @@append_copy_to_window:		      ;	...
CODE:00405EB0		      lea     esi, [mp3_synth_buf+eax*4]
CODE:00405EB7		      lea     edi, [esi+2048]
CODE:00405EBD		      mov     ecx, 18
CODE:00405EC2		      rep movsd
CODE:00405EC4		      jmp     @@append_copy_to_window_back
CODE:00405EC4 endp	      mp3_synth_filter_this_16bit_shift_1_slow
CODE:00405EC4
CODE:00405EC4 ;	---------------------------------------------------------------------------
CODE:00405EC9		      align 10h
CODE:00405ED0
CODE:00405ED0 ;	===============	S U B R	O U T I	N E =======================================
CODE:00405ED0
CODE:00405ED0
CODE:00405ED0 proc	      synth_16bit_shift_2_slow near ; ...
CODE:00405ED0		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 0,2,0
CODE:00405ED7		      jz      short @@no_rdtsc_supported
CODE:00405ED9		      rdtsc
CODE:00405EDB		      sub     [ds:rdtsc_synth_dct], eax
CODE:00405EE1		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:00405EE7
CODE:00405EE7 @@no_rdtsc_supported:		      ;	...
CODE:00405EE7		      mov     esi, offset mp3_sb_samples
CODE:00405EEC		      mov     edi, [ds:mp3_samples_dst]
CODE:00405EF2		      mov     [ds:mp3_curr_channel], 0
CODE:00405EFC
CODE:00405EFC @@synth_channel_lop:		      ;	...
CODE:00405EFC		      push    esi
CODE:00405EFD		      push    edi
CODE:00405EFE		      mov     [ds:mp3_curr_syn_dst], edi
CODE:00405F04		      mov     [ds:mp3_curr_frame], 0
CODE:00405F0E
CODE:00405F0E @@synth_frame_lop:		      ;	...
CODE:00405F0E		      push    esi
CODE:00405F0F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405F16		      jz      short @@no_rdtsc_supported@
CODE:00405F18		      rdtsc
CODE:00405F1A		      sub     [ds:rdtsc_dct32],	eax
CODE:00405F20		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00405F26
CODE:00405F26 @@no_rdtsc_supported@:		      ;	...
CODE:00405F26		      mov     edx, [ds:mp3_curr_channel]
CODE:00405F2C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00405F33		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:00405F3B		      shl     edx, 10
CODE:00405F3E		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00405F43		      or      eax, edx
CODE:00405F45		      mov     [ds:mp3_curr_syn_index], eax
CODE:00405F4A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00405F50		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00405F57		      call    mp3_dct32_shift_2	; call mp3_dct32_shift_&rate_shift
CODE:00405F5C		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405F63		      jz      short @@no_rdtsc_supported@@
CODE:00405F65		      rdtsc
CODE:00405F67		      add     [ds:rdtsc_dct32],	eax
CODE:00405F6D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00405F73
CODE:00405F73 @@no_rdtsc_supported@@:		      ;	...
CODE:00405F73		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405F7A		      jz      short @@@no_rdtsc_supported
CODE:00405F7C		      rdtsc
CODE:00405F7E		      sub     [ds:rdtsc_synth],	eax
CODE:00405F84		      sbb     [ds:rdtsc_synth+4], edx
CODE:00405F8A
CODE:00405F8A @@@no_rdtsc_supported:		      ;	...
CODE:00405F8A		      call    mp3_synth_filter_this_16bit_shift_2_slow ;
CODE:00405F8A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:00405F8F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00405F96		      jz      short @@@no_rdtsc_supported@
CODE:00405F98		      rdtsc
CODE:00405F9A		      add     [ds:rdtsc_synth],	eax
CODE:00405FA0		      adc     [ds:rdtsc_synth+4], edx
CODE:00405FA6
CODE:00405FA6 @@@no_rdtsc_supported@:		      ;	...
CODE:00405FA6		      pop     esi
CODE:00405FA7		      mov     eax, [ds:mp3_samples_dst_step]
CODE:00405FAC		      shl     eax, 5
CODE:00405FAF		      mov     cl, [ds:option_rate_shift]
CODE:00405FB5		      shr     eax, cl
CODE:00405FB7		      add     [ds:mp3_curr_syn_dst], eax
CODE:00405FBD		      add     esi, 128	      ;	SBLIMIT*4
CODE:00405FC3		      inc     [ds:mp3_curr_frame]
CODE:00405FC9		      mov     eax, [ds:mp3_curr_frame]
CODE:00405FCE		      cmp     eax, [ds:mp3_nb_frames]
CODE:00405FD4		      jb      @@synth_frame_lop
CODE:00405FDA		      pop     edi
CODE:00405FDB		      pop     esi
CODE:00405FDC		      add     edi, [ds:mp3_bytes_per_sample]
CODE:00405FE2		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:00405FE8		      inc     [ds:mp3_curr_channel]
CODE:00405FEE		      mov     eax, [ds:mp3_curr_channel]
CODE:00405FF3		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00405FF9		      jb      @@synth_channel_lop
CODE:00405FFF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00406006		      jz      short @@@no_rdtsc_supported@@
CODE:00406008		      rdtsc
CODE:0040600A		      add     [ds:rdtsc_synth_dct], eax
CODE:00406010		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00406016
CODE:00406016 @@@no_rdtsc_supported@@:		      ;	...
CODE:00406016		      retn
CODE:00406016 endp	      synth_16bit_shift_2_slow
CODE:00406016
CODE:00406016 ;	---------------------------------------------------------------------------
CODE:00406017		      align 10h
CODE:00406020
CODE:00406020 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406020
CODE:00406020
CODE:00406020 proc	      mp3_synth_filter_this_16bit_shift_2_slow near ; ...
CODE:00406020		      mov     eax, [ds:mp3_curr_syn_index]
CODE:00406025		      test    eax, 1E0h
CODE:0040602A		      jz      @@append_copy_to_window
CODE:00406030		      nop
CODE:00406031
CODE:00406031 @@append_copy_to_window_back:	      ;	...
CODE:00406031		      mov     ebp, eax
CODE:00406033		      and     ebp, 1C0h
CODE:00406039		      and     eax, 420h
CODE:0040603E		      lea     esi, [eax+10h]
CODE:00406041		      lea     edi, [eax+30h]
CODE:00406044		      neg     ebp
CODE:00406046		      and     ebp, 1C0h
CODE:0040604C		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:00406052
CODE:00406052 @@samples_lop:			      ;	...
CODE:00406052		      mov     ebx, 100010h
CODE:00406057		      mov     edx, [ds:mp3_synth_buf+esi*4]
CODE:0040605E		      mov     eax, [ds:mp3_synth_win+ebp*4]
CODE:00406065		      imul    edx
CODE:00406067		      add     ebx, edx
CODE:00406069		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4]
CODE:00406070		      mov     eax, [ds:(mp3_synth_win+100h)+ebp*4]
CODE:00406077		      imul    edx
CODE:00406079		      add     ebx, edx
CODE:0040607B		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00406082		      mov     eax, [ds:(mp3_synth_win+200h)+ebp*4]
CODE:00406089		      imul    edx
CODE:0040608B		      add     ebx, edx
CODE:0040608D		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:00406094		      mov     eax, [ds:(mp3_synth_win+300h)+ebp*4]
CODE:0040609B		      imul    edx
CODE:0040609D		      add     ebx, edx
CODE:0040609F		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:004060A6		      mov     eax, [ds:(mp3_synth_win+400h)+ebp*4]
CODE:004060AD		      imul    edx
CODE:004060AF		      add     ebx, edx
CODE:004060B1		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:004060B8		      mov     eax, [ds:(mp3_synth_win+500h)+ebp*4]
CODE:004060BF		      imul    edx
CODE:004060C1		      add     ebx, edx
CODE:004060C3		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:004060CA		      mov     eax, [ds:(mp3_synth_win+600h)+ebp*4]
CODE:004060D1		      imul    edx
CODE:004060D3		      add     ebx, edx
CODE:004060D5		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:004060DC		      mov     eax, [ds:(mp3_synth_win+700h)+ebp*4]
CODE:004060E3		      imul    edx
CODE:004060E5		      add     ebx, edx
CODE:004060E7		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:004060EE		      mov     eax, [ds:(mp3_synth_win+80h)+ebp*4]
CODE:004060F5		      imul    edx
CODE:004060F7		      add     ebx, edx
CODE:004060F9		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00406100		      mov     eax, [ds:(mp3_synth_win+180h)+ebp*4]
CODE:00406107		      imul    edx
CODE:00406109		      add     ebx, edx
CODE:0040610B		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:00406112		      mov     eax, [ds:(mp3_synth_win+280h)+ebp*4]
CODE:00406119		      imul    edx
CODE:0040611B		      add     ebx, edx
CODE:0040611D		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:00406124		      mov     eax, [ds:(mp3_synth_win+380h)+ebp*4]
CODE:0040612B		      imul    edx
CODE:0040612D		      add     ebx, edx
CODE:0040612F		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:00406136		      mov     eax, [ds:(mp3_synth_win+480h)+ebp*4]
CODE:0040613D		      imul    edx
CODE:0040613F		      add     ebx, edx
CODE:00406141		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00406148		      mov     eax, [ds:(mp3_synth_win+580h)+ebp*4]
CODE:0040614F		      imul    edx
CODE:00406151		      add     ebx, edx
CODE:00406153		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:0040615A		      mov     eax, [ds:(mp3_synth_win+680h)+ebp*4]
CODE:00406161		      imul    edx
CODE:00406163		      add     ebx, edx
CODE:00406165		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:0040616C		      mov     eax, [ds:(mp3_synth_win+780h)+ebp*4]
CODE:00406173		      imul    edx
CODE:00406175		      add     ebx, edx
CODE:00406177		      cmp     ebx, 200000h
CODE:0040617D		      jnb     short @@sat
CODE:0040617F		      sar     ebx, 5
CODE:00406182		      sub     ebx, 8000h
CODE:00406188
CODE:00406188 @@sat_back:			      ;	...
CODE:00406188		      mov     [ecx], bx
CODE:0040618B		      add     ecx, [ds:mp3_samples_dst_step]
CODE:00406191		      add     esi, 4
CODE:00406194		      sub     edi, 4
CODE:00406197		      add     ebp, 4
CODE:0040619A		      test    ebp, 1Fh
CODE:004061A0		      jnz     @@samples_lop
CODE:004061A6		      retn
CODE:004061A6 ;	---------------------------------------------------------------------------
CODE:004061A7		      align 10h
CODE:004061B0
CODE:004061B0 @@sat:				      ;	...
CODE:004061B0		      sar     ebx, 31
CODE:004061B3		      xor     ebx, 7FFFh
CODE:004061B9		      jmp     short @@sat_back
CODE:004061B9 ;	---------------------------------------------------------------------------
CODE:004061BB		      align 10h
CODE:004061C0
CODE:004061C0 @@append_copy_to_window:		      ;	...
CODE:004061C0		      lea     esi, [mp3_synth_buf+eax*4]
CODE:004061C7		      lea     edi, [esi+2048]
CODE:004061CD		      mov     ecx, 18
CODE:004061D2		      rep movsd
CODE:004061D4		      jmp     @@append_copy_to_window_back
CODE:004061D4 endp	      mp3_synth_filter_this_16bit_shift_2_slow
CODE:004061D4
CODE:004061D4 ;	---------------------------------------------------------------------------
CODE:004061D9		      align 10h
CODE:004061E0
CODE:004061E0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004061E0
CODE:004061E0
CODE:004061E0 proc	      synth_8bit_shift_0_slow near ; ...
CODE:004061E0		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 1,0,0
CODE:004061E7		      jz      short @@no_rdtsc_supported
CODE:004061E9		      rdtsc
CODE:004061EB		      sub     [ds:rdtsc_synth_dct], eax
CODE:004061F1		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:004061F7
CODE:004061F7 @@no_rdtsc_supported:		      ;	...
CODE:004061F7		      mov     esi, offset mp3_sb_samples
CODE:004061FC		      mov     edi, [ds:mp3_samples_dst]
CODE:00406202		      mov     [ds:mp3_curr_channel], 0
CODE:0040620C
CODE:0040620C @@synth_channel_lop:		      ;	...
CODE:0040620C		      push    esi
CODE:0040620D		      push    edi
CODE:0040620E		      mov     [ds:mp3_curr_syn_dst], edi
CODE:00406214		      mov     [ds:mp3_curr_frame], 0
CODE:0040621E
CODE:0040621E @@synth_frame_lop:		      ;	...
CODE:0040621E		      push    esi
CODE:0040621F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00406226		      jz      short @@no_rdtsc_supported@
CODE:00406228		      rdtsc
CODE:0040622A		      sub     [ds:rdtsc_dct32],	eax
CODE:00406230		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00406236
CODE:00406236 @@no_rdtsc_supported@:		      ;	...
CODE:00406236		      mov     edx, [ds:mp3_curr_channel]
CODE:0040623C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00406243		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:0040624B		      shl     edx, 10
CODE:0040624E		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00406253		      or      eax, edx
CODE:00406255		      mov     [ds:mp3_curr_syn_index], eax
CODE:0040625A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00406260		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00406267		      call    mp3_dct32_shift_0
CODE:0040626C		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00406273		      jz      short @@no_rdtsc_supported@@
CODE:00406275		      rdtsc
CODE:00406277		      add     [ds:rdtsc_dct32],	eax
CODE:0040627D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00406283
CODE:00406283 @@no_rdtsc_supported@@:		      ;	...
CODE:00406283		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040628A		      jz      short @@@no_rdtsc_supported
CODE:0040628C		      rdtsc
CODE:0040628E		      sub     [ds:rdtsc_synth],	eax
CODE:00406294		      sbb     [ds:rdtsc_synth+4], edx
CODE:0040629A
CODE:0040629A @@@no_rdtsc_supported:		      ;	...
CODE:0040629A		      call    mp3_synth_filter_this_8bit_shift_0_slow ;
CODE:0040629A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:0040629F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004062A6		      jz      short @@@no_rdtsc_supported@
CODE:004062A8		      rdtsc
CODE:004062AA		      add     [ds:rdtsc_synth],	eax
CODE:004062B0		      adc     [ds:rdtsc_synth+4], edx
CODE:004062B6
CODE:004062B6 @@@no_rdtsc_supported@:		      ;	...
CODE:004062B6		      pop     esi
CODE:004062B7		      mov     eax, [ds:mp3_samples_dst_step]
CODE:004062BC		      shl     eax, 5
CODE:004062BF		      mov     cl, [ds:option_rate_shift]
CODE:004062C5		      shr     eax, cl
CODE:004062C7		      add     [ds:mp3_curr_syn_dst], eax
CODE:004062CD		      add     esi, 128	      ;	SBLIMIT*4
CODE:004062D3		      inc     [ds:mp3_curr_frame]
CODE:004062D9		      mov     eax, [ds:mp3_curr_frame]
CODE:004062DE		      cmp     eax, [ds:mp3_nb_frames]
CODE:004062E4		      jb      @@synth_frame_lop
CODE:004062EA		      pop     edi
CODE:004062EB		      pop     esi
CODE:004062EC		      add     edi, [ds:mp3_bytes_per_sample]
CODE:004062F2		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:004062F8		      inc     [ds:mp3_curr_channel]
CODE:004062FE		      mov     eax, [ds:mp3_curr_channel]
CODE:00406303		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00406309		      jb      @@synth_channel_lop
CODE:0040630F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00406316		      jz      short @@@no_rdtsc_supported@@
CODE:00406318		      rdtsc
CODE:0040631A		      add     [ds:rdtsc_synth_dct], eax
CODE:00406320		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00406326
CODE:00406326 @@@no_rdtsc_supported@@:		      ;	...
CODE:00406326		      retn
CODE:00406326 endp	      synth_8bit_shift_0_slow
CODE:00406326
CODE:00406326 ;	---------------------------------------------------------------------------
CODE:00406327		      align 10h
CODE:00406330
CODE:00406330 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406330
CODE:00406330
CODE:00406330 proc	      mp3_synth_filter_this_8bit_shift_0_slow near ; ...
CODE:00406330		      mov     eax, [ds:mp3_curr_syn_index]
CODE:00406335		      test    eax, 1E0h
CODE:0040633A		      jz      @@append_copy_to_window
CODE:00406340		      nop
CODE:00406341
CODE:00406341 @@append_copy_to_window_back:	      ;	...
CODE:00406341		      mov     ebp, eax
CODE:00406343		      and     ebp, 1C0h
CODE:00406349		      and     eax, 420h
CODE:0040634E		      lea     esi, [eax+10h]
CODE:00406351		      lea     edi, [eax+30h]
CODE:00406354		      neg     ebp
CODE:00406356		      and     ebp, 1C0h
CODE:0040635C		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:00406362
CODE:00406362 @@samples_lop:			      ;	...
CODE:00406362		      mov     ebx, 101000h
CODE:00406367		      mov     edx, [ds:mp3_synth_buf+esi*4]
CODE:0040636E		      mov     eax, [ds:mp3_synth_win+ebp*4]
CODE:00406375		      imul    edx
CODE:00406377		      add     ebx, edx
CODE:00406379		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4]
CODE:00406380		      mov     eax, [ds:(mp3_synth_win+100h)+ebp*4]
CODE:00406387		      imul    edx
CODE:00406389		      add     ebx, edx
CODE:0040638B		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00406392		      mov     eax, [ds:(mp3_synth_win+200h)+ebp*4]
CODE:00406399		      imul    edx
CODE:0040639B		      add     ebx, edx
CODE:0040639D		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:004063A4		      mov     eax, [ds:(mp3_synth_win+300h)+ebp*4]
CODE:004063AB		      imul    edx
CODE:004063AD		      add     ebx, edx
CODE:004063AF		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:004063B6		      mov     eax, [ds:(mp3_synth_win+400h)+ebp*4]
CODE:004063BD		      imul    edx
CODE:004063BF		      add     ebx, edx
CODE:004063C1		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:004063C8		      mov     eax, [ds:(mp3_synth_win+500h)+ebp*4]
CODE:004063CF		      imul    edx
CODE:004063D1		      add     ebx, edx
CODE:004063D3		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:004063DA		      mov     eax, [ds:(mp3_synth_win+600h)+ebp*4]
CODE:004063E1		      imul    edx
CODE:004063E3		      add     ebx, edx
CODE:004063E5		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:004063EC		      mov     eax, [ds:(mp3_synth_win+700h)+ebp*4]
CODE:004063F3		      imul    edx
CODE:004063F5		      add     ebx, edx
CODE:004063F7		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:004063FE		      mov     eax, [ds:(mp3_synth_win+80h)+ebp*4]
CODE:00406405		      imul    edx
CODE:00406407		      add     ebx, edx
CODE:00406409		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00406410		      mov     eax, [ds:(mp3_synth_win+180h)+ebp*4]
CODE:00406417		      imul    edx
CODE:00406419		      add     ebx, edx
CODE:0040641B		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:00406422		      mov     eax, [ds:(mp3_synth_win+280h)+ebp*4]
CODE:00406429		      imul    edx
CODE:0040642B		      add     ebx, edx
CODE:0040642D		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:00406434		      mov     eax, [ds:(mp3_synth_win+380h)+ebp*4]
CODE:0040643B		      imul    edx
CODE:0040643D		      add     ebx, edx
CODE:0040643F		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:00406446		      mov     eax, [ds:(mp3_synth_win+480h)+ebp*4]
CODE:0040644D		      imul    edx
CODE:0040644F		      add     ebx, edx
CODE:00406451		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00406458		      mov     eax, [ds:(mp3_synth_win+580h)+ebp*4]
CODE:0040645F		      imul    edx
CODE:00406461		      add     ebx, edx
CODE:00406463		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:0040646A		      mov     eax, [ds:(mp3_synth_win+680h)+ebp*4]
CODE:00406471		      imul    edx
CODE:00406473		      add     ebx, edx
CODE:00406475		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:0040647C		      mov     eax, [ds:(mp3_synth_win+780h)+ebp*4]
CODE:00406483		      imul    edx
CODE:00406485		      add     ebx, edx
CODE:00406487		      cmp     ebx, 200000h
CODE:0040648D		      jnb     short @@sat
CODE:0040648F		      sar     ebx, 13
CODE:00406492
CODE:00406492 @@sat_back:			      ;	...
CODE:00406492		      mov     [ecx], bl
CODE:00406494		      add     ecx, [ds:mp3_samples_dst_step]
CODE:0040649A		      inc     esi
CODE:0040649B		      dec     edi
CODE:0040649C		      inc     ebp
CODE:0040649D		      test    ebp, 1Fh
CODE:004064A3		      jnz     @@samples_lop
CODE:004064A9		      retn
CODE:004064A9 ;	---------------------------------------------------------------------------
CODE:004064AA		      align 10h
CODE:004064B0
CODE:004064B0 @@sat:				      ;	...
CODE:004064B0		      sar     ebx, 31
CODE:004064B3		      not     ebx
CODE:004064B5		      jmp     short @@sat_back
CODE:004064B5 ;	---------------------------------------------------------------------------
CODE:004064B7		      align 10h
CODE:004064C0
CODE:004064C0 @@append_copy_to_window:		      ;	...
CODE:004064C0		      lea     esi, [mp3_synth_buf+eax*4]
CODE:004064C7		      lea     edi, [esi+2048]
CODE:004064CD		      mov     ecx, 18
CODE:004064D2		      rep movsd
CODE:004064D4		      jmp     @@append_copy_to_window_back
CODE:004064D4 endp	      mp3_synth_filter_this_8bit_shift_0_slow
CODE:004064D4
CODE:004064D4 ;	---------------------------------------------------------------------------
CODE:004064D9		      align 10h
CODE:004064E0
CODE:004064E0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004064E0
CODE:004064E0
CODE:004064E0 proc	      synth_8bit_shift_1_slow near ; ...
CODE:004064E0		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 1,1,0
CODE:004064E0					      ;	force_8bit, rate_shift=1, force_fast=0
CODE:004064E7		      jz      short @@no_rdtsc_supported
CODE:004064E9		      rdtsc
CODE:004064EB		      sub     [ds:rdtsc_synth_dct], eax
CODE:004064F1		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:004064F7
CODE:004064F7 @@no_rdtsc_supported:		      ;	...
CODE:004064F7		      mov     esi, offset mp3_sb_samples
CODE:004064FC		      mov     edi, [ds:mp3_samples_dst]
CODE:00406502		      mov     [ds:mp3_curr_channel], 0
CODE:0040650C
CODE:0040650C @@synth_channel_lop:		      ;	...
CODE:0040650C		      push    esi
CODE:0040650D		      push    edi
CODE:0040650E		      mov     [ds:mp3_curr_syn_dst], edi
CODE:00406514		      mov     [ds:mp3_curr_frame], 0
CODE:0040651E
CODE:0040651E @@synth_frame_lop:		      ;	...
CODE:0040651E		      push    esi
CODE:0040651F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00406526		      jz      short @@no_rdtsc_supported@
CODE:00406528		      rdtsc
CODE:0040652A		      sub     [ds:rdtsc_dct32],	eax
CODE:00406530		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00406536
CODE:00406536 @@no_rdtsc_supported@:		      ;	...
CODE:00406536		      mov     edx, [ds:mp3_curr_channel]
CODE:0040653C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00406543		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:0040654B		      shl     edx, 10
CODE:0040654E		      and     eax, 1E0h	      ;	1FFh-1Fh
CODE:00406553		      or      eax, edx
CODE:00406555		      mov     [ds:mp3_curr_syn_index], eax
CODE:0040655A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00406560		      lea     edi, [mp3_synth_buf+edi*4]
CODE:00406567		      call    mp3_dct32_shift_1	; mp3_dct32_shift_&rate_shift ;	rate_shift = 1
CODE:0040656C		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00406573		      jz      short @@no_rdtsc_supported@@
CODE:00406575		      rdtsc
CODE:00406577		      add     [ds:rdtsc_dct32],	eax
CODE:0040657D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00406583
CODE:00406583 @@no_rdtsc_supported@@:		      ;	...
CODE:00406583		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040658A		      jz      short @@@no_rdtsc_supported
CODE:0040658C		      rdtsc
CODE:0040658E		      sub     [ds:rdtsc_synth],	eax
CODE:00406594		      sbb     [ds:rdtsc_synth+4], edx
CODE:0040659A
CODE:0040659A @@@no_rdtsc_supported:		      ;	...
CODE:0040659A		      call    mp3_synth_filter_this_8bit_shift_1_slow ;
CODE:0040659A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:0040659F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004065A6		      jz      short @@@no_rdtsc_supported@
CODE:004065A8		      rdtsc
CODE:004065AA		      add     [ds:rdtsc_synth],	eax
CODE:004065B0		      adc     [ds:rdtsc_synth+4], edx
CODE:004065B6
CODE:004065B6 @@@no_rdtsc_supported@:		      ;	...
CODE:004065B6		      pop     esi
CODE:004065B7		      mov     eax, [ds:mp3_samples_dst_step]
CODE:004065BC		      shl     eax, 5	      ;	mul32
CODE:004065BF		      mov     cl, [ds:option_rate_shift]
CODE:004065C5		      shr     eax, cl
CODE:004065C7		      add     [ds:mp3_curr_syn_dst], eax
CODE:004065CD		      add     esi, 128	      ;	SBLIMIT*4
CODE:004065D3		      inc     [ds:mp3_curr_frame]
CODE:004065D9		      mov     eax, [ds:mp3_curr_frame]
CODE:004065DE		      cmp     eax, [ds:mp3_nb_frames]
CODE:004065E4		      jb      @@synth_frame_lop
CODE:004065EA		      pop     edi
CODE:004065EB		      pop     esi
CODE:004065EC		      add     edi, [ds:mp3_bytes_per_sample]
CODE:004065F2		      add     esi, 4608	      ;	36*SBLIMIT*4
CODE:004065F8		      inc     [ds:mp3_curr_channel]
CODE:004065FE		      mov     eax, [ds:mp3_curr_channel]
CODE:00406603		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00406609		      jb      @@synth_channel_lop
CODE:0040660F		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00406616		      jz      short @@@no_rdtsc_supported@@
CODE:00406618		      rdtsc
CODE:0040661A		      add     [ds:rdtsc_synth_dct], eax
CODE:00406620		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00406626
CODE:00406626 @@@no_rdtsc_supported@@:		      ;	...
CODE:00406626		      retn
CODE:00406626 endp	      synth_8bit_shift_1_slow
CODE:00406626
CODE:00406626 ;	---------------------------------------------------------------------------
CODE:00406627		      align 10h
CODE:00406630
CODE:00406630 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406630
CODE:00406630
CODE:00406630 proc	      mp3_synth_filter_this_8bit_shift_1_slow near ; ...
CODE:00406630		      mov     eax, [ds:mp3_curr_syn_index] ; IF	LONG_WINDOW
CODE:00406635		      test    eax, 1E0h	      ;	1FFh-1Fh
CODE:0040663A		      jz      @@append_copy_to_window
CODE:00406640		      nop
CODE:00406641
CODE:00406641 @@append_copy_to_window_back:	      ;	...
CODE:00406641		      mov     ebp, eax
CODE:00406643		      and     ebp, 1C0h	      ;	1FFh-1Fh-20h
CODE:00406649		      and     eax, 420h	      ;	20h+(1 shl 10)
CODE:0040664E		      lea     esi, [eax+10h]
CODE:00406651		      lea     edi, [eax+30h]
CODE:00406654		      neg     ebp
CODE:00406656		      and     ebp, 1C0h
CODE:0040665C		      mov     ecx, [ds:mp3_curr_syn_dst]
CODE:00406662
CODE:00406662 @@samples_lop:			      ;	...
CODE:00406662		      mov     ebx, 101000h    ;	mov @@sum,(8000h SHL (@@out_shift))+(1 SHL (@@out_shift-1))
CODE:00406662					      ;	@@out_shift equ	(OUT_SHIFT_slow+(8*force_8bit))
CODE:00406662					      ;	OUT_SHIFT_slow = 5 ; @@out_shift = 13
CODE:00406667		      mov     edx, [ds:mp3_synth_buf+esi*4] ; @@SUM8 @@sum,@@win1,0,@@syn1
CODE:00406667					      ;	@@SUM8 macro sum,win,ww,syn
CODE:00406667					      ;	  IRP nn,0,1,2,3,4,5,6,7
CODE:0040666E		      mov     eax, [ds:mp3_synth_win+ebp*4]
CODE:00406675		      imul    edx
CODE:00406677		      add     ebx, edx
CODE:00406679		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4] ; @@syn1 equ	esi
CODE:00406680		      mov     eax, [ds:(mp3_synth_win+100h)+ebp*4] ; @@win1 equ	ebp
CODE:00406687		      imul    edx
CODE:00406689		      add     ebx, edx
CODE:0040668B		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00406692		      mov     eax, [ds:(mp3_synth_win+200h)+ebp*4]
CODE:00406699		      imul    edx
CODE:0040669B		      add     ebx, edx
CODE:0040669D		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:004066A4		      mov     eax, [ds:(mp3_synth_win+300h)+ebp*4]
CODE:004066AB		      imul    edx
CODE:004066AD		      add     ebx, edx
CODE:004066AF		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4]
CODE:004066B6		      mov     eax, [ds:(mp3_synth_win+400h)+ebp*4]
CODE:004066BD		      imul    edx
CODE:004066BF		      add     ebx, edx
CODE:004066C1		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:004066C8		      mov     eax, [ds:(mp3_synth_win+500h)+ebp*4]
CODE:004066CF		      imul    edx
CODE:004066D1		      add     ebx, edx
CODE:004066D3		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:004066DA		      mov     eax, [ds:(mp3_synth_win+600h)+ebp*4]
CODE:004066E1		      imul    edx
CODE:004066E3		      add     ebx, edx
CODE:004066E5		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:004066EC		      mov     eax, [ds:(mp3_synth_win+700h)+ebp*4]
CODE:004066F3		      imul    edx
CODE:004066F5		      add     ebx, edx
CODE:004066F7		      mov     edx, [ds:mp3_synth_buf+edi*4]
CODE:004066FE		      mov     eax, [ds:(mp3_synth_win+80h)+ebp*4]
CODE:00406705		      imul    edx
CODE:00406707		      add     ebx, edx
CODE:00406709		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4] ; @@SUM8 @@sum,@@win1,32,@@syn2
CODE:00406709					      ;	@@syn2 equ edi
CODE:00406709					      ;	@@win1 equ ebp
CODE:00406710		      mov     eax, [ds:(mp3_synth_win+180h)+ebp*4]
CODE:00406717		      imul    edx
CODE:00406719		      add     ebx, edx
CODE:0040671B		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:00406722		      mov     eax, [ds:(mp3_synth_win+280h)+ebp*4]
CODE:00406729		      imul    edx
CODE:0040672B		      add     ebx, edx
CODE:0040672D		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:00406734		      mov     eax, [ds:(mp3_synth_win+380h)+ebp*4]
CODE:0040673B		      imul    edx
CODE:0040673D		      add     ebx, edx
CODE:0040673F		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:00406746		      mov     eax, [ds:(mp3_synth_win+480h)+ebp*4]
CODE:0040674D		      imul    edx
CODE:0040674F		      add     ebx, edx
CODE:00406751		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00406758		      mov     eax, [ds:(mp3_synth_win+580h)+ebp*4]
CODE:0040675F		      imul    edx
CODE:00406761		      add     ebx, edx
CODE:00406763		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:0040676A		      mov     eax, [ds:(mp3_synth_win+680h)+ebp*4]
CODE:00406771		      imul    edx
CODE:00406773		      add     ebx, edx
CODE:00406775		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4]
CODE:0040677C		      mov     eax, [ds:(mp3_synth_win+780h)+ebp*4]
CODE:00406783		      imul    edx
CODE:00406785		      add     ebx, edx
CODE:00406787		      cmp     ebx, 200000h    ;	cmp @@sum,100h SHL (@@out_shift)
CODE:0040678D		      jnb     short @@sat
CODE:0040678F		      sar     ebx, 13	      ;	sar @@sum,(@@out_shift)
CODE:00406792
CODE:00406792 @@sat_back:			      ;	...
CODE:00406792		      mov     [ecx], bl
CODE:00406794		      add     ecx, [ds:mp3_samples_dst_step]
CODE:0040679A		      add     esi, 2
CODE:0040679D		      sub     edi, 2
CODE:004067A0		      add     ebp, 2
CODE:004067A3		      test    ebp, 1Fh
CODE:004067A9		      jnz     @@samples_lop
CODE:004067AF		      retn
CODE:004067B0 ;	---------------------------------------------------------------------------
CODE:004067B0
CODE:004067B0 @@sat:				      ;	...
CODE:004067B0		      sar     ebx, 31	      ;	sar @@sum,31 ; FFFFFFFFh,00000000h
CODE:004067B3		      not     ebx
CODE:004067B5		      jmp     short @@sat_back
CODE:004067B5 ;	---------------------------------------------------------------------------
CODE:004067B7		      align 10h
CODE:004067C0
CODE:004067C0 @@append_copy_to_window:		      ;	...
CODE:004067C0		      lea     esi, [mp3_synth_buf+eax*4]
CODE:004067C7		      lea     edi, [esi+2048]
CODE:004067CD		      mov     ecx, 18
CODE:004067D2		      rep movsd
CODE:004067D4		      jmp     @@append_copy_to_window_back
CODE:004067D4 endp	      mp3_synth_filter_this_8bit_shift_1_slow
CODE:004067D4
CODE:004067D4 ;	---------------------------------------------------------------------------
CODE:004067D9		      align 10h
CODE:004067E0
CODE:004067E0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004067E0
CODE:004067E0
CODE:004067E0 proc	      synth_8bit_shift_2_slow near ; ...
CODE:004067E0		      test    [byte ptr	ds:cpuid_flags], 10h ; SYNTH_MACRO 1,2,0 ; 8bit, quarter rate
CODE:004067E0					      ;	force_8bit, rate_shift=2, force_fast=0
CODE:004067E7		      jz      short @@no_rdtsc_supported ; timelog_start rdtsc_synth_dct
CODE:004067E9		      rdtsc
CODE:004067EB		      sub     [ds:rdtsc_synth_dct], eax
CODE:004067F1		      sbb     [ds:rdtsc_synth_dct+4], edx
CODE:004067F7
CODE:004067F7 @@no_rdtsc_supported:		      ;	...
CODE:004067F7		      mov     esi, offset mp3_sb_samples
CODE:004067FC		      mov     edi, [ds:mp3_samples_dst]
CODE:00406802		      mov     [ds:mp3_curr_channel], 0
CODE:0040680C
CODE:0040680C @@synth_channel_lop:		      ;	...
CODE:0040680C		      push    esi
CODE:0040680D		      push    edi
CODE:0040680E		      mov     [ds:mp3_curr_syn_dst], edi
CODE:00406814		      mov     [ds:mp3_curr_frame], 0
CODE:0040681E
CODE:0040681E @@synth_frame_lop:		      ;	...
CODE:0040681E		      push    esi	      ;	sb_samples[ch][i]
CODE:0040681F		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_start rdtsc_dct32
CODE:00406826		      jz      short @@no_rdtsc_supported@
CODE:00406828		      rdtsc
CODE:0040682A		      sub     [ds:rdtsc_dct32],	eax
CODE:00406830		      sbb     [ds:rdtsc_dct32+4], edx
CODE:00406836
CODE:00406836 @@no_rdtsc_supported@:		      ;	...
CODE:00406836		      mov     edx, [ds:mp3_curr_channel]
CODE:0040683C		      mov     eax, [ds:mp3_synth_index+edx*4]
CODE:00406843		      sub     [ds:mp3_synth_index+edx*4], 32
CODE:0040684B		      shl     edx, 10	      ;	channel*1024
CODE:0040684E		      and     eax, 1E0h	      ;	1FFh-1Fh ; index(0..511), align	32
CODE:00406853		      or      eax, edx
CODE:00406855		      mov     [ds:mp3_curr_syn_index], eax
CODE:0040685A		      mov     edi, [ds:mp3_curr_syn_index]
CODE:00406860		      lea     edi, [mp3_synth_buf+edi*4] ; IF SYNTH32
CODE:00406867		      call    mp3_dct32_shift_2	; mp3_dct32_shift_&rate_shift ;	rate_shift=2
CODE:0040686C		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:00406873		      jz      short @@no_rdtsc_supported@@ ; timelog_end rdtsc_dct32
CODE:00406875		      rdtsc
CODE:00406877		      add     [ds:rdtsc_dct32],	eax
CODE:0040687D		      adc     [ds:rdtsc_dct32+4], edx
CODE:00406883
CODE:00406883 @@no_rdtsc_supported@@:		      ;	...
CODE:00406883		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:0040688A		      jz      short @@@no_rdtsc_supported ; timelog_start rdtsc_synth
CODE:0040688C		      rdtsc
CODE:0040688E		      sub     [ds:rdtsc_synth],	eax
CODE:00406894		      sbb     [ds:rdtsc_synth+4], edx
CODE:0040689A
CODE:0040689A @@@no_rdtsc_supported:		      ;	...
CODE:0040689A		      call    mp3_synth_filter_this_8bit_shift_2_slow ;
CODE:0040689A					      ;	mp3_synth_filter_this_&force_8bit&_&rate_shift&_&force_fast
CODE:0040689F		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_synth
CODE:004068A6		      jz      short @@@no_rdtsc_supported@
CODE:004068A8		      rdtsc
CODE:004068AA		      add     [ds:rdtsc_synth],	eax
CODE:004068B0		      adc     [ds:rdtsc_synth+4], edx
CODE:004068B6
CODE:004068B6 @@@no_rdtsc_supported@:		      ;	...
CODE:004068B6		      pop     esi	      ;	src
CODE:004068B7		      mov     eax, [ds:mp3_samples_dst_step]
CODE:004068BC		      shl     eax, 5	      ;	mul32
CODE:004068BF		      mov     cl, [ds:option_rate_shift] ; IF with_rate_shift
CODE:004068C5		      shr     eax, cl
CODE:004068C7		      add     [ds:mp3_curr_syn_dst], eax
CODE:004068CD		      add     esi, 128	      ;	SBLIMIT*4 ; src+32*4
CODE:004068D3		      inc     [ds:mp3_curr_frame]
CODE:004068D9		      mov     eax, [ds:mp3_curr_frame]
CODE:004068DE		      cmp     eax, [ds:mp3_nb_frames]
CODE:004068E4		      jb      @@synth_frame_lop
CODE:004068EA		      pop     edi
CODE:004068EB		      pop     esi
CODE:004068EC		      add     edi, [ds:mp3_bytes_per_sample]
CODE:004068F2		      add     esi, 4608	      ;	36*SBLIMIT*4 ; src
CODE:004068F8		      inc     [ds:mp3_curr_channel]
CODE:004068FE		      mov     eax, [ds:mp3_curr_channel]
CODE:00406903		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00406909		      jb      @@synth_channel_lop
CODE:0040690F		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_synth_dct
CODE:00406916		      jz      short @@@no_rdtsc_supported@@
CODE:00406918		      rdtsc
CODE:0040691A		      add     [ds:rdtsc_synth_dct], eax
CODE:00406920		      adc     [ds:rdtsc_synth_dct+4], edx
CODE:00406926
CODE:00406926 @@@no_rdtsc_supported@@:		      ;	...
CODE:00406926		      retn
CODE:00406926 endp	      synth_8bit_shift_2_slow
CODE:00406926
CODE:00406926 ;	---------------------------------------------------------------------------
CODE:00406927		      align 10h
CODE:00406930
CODE:00406930 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406930
CODE:00406930
CODE:00406930 proc	      mp3_synth_filter_this_8bit_shift_2_slow near ; ...
CODE:00406930		      mov     eax, [ds:mp3_curr_syn_index]
CODE:00406935		      test    eax, 1E0h	      ;	1FFh-1Fh ; offset
CODE:0040693A		      jz      @@append_copy_to_window
CODE:00406940		      nop
CODE:00406941
CODE:00406941 @@append_copy_to_window_back:	      ;	...
CODE:00406941		      mov     ebp, eax	      ;	@@win1
CODE:00406943		      and     ebp, 1C0h	      ;	1FFh-1Fh-20h
CODE:00406949		      and     eax, 420h	      ;	20h+(1 shl 10) ; bit5 and channel
CODE:0040694E		      lea     esi, [eax+10h]  ;	@@syn1
CODE:00406951		      lea     edi, [eax+30h]  ;	@@syn2
CODE:00406954		      neg     ebp
CODE:00406956		      and     ebp, 1C0h	      ;	1FFh-1Fh-20h
CODE:0040695C		      mov     ecx, [ds:mp3_curr_syn_dst] ; @@dst
CODE:00406962
CODE:00406962 @@samples_lop:			      ;	...
CODE:00406962		      mov     ebx, 101000h    ;	mov @@sum,(80h SHL (@@out_shift))+(1 SHL (@@out_shift-1))
CODE:00406962					      ;	@@out_shift equ	(OUT_SHIFT_slow+(8*force_8bit))
CODE:00406962					      ;	@@out_shift = 13 ; OUT_SHIFT_slow = 5
CODE:00406967		      mov     edx, [ds:mp3_synth_buf+esi*4] ; @@SUM8 @@sum,@@win1,0,@@syn1
CODE:00406967					      ;	@@SUM8 macro sum,win,ww, syn
CODE:00406967					      ;	IRP nn,0,1,2,3,4,5,6,7
CODE:00406967					      ;	[mp3_synth_buf+syn*4+(nn*64*4)]
CODE:0040696E		      mov     eax, [ds:mp3_synth_win+ebp*4] ; [mp3_synth_win+win*4+(nn*64*4)+ww*4]
CODE:00406975		      imul    edx	      ;	64bit =	32bit *	32bit
CODE:00406977		      add     ebx, edx	      ;	add sum,edx ; sum from MSW of result
CODE:00406979		      mov     edx, [ds:(mp3_synth_buf+100h)+esi*4] ;
CODE:00406979					      ;	[mp3_synth_buf+syn*4+(nn*64*4)]	; nn=1
CODE:00406980		      mov     eax, [ds:(mp3_synth_win+100h)+ebp*4] ;
CODE:00406980					      ;	[mp3_synth_win+win*4+(nn*64*4)+ww*4] ; nn=1
CODE:00406987		      imul    edx
CODE:00406989		      add     ebx, edx
CODE:0040698B		      mov     edx, [ds:(mp3_synth_buf+200h)+esi*4]
CODE:00406992		      mov     eax, [ds:(mp3_synth_win+200h)+ebp*4]
CODE:00406999		      imul    edx
CODE:0040699B		      add     ebx, edx
CODE:0040699D		      mov     edx, [ds:(mp3_synth_buf+300h)+esi*4]
CODE:004069A4		      mov     eax, [ds:(mp3_synth_win+300h)+ebp*4]
CODE:004069AB		      imul    edx
CODE:004069AD		      add     ebx, edx
CODE:004069AF		      mov     edx, [ds:(mp3_synth_buf+400h)+esi*4] ;
CODE:004069AF					      ;	[mp3_synth_buf+syn*4+(nn*64*4)]	; nn=4
CODE:004069B6		      mov     eax, [ds:(mp3_synth_win+400h)+ebp*4] ;
CODE:004069B6					      ;	[mp3_synth_win+win*4+(nn*64*4)+ww*4] ; nn=4
CODE:004069BD		      imul    edx
CODE:004069BF		      add     ebx, edx
CODE:004069C1		      mov     edx, [ds:(mp3_synth_buf+500h)+esi*4]
CODE:004069C8		      mov     eax, [ds:(mp3_synth_win+500h)+ebp*4]
CODE:004069CF		      imul    edx
CODE:004069D1		      add     ebx, edx
CODE:004069D3		      mov     edx, [ds:(mp3_synth_buf+600h)+esi*4]
CODE:004069DA		      mov     eax, [ds:(mp3_synth_win+600h)+ebp*4]
CODE:004069E1		      imul    edx
CODE:004069E3		      add     ebx, edx
CODE:004069E5		      mov     edx, [ds:(mp3_synth_buf+700h)+esi*4]
CODE:004069EC		      mov     eax, [ds:(mp3_synth_win+700h)+ebp*4]
CODE:004069F3		      imul    edx
CODE:004069F5		      add     ebx, edx
CODE:004069F7		      mov     edx, [ds:mp3_synth_buf+edi*4] ; @@SUM8 @@sum,@@win1,32,@@syn2
CODE:004069FE		      mov     eax, [ds:(mp3_synth_win+80h)+ebp*4]
CODE:00406A05		      imul    edx
CODE:00406A07		      add     ebx, edx
CODE:00406A09		      mov     edx, [ds:(mp3_synth_buf+100h)+edi*4]
CODE:00406A10		      mov     eax, [ds:(mp3_synth_win+180h)+ebp*4]
CODE:00406A17		      imul    edx
CODE:00406A19		      add     ebx, edx
CODE:00406A1B		      mov     edx, [ds:(mp3_synth_buf+200h)+edi*4]
CODE:00406A22		      mov     eax, [ds:(mp3_synth_win+280h)+ebp*4]
CODE:00406A29		      imul    edx
CODE:00406A2B		      add     ebx, edx
CODE:00406A2D		      mov     edx, [ds:(mp3_synth_buf+300h)+edi*4]
CODE:00406A34		      mov     eax, [ds:(mp3_synth_win+380h)+ebp*4]
CODE:00406A3B		      imul    edx
CODE:00406A3D		      add     ebx, edx
CODE:00406A3F		      mov     edx, [ds:(mp3_synth_buf+400h)+edi*4]
CODE:00406A46		      mov     eax, [ds:(mp3_synth_win+480h)+ebp*4]
CODE:00406A4D		      imul    edx
CODE:00406A4F		      add     ebx, edx
CODE:00406A51		      mov     edx, [ds:(mp3_synth_buf+500h)+edi*4]
CODE:00406A58		      mov     eax, [ds:(mp3_synth_win+580h)+ebp*4]
CODE:00406A5F		      imul    edx
CODE:00406A61		      add     ebx, edx
CODE:00406A63		      mov     edx, [ds:(mp3_synth_buf+600h)+edi*4]
CODE:00406A6A		      mov     eax, [ds:(mp3_synth_win+680h)+ebp*4]
CODE:00406A71		      imul    edx
CODE:00406A73		      add     ebx, edx
CODE:00406A75		      mov     edx, [ds:(mp3_synth_buf+700h)+edi*4] ;
CODE:00406A75					      ;	[mp3_synth_buf+syn*4+(nn*64*4)]	; nn=7
CODE:00406A7C		      mov     eax, [ds:(mp3_synth_win+780h)+ebp*4] ;
CODE:00406A7C					      ;	[mp3_synth_win+win*4+(nn*64*4)+ww*4] ; nn=7
CODE:00406A83		      imul    edx
CODE:00406A85		      add     ebx, edx
CODE:00406A87		      cmp     ebx, 200000h    ;	cmp @@sum,100h SHL (@@out_shift) ; out_shift=13
CODE:00406A8D		      jnb     short @@sat
CODE:00406A8F		      sar     ebx, 13	      ;	sar @@sum,(@@out_shift)
CODE:00406A92
CODE:00406A92 @@sat_back:			      ;	...
CODE:00406A92		      mov     [ecx], bl	      ;	mov byte ptr [@@dst],@@sum_8bit
CODE:00406A94		      add     ecx, [ds:mp3_samples_dst_step]
CODE:00406A9A		      add     esi, 4	      ;	add @@syn1,1 shl rate_shift ; rate_shift=2
CODE:00406A9D		      sub     edi, 4	      ;	add @@syn2,1 shl rate_shift
CODE:00406AA0		      add     ebp, 4	      ;	add @@win1,1 shl rate_shift
CODE:00406AA3		      test    ebp, 1Fh	      ;	test @@win1,1Fh
CODE:00406AA9		      jnz     @@samples_lop
CODE:00406AAF		      retn
CODE:00406AB0 ;	---------------------------------------------------------------------------
CODE:00406AB0
CODE:00406AB0 @@sat:				      ;	...
CODE:00406AB0		      sar     ebx, 31	      ;	sar  @@sum,31 ;	FFFFFFFFh,00000000h
CODE:00406AB3		      not     ebx
CODE:00406AB5		      jmp     short @@sat_back
CODE:00406AB5 ;	---------------------------------------------------------------------------
CODE:00406AB7		      align 10h
CODE:00406AC0
CODE:00406AC0 @@append_copy_to_window:		      ;	...
CODE:00406AC0		      lea     esi, [mp3_synth_buf+eax*4] ; IF SYNTH32
CODE:00406AC7		      lea     edi, [esi+2048] ;	[esi+512*4]
CODE:00406ACD		      mov     ecx, 18	      ;	(12h*4)/4
CODE:00406AD2		      rep movsd
CODE:00406AD4		      jmp     @@append_copy_to_window_back
CODE:00406AD4 endp	      mp3_synth_filter_this_8bit_shift_2_slow
CODE:00406AD4
CODE:00406AD9
CODE:00406AD9 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406AD9
CODE:00406AD9
CODE:00406AD9 proc	      mp3_any_init_synth_window	near ; ...
CODE:00406AD9		      xor     edx, edx	      ;	index (0..100h)
CODE:00406ADB		      xor     ecx, ecx	      ;	delta.val
CODE:00406ADD		      mov     [ds:mp3_synth_win+edx*2],	ecx
CODE:00406AE4
CODE:00406AE4 @@synth_lop:			      ;	...
CODE:00406AE4		      movsx   ebx, [ds:mp3_synth_win_src+edx*2]
CODE:00406AEC		      add     ecx, ebx
CODE:00406AEE		      mov     eax, ecx
CODE:00406AF0		      cmp     [ds:option_fast],	0
CODE:00406AF7		      jz      short @@not_fast
CODE:00406AF9		      sar     eax, 5
CODE:00406AFC
CODE:00406AFC @@not_fast:			      ;	...
CODE:00406AFC		      cmp     [ds:option_fast],	0
CODE:00406B03		      jnz     short @@not_slow
CODE:00406B05		      shl     eax, 14	      ;	(WFRAC_BITS_slow-WFRAC_BITS_default)
CODE:00406B08
CODE:00406B08 @@not_slow:			      ;	...
CODE:00406B08		      inc     edx	      ;	index (1..100h)
CODE:00406B09		      mov     ebx, 200h
CODE:00406B0E		      sub     ebx, edx	      ;	1FFh..100h
CODE:00406B10		      mov     [ds:mp3_synth_win+ebx*4],	eax
CODE:00406B17		      test    edx, 3Fh
CODE:00406B1D		      jz      short @@synth_keep_sign
CODE:00406B1F		      neg     eax
CODE:00406B21
CODE:00406B21 @@synth_keep_sign:		      ;	...
CODE:00406B21		      mov     [ds:mp3_synth_win+edx*4],	eax
CODE:00406B28		      cmp     edx, 100h
CODE:00406B2E		      jb      short @@synth_lop
CODE:00406B30		      xor     edx, edx
CODE:00406B32
CODE:00406B32 @@synth_neg_lop:			      ;	...
CODE:00406B32		      test    edx, 30h	      ;	skip 0..0Fh (only negate 10h..3Fh)
CODE:00406B38		      jz      short @@synth_neg_next
CODE:00406B3A		      neg     [ds:mp3_synth_win+edx*4]
CODE:00406B41
CODE:00406B41 @@synth_neg_next:			      ;	...
CODE:00406B41		      inc     edx
CODE:00406B42		      cmp     edx, 200h
CODE:00406B48		      jb      short @@synth_neg_lop
CODE:00406B4A		      xor     edx, edx
CODE:00406B4C
CODE:00406B4C @@synth_swap_lop:			      ;	...
CODE:00406B4C		      mov     eax, edx
CODE:00406B4E		      and     eax, 3Fh
CODE:00406B51		      sub     eax, 17	      ;	swap win [(17..31)] with win[(17..31)+32)
CODE:00406B54		      cmp     eax, 14	      ;	31-17
CODE:00406B57		      ja      short @@synth_swap_next
CODE:00406B59		      mov     eax, [ds:mp3_synth_win+edx*4]
CODE:00406B60		      xchg    eax, [ds:(mp3_synth_win+80h)+edx*4]
CODE:00406B67		      mov     [ds:mp3_synth_win+edx*4],	eax
CODE:00406B6E
CODE:00406B6E @@synth_swap_next:		      ;	...
CODE:00406B6E		      inc     edx
CODE:00406B6F		      cmp     edx, 200h
CODE:00406B75		      jb      short @@synth_swap_lop
CODE:00406B77		      xor     edx, edx
CODE:00406B79
CODE:00406B79 @@synth_zero_lop:			      ;	...
CODE:00406B79		      mov     [ds:(mp3_synth_win+40h)+edx*4], 0
CODE:00406B84		      add     edx, 40h
CODE:00406B87		      cmp     edx, 200h
CODE:00406B8D		      jb      short @@synth_zero_lop
CODE:00406B8F		      mov     esi, offset mp3_synth_win
CODE:00406B94		      lea     edi, [esi+2048] ;	[esi+512*4]
CODE:00406B9A		      mov     ecx, 512	      ;	append another copy
CODE:00406B9F		      rep movsd
CODE:00406BA1		      retn
CODE:00406BA1 endp	      mp3_any_init_synth_window
CODE:00406BA1
CODE:00406BA2
CODE:00406BA2 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406BA2
CODE:00406BA2
CODE:00406BA2 proc	      mp3_init_post_collapse near ; ...
CODE:00406BA2		      cmp     [ds:option_fast],	0
CODE:00406BA9		      jz      short @@not_fast
CODE:00406BAB		      mov     esi, offset mp3_synth_win
CODE:00406BB0		      mov     edi, esi
CODE:00406BB2		      mov     ecx, 1024	      ;	512*(1+LONG_WINDOW)
CODE:00406BB7
CODE:00406BB7 @@collapse_lop:			      ;	...
CODE:00406BB7		      lodsd		      ;	collapse 32bit to 16bit
CODE:00406BB7					      ;	(that's slightly faster due to better caching)
CODE:00406BB8		      stosw
CODE:00406BBA		      loop    @@collapse_lop
CODE:00406BBC
CODE:00406BBC @@not_fast:			      ;	...
CODE:00406BBC		      retn
CODE:00406BBC endp	      mp3_init_post_collapse
CODE:00406BBC
CODE:00406BBD
CODE:00406BBD ;	===============	S U B R	O U T I	N E =======================================
CODE:00406BBD
CODE:00406BBD
CODE:00406BBD proc	      mp3_any_init_band_indices	near ; ...
CODE:00406BBD		      mov     esi, offset mp3_band_size_long
CODE:00406BC2		      mov     edi, offset mp3_band_index_long
CODE:00406BC7		      mov     ebx, 9
CODE:00406BCC
CODE:00406BCC @@band_index_lop_i:		      ;	...
CODE:00406BCC		      xor     eax, eax
CODE:00406BCE		      mov     ecx, 22
CODE:00406BD3
CODE:00406BD3 @@band_index_lop_j:		      ;	...
CODE:00406BD3		      stosw
CODE:00406BD5		      movzx   edx, [byte ptr esi]
CODE:00406BD8		      add     eax, edx
CODE:00406BDA		      inc     esi
CODE:00406BDB		      loop    @@band_index_lop_j
CODE:00406BDD		      add     ecx, 10
CODE:00406BE0		      rep stosw
CODE:00406BE3		      dec     ebx
CODE:00406BE4		      jnz     short @@band_index_lop_i
CODE:00406BE6		      retn
CODE:00406BE6 endp	      mp3_any_init_band_indices
CODE:00406BE6
CODE:00406BE7
CODE:00406BE7 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406BE7
CODE:00406BE7
CODE:00406BE7 proc	      mp3_any_init_lsf_sf_expand near ;	...
CODE:00406BE7		      mov     esi, offset mp3_lsf_sf_expand_init_table
CODE:00406BEC		      mov     edi, offset mp3_lsf_sf_expand_exploded_table
CODE:00406BF1		      xor     edx, edx	      ;	curr.index
CODE:00406BF3		      xor     ebx, ebx	      ;	curr.base
CODE:00406BF5
CODE:00406BF5 @@lop:				      ;	...
CODE:00406BF5		      cmp     dx, [esi+6]     ;	nextbase
CODE:00406BF9		      jb      short @@inrange
CODE:00406BFB		      mov     bx, [esi+6]
CODE:00406BFF		      add     esi, 8	      ;	next entry
CODE:00406C02
CODE:00406C02 @@inrange:			      ;	...
CODE:00406C02		      mov     eax, edx
CODE:00406C04		      sub     eax, ebx
CODE:00406C06		      mov     cl, [esi]
CODE:00406C08		      shr     eax, cl	      ;	div2
CODE:00406C0A		      div     [byte ptr	esi+3] ; mod3 ;	[2]=slen[3]
CODE:00406C0D		      mov     [edi+3], ah
CODE:00406C10		      mov     ah, 0	      ;	eax=div.result
CODE:00406C12		      div     [byte ptr	esi+2] ; mod2 ;	[2]=slen[2]
CODE:00406C15		      mov     [edi+2], ah     ;	remainder
CODE:00406C18		      mov     ah, 0
CODE:00406C1A		      div     [byte ptr	esi+1] ; mod1 ;	[1]=slen[1]
CODE:00406C1D		      mov     [edi], ax	      ;	[0]=slen[0]
CODE:00406C20		      mov     ax, [esi+4]     ;	[4]=tindex2
CODE:00406C24		      mov     [edi+4], ax     ;	[5]=force_preflag
CODE:00406C28		      add     edi, 8
CODE:00406C2B		      inc     edx	      ;	curr.index ; next
CODE:00406C2C		      cmp     edx, 1024	      ;	512+512
CODE:00406C32		      jb      short @@lop
CODE:00406C34		      retn
CODE:00406C34 endp	      mp3_any_init_lsf_sf_expand
CODE:00406C34
CODE:00406C35
CODE:00406C35 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406C35
CODE:00406C35
CODE:00406C35 proc	      mp3_any_init_huff_tables near ; ...
CODE:00406C35		      mov     ebp, offset huff_tree_list_data
CODE:00406C3A		      mov     esi, offset huff_tree_list_numbits
CODE:00406C3F		      mov     edx, 1	      ;	idx (table 01h..11h)
CODE:00406C44
CODE:00406C44 @@huffman_table_lop:		      ;	...
CODE:00406C44		      xor     eax, eax
CODE:00406C46		      mov     edi, offset mp3_huff_tmp_bits
CODE:00406C4B		      mov     ecx, 40h	      ;	100h/4 ; 100h x	8bit
CODE:00406C50		      rep stosd
CODE:00406C52		      mov     edi, offset mp3_huff_tmp_codes
CODE:00406C57		      mov     ecx, 80h	      ;	100h/2 ; 100h x	16bit
CODE:00406C5C		      rep stosd
CODE:00406C5E		      xor     ebx, ebx
CODE:00406C60
CODE:00406C60 @@huff_entry_lop:			      ;	...
CODE:00406C60		      movzx   edi, [byte ptr ebp+0]
CODE:00406C64		      inc     ebp	      ;	dst=data
CODE:00406C65		      lodsb		      ;	numbits
CODE:00406C66		      mov     [ds:mp3_huff_tmp_bits+edi], al
CODE:00406C6C		      mov     cl, 32
CODE:00406C6E		      sub     cl, al	      ;	32-numbits
CODE:00406C70		      shr     ebx, cl
CODE:00406C72		      mov     [word ptr	ds:mp3_huff_tmp_codes+edi*2], bx
CODE:00406C7A		      inc     ebx	      ;	next.code
CODE:00406C7B		      shl     ebx, cl	      ;	shift back to MSBs
CODE:00406C7D		      jnz     short @@huff_entry_lop
CODE:00406C7F		      pusha
CODE:00406C80		      mov     eax, 100h	      ;	nb_codes
CODE:00406C85		      mov     ebx, offset mp3_huff_tmp_bits ; bits
CODE:00406C8A		      mov     esi, offset mp3_huff_tmp_codes ; codes
CODE:00406C8F		      call    mp3_build_huff_table_root	; make table
CODE:00406C94		      popa
CODE:00406C95		      inc     edx	      ;	idx
CODE:00406C96		      cmp     edx, 12h
CODE:00406C99		      jnz     short @@huffman_table_lop	; next table
CODE:00406C9B		      retn
CODE:00406C9B endp	      mp3_any_init_huff_tables
CODE:00406C9B
CODE:00406C9C
CODE:00406C9C ;	===============	S U B R	O U T I	N E =======================================
CODE:00406C9C
CODE:00406C9C
CODE:00406C9C proc	      mp3_integer_init_is_stereo_lsf near ; ...
CODE:00406C9C		      xor     edi, edi
CODE:00406C9E
CODE:00406C9E @@lsf_lop:			      ;	...
CODE:00406C9E		      mov     esi, edi
CODE:00406CA0		      and     esi, 3Fh
CODE:00406CA3		      inc     esi
CODE:00406CA4		      shr     esi, 1
CODE:00406CA6		      test    edi, 40h
CODE:00406CAC		      jz      short @@lsf_no_shift
CODE:00406CAE		      shl     esi, 1
CODE:00406CB0
CODE:00406CB0 @@lsf_no_shift:			      ;	...
CODE:00406CB0		      mov     edx, 40000000h  ;	aka mul	1.000
CODE:00406CB5		      add     esi, 4
CODE:00406CB8		      test    edi, 80h	      ;	2*40h
CODE:00406CBE		      jz      short @@no_ms_stereo
CODE:00406CC0		      mov     edx, 5A82799Ah  ;	2D413CCDh*2 ; aka mul 1.414
CODE:00406CC5		      sub     esi, 2
CODE:00406CC8
CODE:00406CC8 @@no_ms_stereo:			      ;	...
CODE:00406CC8		      mov     ecx, esi
CODE:00406CCA		      shr     ecx, 2	      ;	msbs
CODE:00406CCD		      and     esi, 3	      ;	lsbs
CODE:00406CD0		      mov     eax, [ds:mp3_is_table_lsf_src+esi*4]
CODE:00406CD7		      shr     eax, cl
CODE:00406CD9		      test    edi, 1
CODE:00406CDF		      jnz     short @@lsf_no_swap
CODE:00406CE1		      xchg    eax, edx
CODE:00406CE2
CODE:00406CE2 @@lsf_no_swap:			      ;	...
CODE:00406CE2		      mov     [ds:mp3_is_table_lsf+edi*8], eax
CODE:00406CE9		      mov     [ds:(mp3_is_table_lsf+4)+edi*8], edx
CODE:00406CF0		      inc     edi
CODE:00406CF1		      cmp     edi, 100h
CODE:00406CF7		      jb      short @@lsf_lop
CODE:00406CF9		      retn
CODE:00406CF9 endp	      mp3_integer_init_is_stereo_lsf
CODE:00406CF9
CODE:00406CFA
CODE:00406CFA ;	===============	S U B R	O U T I	N E =======================================
CODE:00406CFA
CODE:00406CFA
CODE:00406CFA proc	      mp3_integer_init_mdct_windows near ; ...
CODE:00406CFA		      mov     edi, offset mp3_mdct_win
CODE:00406CFF		      mov     esi, offset mp3_mdct_win_src
CODE:00406D04		      mov     ecx, 144	      ;	36*4
CODE:00406D09		      rep movsd
CODE:00406D0B		      mov     esi, offset mp3_mdct_win
CODE:00406D10		      mov     edi, (offset mp3_mdct_win+240h)
CODE:00406D15		      mov     ecx, 72	      ;	4*36/2 ; that is, 4*36 entry pairs
CODE:00406D1A
CODE:00406D1A @@mdct_lop_dupe:			      ;	...
CODE:00406D1A		      movsd		      ;	copy normal, [4..7][even] = +[0..3][even
CODE:00406D1B		      lodsd
CODE:00406D1C		      neg     eax	      ;	copy negated, [4..7][odd] = -[0..3][odd]
CODE:00406D1E		      stosd
CODE:00406D1F		      loop    @@mdct_lop_dupe
CODE:00406D21		      retn
CODE:00406D21 endp	      mp3_integer_init_mdct_windows
CODE:00406D21
CODE:00406D22
CODE:00406D22 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406D22
CODE:00406D22
CODE:00406D22 proc	      mp3_integer_init_table_4_3 near ;	...
CODE:00406D22		      cmp     [ds:option_fast],	0
CODE:00406D29		      mov     al, 72	      ;	100-6-VFRAC_BITS_slow
CODE:00406D2B		      jz      short @@this_vfrac
CODE:00406D2D		      mov     al, 76	      ;	100-6-VFRAC_BITS_fast
CODE:00406D2F
CODE:00406D2F @@this_vfrac:			      ;	...
CODE:00406D2F		      mov     [ds:mp3_curr_vfrac_bits],	al
CODE:00406D34		      xor     edi, edi
CODE:00406D36
CODE:00406D36 @@table_4_3_lop:			      ;	...
CODE:00406D36		      push    edi	      ;	for i=1	to TABLE_4_3_SIZE-1
CODE:00406D37		      mov     eax, edi
CODE:00406D39		      shr     eax, 2
CODE:00406D3C		      mul     eax
CODE:00406D3E		      mul     eax
CODE:00406D40		      xor     ebx, ebx
CODE:00406D42		      call    cbrt96
CODE:00406D47		      add     cl, [ds:mp3_curr_vfrac_bits]
CODE:00406D4D		      pop     edi
CODE:00406D4E
CODE:00406D4E @@inner_lop:			      ;	...
CODE:00406D4E		      mov     eax, edi
CODE:00406D50		      and     eax, 3
CODE:00406D53		      mov     eax, [ds:mp3_pow2_quarters+eax*4]
CODE:00406D5A		      mul     ebx
CODE:00406D5C		      mov     ch, cl
CODE:00406D5E		      or      edx, edx
CODE:00406D60		      jns     short @@this
CODE:00406D62		      shr     edx, 1
CODE:00406D64		      dec     ch
CODE:00406D66
CODE:00406D66 @@this:				      ;	...
CODE:00406D66		      mov     [ds:mp3_table_4_3_value+edi*4], edx
CODE:00406D6D		      mov     [ds:mp3_table_4_3_exp+edi], ch
CODE:00406D73		      inc     edi
CODE:00406D74		      test    edi, 3
CODE:00406D7A		      jnz     short @@inner_lop
CODE:00406D7C		      cmp     edi, 803Ch
CODE:00406D82		      jb      short @@table_4_3_lop
CODE:00406D84		      retn
CODE:00406D84 endp	      mp3_integer_init_table_4_3
CODE:00406D84
CODE:00406D85
CODE:00406D85 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406D85
CODE:00406D85
CODE:00406D85 proc	      mp3_integer_init_exponent	near ; ...
CODE:00406D85		      mov     edi, offset mp3_expval_table
CODE:00406D8A		      xor     edx, edx
CODE:00406D8C
CODE:00406D8C @@exponent_lop:			      ;	...
CODE:00406D8C		      mov     eax, edx	      ;	val=i
CODE:00406D8E		      mov     ebx, edx
CODE:00406D90		      mov     ecx, edx
CODE:00406D92		      shr     ebx, 4
CODE:00406D95		      shr     ecx, 6	      ;	4+2
CODE:00406D98		      and     eax, 0Fh	      ;	val=i AND 0Fh
CODE:00406D9B		      and     ebx, 3
CODE:00406D9E		      lea     ebx, [ebx+eax*4] ; (0..0Fh)*4+(0..3)
CODE:00406DA1		      mov     eax, [ds:mp3_table_4_3_value+ebx*4]
CODE:00406DA8		      or      eax, eax
CODE:00406DAA		      jz      short @@this
CODE:00406DAC		      sub     cl, [ds:mp3_table_4_3_exp+ebx]
CODE:00406DB2		      ja      short @@left_shift
CODE:00406DB4		      neg     cl
CODE:00406DB6		      shr     eax, cl
CODE:00406DB8		      cmp     cl, 1Fh
CODE:00406DBB		      jbe     short @@this
CODE:00406DBD		      xor     eax, eax
CODE:00406DBF		      jmp     short @@this
CODE:00406DC1 ;	---------------------------------------------------------------------------
CODE:00406DC1
CODE:00406DC1 @@left_shift:			      ;	...
CODE:00406DC1		      mov     eax, 7FFFFFFFh
CODE:00406DC6
CODE:00406DC6 @@this:				      ;	...
CODE:00406DC6		      stosd
CODE:00406DC7		      inc     edx
CODE:00406DC8		      cmp     edx, 2000h
CODE:00406DCE		      jb      short @@exponent_lop
CODE:00406DD0		      mov     esi, offset mp3_expval_table
CODE:00406DD5		      mov     edi, offset mp3_exp_table
CODE:00406DDA		      mov     ecx, 200h
CODE:00406DDF
CODE:00406DDF @@exponent_dupe_lop:		      ;	...
CODE:00406DDF		      mov     eax, [esi+4]
CODE:00406DE2		      stosd
CODE:00406DE3		      add     esi, 40h
CODE:00406DE6		      loop    @@exponent_dupe_lop
CODE:00406DE8		      retn
CODE:00406DE8 endp	      mp3_integer_init_exponent
CODE:00406DE8
CODE:00406DE9
CODE:00406DE9 ;	===============	S U B R	O U T I	N E =======================================
CODE:00406DE9
CODE:00406DE9
CODE:00406DE9 proc	      cbrt96 near	      ;	...
CODE:00406DE9		      sub     esp, 18h	      ;	cube root, val^(1/3), from https://gist.github.com/anonymous/729557
CODE:00406DE9					      ;	in:  ebx:edx:eax = unsigned 96bit input	(integer)
CODE:00406DE9					      ;	out: ebx	 = unsigned 32bit result (with fractional bits)
CODE:00406DE9					      ;	out: cl		 = number of fractional	bits
CODE:00406DEC		      mov     [esp], eax
CODE:00406DEF		      mov     [esp+4], edx
CODE:00406DF3		      mov     [esp+8], ebx
CODE:00406DF7		      mov     [dword ptr esp+0Ch], 0
CODE:00406DFF		      mov     [dword ptr esp+10h], 0
CODE:00406E07		      mov     [dword ptr esp+14h], 0
CODE:00406E0F		      xor     ebx, ebx	      ;	result.value
CODE:00406E11		      mov     cl, 0	      ;	result.fraction
CODE:00406E13		      or      eax, edx	      ;	skip if	zero
CODE:00406E15		      jz      short @@pre_shift_done
CODE:00406E17
CODE:00406E17 @@pre_shift_lop:			      ;	...
CODE:00406E17		      test    [dword ptr esp+8], 0E0000000h
CODE:00406E1F		      jnz     short @@pre_shift_done
CODE:00406E21		      shl     [dword ptr esp], 1
CODE:00406E24		      rcl     [dword ptr esp+4], 1
CODE:00406E28		      rcl     [dword ptr esp+8], 1
CODE:00406E2C		      shl     [dword ptr esp], 1
CODE:00406E2F		      rcl     [dword ptr esp+4], 1
CODE:00406E33		      rcl     [dword ptr esp+8], 1
CODE:00406E37		      shl     [dword ptr esp], 1
CODE:00406E3A		      rcl     [dword ptr esp+4], 1
CODE:00406E3E		      rcl     [dword ptr esp+8], 1
CODE:00406E42		      inc     cl
CODE:00406E44		      jmp     short @@pre_shift_lop
CODE:00406E46 ;	---------------------------------------------------------------------------
CODE:00406E46
CODE:00406E46 @@pre_shift_done:			      ;	...
CODE:00406E46		      mov     ch, 20h	      ;	loopcount
CODE:00406E48
CODE:00406E48 @@lop:				      ;	...
CODE:00406E48		      add     ebx, ebx	      ;	result*2
CODE:00406E4A		      mov     eax, ebx	      ;	y
CODE:00406E4C		      inc     ebx	      ;	result+1
CODE:00406E4D		      mul     ebx	      ;	y*(y+1)
CODE:00406E4F		      mov     esi, eax
CODE:00406E51		      mov     edi, edx
CODE:00406E53		      xor     ebp, ebp
CODE:00406E55		      stc
CODE:00406E56		      adc     esi, esi	      ;	y*(y+1)*2+1
CODE:00406E58		      adc     edi, edi
CODE:00406E5A		      adc     ebp, ebp
CODE:00406E5C		      add     esi, eax
CODE:00406E5E		      adc     edi, edx	      ;	y*(y+1)*3+1
CODE:00406E60		      adc     ebp, 0
CODE:00406E63		      shl     [dword ptr esp], 1
CODE:00406E66		      rcl     [dword ptr esp+4], 1
CODE:00406E6A		      rcl     [dword ptr esp+8], 1 ; shl 3
CODE:00406E6E		      rcl     [dword ptr esp+0Ch], 1
CODE:00406E72		      rcl     [dword ptr esp+10h], 1
CODE:00406E76		      rcl     [dword ptr esp+14h], 1
CODE:00406E7A		      shl     [dword ptr esp], 1
CODE:00406E7D		      rcl     [dword ptr esp+4], 1
CODE:00406E81		      rcl     [dword ptr esp+8], 1
CODE:00406E85		      rcl     [dword ptr esp+0Ch], 1
CODE:00406E89		      rcl     [dword ptr esp+10h], 1
CODE:00406E8D		      rcl     [dword ptr esp+14h], 1
CODE:00406E91		      shl     [dword ptr esp], 1
CODE:00406E94		      rcl     [dword ptr esp+4], 1
CODE:00406E98		      rcl     [dword ptr esp+8], 1
CODE:00406E9C		      rcl     [dword ptr esp+0Ch], 1
CODE:00406EA0		      rcl     [dword ptr esp+10h], 1
CODE:00406EA4		      rcl     [dword ptr esp+14h], 1
CODE:00406EA8		      sub     [esp+0Ch], esi
CODE:00406EAC		      sbb     [esp+10h], edi  ;	sub/compare
CODE:00406EB0		      sbb     [esp+14h], ebp
CODE:00406EB4		      jnb     short @@next
CODE:00406EB6		      dec     ebx
CODE:00406EB7		      add     [esp+0Ch], esi
CODE:00406EBB		      adc     [esp+10h], edi  ;	undo
CODE:00406EBF		      adc     [esp+14h], ebp
CODE:00406EC3
CODE:00406EC3 @@next:				      ;	...
CODE:00406EC3		      dec     ch
CODE:00406EC5		      jnz     short @@lop
CODE:00406EC7		      add     esp, 18h
CODE:00406ECA		      retn
CODE:00406ECA endp	      cbrt96
CODE:00406ECA
CODE:00406ECB ;	---------------------------------------------------------------------------
CODE:00406ECB
CODE:00406ECB mp3_init_log_constants:		      ;	...
CODE:00406ECB		      retn
CODE:00406ECC
CODE:00406ECC ;	===============	S U B R	O U T I	N E =======================================
CODE:00406ECC
CODE:00406ECC
CODE:00406ECC proc	      mp3_build_huff_table_root	near ; ...
CODE:00406ECC
CODE:00406ECC ;	FUNCTION CHUNK AT CODE:004081F4	SIZE 00000008 BYTES
CODE:00406ECC
CODE:00406ECC		      mov     [ds:_@@nb_codes],	eax ; "init_vlc"
CODE:00406ED1		      mov     [ds:_@@prefix_numbits], 0
CODE:00406EDB		      mov     [ds:_@@prefix_pattern], 0
CODE:00406EE5		      pusha
CODE:00406EE6		      mov     ecx, eax
CODE:00406EE8		      xor     eax, eax
CODE:00406EEA
CODE:00406EEA @@prescan_lop:			      ;	...
CODE:00406EEA		      cmp     al, [ebx]
CODE:00406EEC		      ja      short @@prescan_next
CODE:00406EEE		      mov     al, [ebx]
CODE:00406EF0
CODE:00406EF0 @@prescan_next:			      ;	...
CODE:00406EF0		      inc     ebx
CODE:00406EF1		      loop    @@prescan_lop
CODE:00406EF3		      cmp     al, 9	      ;	CHILD_BITS
CODE:00406EF5		      jb      short @@prescan_this_limit
CODE:00406EF7		      mov     al, 9
CODE:00406EF9
CODE:00406EF9 @@prescan_this_limit:		      ;	...
CODE:00406EF9		      mov     [ds:_@@table_nb_bits], eax
CODE:00406EFE		      popa
CODE:00406EFF
CODE:00406EFF @@mp3_build_huff_table_recursive_child: ;	...
CODE:00406EFF		      mov     ecx, [ds:_@@table_nb_bits]
CODE:00406F05		      mov     eax, 1
CODE:00406F0A		      shl     eax, cl
CODE:00406F0C		      mov     [ds:_@@curr_table_size], eax
CODE:00406F11		      dec     eax
CODE:00406F12		      mov     [ds:_@@curr_table_mask], eax
CODE:00406F17		      pusha
CODE:00406F18		      mov     ebx, [ds:mp3_huff_num_entries]
CODE:00406F1E		      mov     [ds:_@@curr_table_index],	ebx
CODE:00406F24		      add     ebx, [ds:_@@curr_table_size]
CODE:00406F2A		      mov     [ds:mp3_huff_num_entries], ebx
CODE:00406F30		      cmp     [ds:mp3_huff_num_entries], 11776 ; HUFF_TREE_SIZE/4
CODE:00406F3A		      ja      fatalunexpected
CODE:00406F40		      popa
CODE:00406F41		      mov     edi, offset huff_tree_buf
CODE:00406F46		      mov     eax, [ds:_@@curr_table_index]
CODE:00406F4B		      mov     [edi+edx*4], ax
CODE:00406F4F		      mov     eax, [ds:_@@table_nb_bits]
CODE:00406F54		      neg     eax
CODE:00406F56		      mov     [edi+edx*4+2], ax
CODE:00406F5B		      mov     edi, offset huff_tree_buf
CODE:00406F60		      mov     edx, [ds:_@@curr_table_index]
CODE:00406F66		      mov     ecx, [ds:_@@curr_table_size]
CODE:00406F6C
CODE:00406F6C @@clear_table_lop:		      ;	...
CODE:00406F6C		      mov     [word ptr	edi+edx*4], 0FFFFh
CODE:00406F72		      mov     [word ptr	edi+edx*4+2], 0
CODE:00406F79		      inc     edx
CODE:00406F7A		      loop    @@clear_table_lop
CODE:00406F7C		      push    ebx
CODE:00406F7D		      push    esi
CODE:00406F7E		      xor     edx, edx
CODE:00406F80
CODE:00406F80 @@make_table_lop:			      ;	...
CODE:00406F80		      movzx   ecx, [byte ptr ebx]
CODE:00406F83		      movzx   eax, [word ptr esi]
CODE:00406F86		      sub     ecx, [ds:_@@prefix_numbits]
CODE:00406F8C		      jle     short @@make_table_lop_next
CODE:00406F8E		      shr     eax, cl
CODE:00406F90		      cmp     eax, [ds:_@@prefix_pattern]
CODE:00406F96		      jnz     short @@make_table_lop_next
CODE:00406F98		      mov     edi, offset huff_tree_buf
CODE:00406F9D		      movzx   eax, [word ptr esi]
CODE:00406FA0		      sub     ecx, [ds:_@@table_nb_bits]
CODE:00406FA6		      ja      short @@create_child_table
CODE:00406FA8		      neg     ecx
CODE:00406FAA		      shl     eax, cl
CODE:00406FAC		      and     eax, [ds:_@@curr_table_mask]
CODE:00406FB2		      add     eax, [ds:_@@curr_table_index]
CODE:00406FB8		      lea     edi, [edi+eax*4]
CODE:00406FBB		      mov     eax, 1
CODE:00406FC0		      shl     eax, cl
CODE:00406FC2		      mov     ecx, eax
CODE:00406FC4		      movzx   eax, [byte ptr ebx]
CODE:00406FC7		      sub     eax, [ds:_@@prefix_numbits]
CODE:00406FCD
CODE:00406FCD @@make_rept_lop:			      ;	...
CODE:00406FCD		      cmp     [word ptr	edi+2],	0
CODE:00406FD2		      jnz     fatalunexpected
CODE:00406FD8		      mov     [edi], dx
CODE:00406FDB		      mov     [edi+2], ax
CODE:00406FDF		      add     edi, 4
CODE:00406FE2		      loop    @@make_rept_lop
CODE:00406FE4		      jmp     short @@make_table_lop_next
CODE:00406FE6 ;	---------------------------------------------------------------------------
CODE:00406FE6
CODE:00406FE6 @@create_child_table:		      ;	...
CODE:00406FE6		      shr     eax, cl
CODE:00406FE8		      and     eax, [ds:_@@curr_table_mask]
CODE:00406FEE		      add     eax, [ds:_@@curr_table_index]
CODE:00406FF4		      neg     ecx
CODE:00406FF6		      cmp     [edi+eax*4+2], cx
CODE:00406FFB		      jl      short @@make_table_lop_next
CODE:00406FFD		      mov     [edi+eax*4+2], cx
CODE:00407002
CODE:00407002 @@make_table_lop_next:		      ;	...
CODE:00407002		      add     esi, 2
CODE:00407005		      inc     ebx
CODE:00407006		      inc     edx
CODE:00407007		      cmp     edx, [ds:_@@nb_codes]
CODE:0040700D		      jb      @@make_table_lop
CODE:00407013		      pop     esi
CODE:00407014		      pop     ebx
CODE:00407015		      mov     ecx, [ds:_@@curr_table_size]
CODE:0040701B		      mov     edx, [ds:_@@curr_table_index]
CODE:00407021
CODE:00407021 @@make_child_tables_lop:		      ;	...
CODE:00407021		      mov     edi, offset huff_tree_buf
CODE:00407026		      movsx   eax, [word ptr edi+edx*4+2]
CODE:0040702B		      cmp     eax, 0
CODE:0040702E		      jns     short @@make_child_tables_lop_next
CODE:00407030		      neg     eax
CODE:00407032		      cmp     eax, [ds:_@@table_nb_bits]
CODE:00407038		      jbe     short @@make_child_tables_this
CODE:0040703A		      mov     eax, [ds:_@@table_nb_bits]
CODE:0040703F
CODE:0040703F @@make_child_tables_this:		      ;	...
CODE:0040703F		      push    ecx
CODE:00407040		      push    edx
CODE:00407041		      push    [ds:_@@curr_table_index]
CODE:00407047		      push    [ds:_@@table_nb_bits]
CODE:0040704D		      push    [ds:_@@prefix_numbits]
CODE:00407053		      push    [ds:_@@prefix_pattern]
CODE:00407059		      mov     ecx, [ds:_@@table_nb_bits]
CODE:0040705F		      mov     [ds:_@@table_nb_bits], eax
CODE:00407064		      add     [ds:_@@prefix_numbits], ecx
CODE:0040706A		      shl     [ds:_@@prefix_pattern], cl
CODE:00407070		      mov     eax, edx
CODE:00407072		      sub     eax, [ds:_@@curr_table_index]
CODE:00407078		      or      [ds:_@@prefix_pattern], eax
CODE:0040707E		      call    @@mp3_build_huff_table_recursive_child
CODE:00407083		      pop     [ds:_@@prefix_pattern]
CODE:00407089		      pop     [ds:_@@prefix_numbits]
CODE:0040708F		      pop     [ds:_@@table_nb_bits]
CODE:00407095		      pop     [ds:_@@curr_table_index]
CODE:0040709B		      pop     edx
CODE:0040709C		      pop     ecx
CODE:0040709D
CODE:0040709D @@make_child_tables_lop_next:	      ;	...
CODE:0040709D		      inc     edx
CODE:0040709E		      loop    @@make_child_tables_lop
CODE:004070A0		      retn
CODE:004070A0 endp	      mp3_build_huff_table_root	; sp-analysis failed
CODE:004070A0
CODE:004070A1
CODE:004070A1 ;	===============	S U B R	O U T I	N E =======================================
CODE:004070A1
CODE:004070A1
CODE:004070A1 proc	      mp3_exclude_id3_and_tag near ; ...
CODE:004070A1		      mov     esi, [ds:stream_pos]
CODE:004070A7		      mov     ecx, [ds:bytes_left]
CODE:004070AD		      cmp     ecx, 10
CODE:004070B0		      jb      short @@no_id3
CODE:004070B2		      mov     eax, [esi]
CODE:004070B4		      and     eax, 0FFFFFFh
CODE:004070B9		      cmp     eax, '3DI'      ; "ID3"
CODE:004070BE		      jnz     short @@no_id3
CODE:004070C0		      mov     eax, [esi+6]
CODE:004070C3		      test    eax, 80808080h
CODE:004070C8		      jnz     short @@no_id3
CODE:004070CA
CODE:004070CA xlat_4x7bit_to_28bit:
CODE:004070CA		      xchg    al, ah
CODE:004070CC		      shl     al, 1
CODE:004070CE		      shl     ax, 1
CODE:004070D1		      shr     ax, 2
CODE:004070D5		      ror     eax, 10h
CODE:004070D8		      xchg    al, ah
CODE:004070DA		      shl     al, 1
CODE:004070DC		      shl     ax, 1
CODE:004070DF		      shr     eax, 2
CODE:004070E2		      add     eax, 0Ah
CODE:004070E5		      cmp     ecx, eax
CODE:004070E7		      jb      short @@no_id3
CODE:004070E9		      add     esi, eax
CODE:004070EB		      sub     ecx, eax
CODE:004070ED		      mov     [ds:mp3_id3_size], eax
CODE:004070F2
CODE:004070F2 @@no_id3:				      ;	...
CODE:004070F2		      mov     edx, 80h
CODE:004070F7		      cmp     ecx, edx
CODE:004070F9		      jb      short @@no_tag_or_ext
CODE:004070FB		      mov     eax, [esi+ecx-80h]
CODE:004070FF		      and     eax, 0FFFFFFh
CODE:00407104		      cmp     eax, 'GAT'      ; "TAG"
CODE:00407109		      jz      @@got_tag_size_edx
CODE:0040710F		      cmp     eax, 'TXE'
CODE:00407114		      jz      @@got_tag_size_edx
CODE:0040711A
CODE:0040711A @@no_tag_or_ext:			      ;	...
CODE:0040711A		      mov     edx, 0E3h
CODE:0040711F		      cmp     ecx, edx
CODE:00407121		      jb      short @@no_tagplus
CODE:00407123		      cmp     [dword ptr esi+ecx-0E3h],	'+GAT' ; "TAG+"
CODE:0040712E		      jz      @@got_tag_size_edx
CODE:00407134
CODE:00407134 @@no_tagplus:			      ;	...
CODE:00407134		      mov     edx, 20	      ;	10+10
CODE:00407139		      cmp     ecx, edx
CODE:0040713B		      jb      short @@no_3di  ;	"3DI",04h
CODE:0040713D		      cmp     [dword ptr esi+ecx-10], 4494433h ; 'ID3'+04000000h
CODE:00407145		      jnz     short @@no_3di
CODE:00407147		      test    [byte ptr	esi+ecx-5], 10h	; bit 4
CODE:0040714C		      jz      short @@no_3di
CODE:0040714E		      mov     eax, [esi+ecx-4]
CODE:00407152		      test    eax, 80808080h
CODE:00407157		      jnz     short @@no_3di
CODE:00407159
CODE:00407159 @xlat_4x7bit_to_28bit:
CODE:00407159		      xchg    al, ah
CODE:0040715B		      shl     al, 1
CODE:0040715D		      shl     ax, 1
CODE:00407160		      shr     ax, 2
CODE:00407164		      ror     eax, 10h
CODE:00407167		      xchg    al, ah
CODE:00407169		      shl     al, 1
CODE:0040716B		      shl     ax, 1
CODE:0040716E		      shr     eax, 2
CODE:00407171		      lea     edx, [eax+20]   ;	[eax+10+10] ; hdr+footer siz
CODE:00407174		      jmp     @@got_tag_size_edx
CODE:00407179 ;	---------------------------------------------------------------------------
CODE:00407179
CODE:00407179 @@no_3di:				      ;	...
CODE:00407179		      cmp     [dword ptr esi+ecx-32], 'TEPA' ; [esi+ecx-32+0]
CODE:00407179					      ;	check "APETAGEX"
CODE:00407181		      jnz     short @@no_ape
CODE:00407183		      cmp     [dword ptr esi+ecx-28], 'XEGA' ; [esi+ecx-32+4]
CODE:0040718B		      jnz     short @@no_ape
CODE:0040718D		      mov     edx, [esi+ecx-20]	; [esi+ecx-32+12] ; get	size
CODE:00407191		      test    [dword ptr esi+ecx-12], 80000000h	; [esi+ecx-32+20],1 shl	31
CODE:00407199		      jz      short @@no_ape_header
CODE:0040719B		      add     edx, 32	      ;	hdr.size
CODE:0040719E
CODE:0040719E @@no_ape_header:			      ;	...
CODE:0040719E		      jmp     @@got_tag_size_edx
CODE:004071A3 ;	---------------------------------------------------------------------------
CODE:004071A3
CODE:004071A3 @@no_ape:				      ;	...
CODE:004071A3		      mov     edx, 20	      ;	11+9
CODE:004071A8		      cmp     ecx, edx	      ;	"LYRICSEND" or "LYRICS200"
CODE:004071A8					      ;	(11+N+9	bytes each)
CODE:004071AA		      jb      short @@no_lyrics
CODE:004071AC		      cmp     [dword ptr esi+ecx-9], 'IRYL'
CODE:004071B4		      jnz     short @@no_lyrics
CODE:004071B6		      cmp     [byte ptr	esi+ecx-5], 'C'
CODE:004071BB		      jnz     short @@no_lyrics
CODE:004071BD		      cmp     [dword ptr esi+ecx-4], 'DNES'
CODE:004071C5		      jz      short @@lyrics3_v1
CODE:004071C7		      cmp     [dword ptr esi+ecx-4], '002S'
CODE:004071CF		      jz      short @@lyrics3_v2
CODE:004071D1		      jnz     short @@no_lyrics
CODE:004071D3
CODE:004071D3 @@lyrics3_v1:			      ;	...
CODE:004071D3		      mov     edx, 20	      ;	11+9
CODE:004071D8
CODE:004071D8 @@lyrics3_v1_size_lop:		      ;	...
CODE:004071D8		      lea     eax, [esi+ecx]
CODE:004071DB		      sub     eax, edx
CODE:004071DD		      cmp     [dword ptr eax], 'IRYL' ; "LYRICSBEGIN"
CODE:004071E3		      jnz     short @@lyrics3_v1_size_next
CODE:004071E5		      cmp     [dword ptr eax+4], 'EBSC'
CODE:004071EC		      jnz     short @@lyrics3_v1_size_next
CODE:004071EE		      cmp     [dword ptr eax+7], 'NIGE'
CODE:004071F5		      jz      short @@got_tag_size_edx
CODE:004071F7
CODE:004071F7 @@lyrics3_v1_size_next:		      ;	...
CODE:004071F7		      inc     edx
CODE:004071F8		      cmp     edx, 5120
CODE:004071FE		      ja      short @@no_lyrics
CODE:00407200		      cmp     edx, ecx
CODE:00407202		      jbe     short @@lyrics3_v1_size_lop
CODE:00407204		      jmp     short @@no_lyrics
CODE:00407206 ;	---------------------------------------------------------------------------
CODE:00407206
CODE:00407206 @@lyrics3_v2:			      ;	...
CODE:00407206		      push    ecx
CODE:00407207		      push    esi
CODE:00407208		      lea     esi, [esi+ecx-15]	; [esi+ecx-6-9]
CODE:0040720C		      mov     ecx, 6
CODE:00407211		      xor     edx, edx
CODE:00407213
CODE:00407213 @@lyrics3_v2_size_lop:		      ;	...
CODE:00407213		      imul    edx, 10
CODE:00407216		      movzx   eax, [byte ptr esi]
CODE:00407219		      inc     esi
CODE:0040721A		      sub     al, 30h
CODE:0040721C		      add     edx, eax
CODE:0040721E		      loop    @@lyrics3_v2_size_lop
CODE:00407220		      pop     esi
CODE:00407221		      pop     ecx
CODE:00407222		      add     edx, 0Fh	      ;	6+9
CODE:00407225		      jmp     short @@got_tag_size_edx
CODE:00407227 ;	---------------------------------------------------------------------------
CODE:00407227
CODE:00407227 @@no_lyrics:			      ;	...
CODE:00407227		      jmp     short @@footer_tag_all_done
CODE:00407229 ;	---------------------------------------------------------------------------
CODE:00407229
CODE:00407229 @@got_tag_size_edx:		      ;	...
CODE:00407229		      mov     eax, edx
CODE:0040722B		      call    wr_decimal_eax
CODE:00407230		      call    wrcrlf
CODE:00407235		      sub     ecx, edx
CODE:00407237		      jb      fatalunexpected
CODE:0040723D		      add     [ds:mp3_tag_size], edx
CODE:00407243		      jmp     @@no_id3
CODE:00407248 ;	---------------------------------------------------------------------------
CODE:00407248
CODE:00407248 @@footer_tag_all_done:		      ;	...
CODE:00407248		      mov     [ds:stream_pos], esi
CODE:0040724E		      mov     [ds:bytes_left], ecx
CODE:00407254		      retn
CODE:00407254 endp	      mp3_exclude_id3_and_tag
CODE:00407254
CODE:00407255
CODE:00407255 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407255
CODE:00407255
CODE:00407255 proc	      mp3_detect_free_format_block_size	near ; ...
CODE:00407255		      cmp     [ds:mp3_free_format_frame_size], 0
CODE:0040725C		      jnz     @@already_detected
CODE:00407262		      xor     edx, edx
CODE:00407264
CODE:00407264 @@find_distance_lop:		      ;	...
CODE:00407264		      cmp     edx, [ds:mp3_src_remain]
CODE:0040726A		      jz      short @@match_eof
CODE:0040726C		      lea     eax, [edx+4]
CODE:0040726F		      cmp     eax, [ds:mp3_src_remain]
CODE:00407275		      ja      short @@find_distance_failed
CODE:00407277		      mov     eax, [esi+edx]
CODE:0040727A		      call    bswap_eax
CODE:0040727F		      xor     eax, [ds:mp3_hdr_32bit_header]
CODE:00407285		      and     eax, 0FFFE0C00h
CODE:0040728A		      jz      short @@match_eof
CODE:0040728C
CODE:0040728C @@find_distance_next:		      ;	...
CODE:0040728C		      inc     edx
CODE:0040728D		      cmp     edx, 1000h
CODE:00407293		      jbe     short @@find_distance_lop
CODE:00407295
CODE:00407295 @@find_distance_failed:		      ;	...
CODE:00407295		      stc
CODE:00407296		      retn
CODE:00407297 ;	---------------------------------------------------------------------------
CODE:00407297
CODE:00407297 @@match_eof:			      ;	...
CODE:00407297		      mov     eax, edx
CODE:00407299		      sub     eax, [ds:mp3_hdr_flag_padding]
CODE:0040729F		      cmp     eax, 4
CODE:004072A2		      jb      short @@find_distance_next
CODE:004072A4		      mov     [ds:mp3_free_format_frame_size], eax
CODE:004072A9		      xor     ebx, ebx
CODE:004072AB
CODE:004072AB @@confirm_distance_lop:		      ;	...
CODE:004072AB		      mov     eax, [esi+ebx]
CODE:004072AE		      call    bswap_eax
CODE:004072B3		      shr     eax, 10	      ;	9+1
CODE:004072B6		      adc     ebx, [ds:mp3_free_format_frame_size]
CODE:004072BC		      cmp     ebx, [ds:mp3_src_remain]
CODE:004072C2		      jz      short @@confirm_distance_match_eof
CODE:004072C4		      lea     eax, [ebx+4]
CODE:004072C7		      cmp     eax, [ds:mp3_src_remain]
CODE:004072CD		      ja      short @@find_distance_next
CODE:004072CF		      mov     eax, [esi+ebx]
CODE:004072D2		      call    bswap_eax
CODE:004072D7		      xor     eax, [ds:mp3_hdr_32bit_header]
CODE:004072DD		      and     eax, 0FFFE0C00h
CODE:004072E2		      jnz     short @@find_distance_next
CODE:004072E4		      jmp     short @@confirm_distance_lop
CODE:004072E6 ;	---------------------------------------------------------------------------
CODE:004072E6
CODE:004072E6 @@confirm_distance_match_eof:	      ;	...
CODE:004072E6		      mov     eax, [ds:mp3_free_format_frame_size]
CODE:004072EB		      shl     eax, 3
CODE:004072EE		      mul     [ds:mp3_sample_rate]
CODE:004072F4		      mov     ecx, [ds:mp3_nb_granules]
CODE:004072FA		      imul    ecx, 240h
CODE:00407300		      div     ecx
CODE:00407302		      mov     [ds:mp3_bit_rate], eax
CODE:00407307
CODE:00407307 @@already_detected:		      ;	...
CODE:00407307		      clc
CODE:00407308		      retn
CODE:00407308 endp	      mp3_detect_free_format_block_size
CODE:00407308
CODE:00407309
CODE:00407309 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407309
CODE:00407309
CODE:00407309 proc	      mp3_check_xing_info near ; ...
CODE:00407309		      mov     [ds:mp3_xing_id],	0
CODE:00407313		      mov     [ds:mp3_xing_frames], 0
CODE:0040731D		      mov     [ds:mp3_xing_filesize], 0
CODE:00407327		      mov     esi, [ds:mp3_src_data_location]
CODE:0040732D		      lodsd
CODE:0040732E		      cmp     eax, 'gniX'
CODE:00407333		      jz      short @@xing
CODE:00407335		      retn
CODE:00407336 ;	---------------------------------------------------------------------------
CODE:00407336
CODE:00407336 @@xing:				      ;	...
CODE:00407336		      mov     [ds:mp3_xing_id],	eax
CODE:0040733B		      lodsd
CODE:0040733C		      call    bswap_eax
CODE:00407341		      mov     [ds:mp3_xing_flags], eax
CODE:00407346		      mov     edx, eax
CODE:00407348		      test    edx, 1
CODE:0040734E		      jz      short @@no_xing_frames
CODE:00407350		      lodsd
CODE:00407351		      call    bswap_eax
CODE:00407356		      mov     [ds:mp3_xing_frames], eax
CODE:0040735B
CODE:0040735B @@no_xing_frames:			      ;	...
CODE:0040735B		      test    edx, 2	      ;	1 shl 1
CODE:00407361		      jz      short @@no_xing_filesize
CODE:00407363		      lodsd
CODE:00407364		      call    bswap_eax
CODE:00407369		      mov     [ds:mp3_xing_filesize], eax
CODE:0040736E
CODE:0040736E @@no_xing_filesize:		      ;	...
CODE:0040736E		      test    edx, 4	      ;	1 shl 2
CODE:00407374		      jz      short @@no_xing_toc
CODE:00407376		      mov     ecx, 100
CODE:0040737B		      mov     edi, offset mp3_xing_toc
CODE:00407380		      rep movsb
CODE:00407382
CODE:00407382 @@no_xing_toc:			      ;	...
CODE:00407382		      test    edx, 8	      ;	1 shl 3
CODE:00407388		      jz      short @@no_xing_vbr_scale
CODE:0040738A		      lodsd
CODE:0040738B		      call    bswap_eax
CODE:00407390		      mov     [ds:mp3_xing_vbr_scale], eax
CODE:00407395
CODE:00407395 @@no_xing_vbr_scale:		      ;	...
CODE:00407395		      mov     [ds:mp3_bit_rate], 0
CODE:0040739F		      mov     eax, [ds:mp3_sample_rate]
CODE:004073A4		      shl     eax, 3
CODE:004073A7		      mul     [ds:mp3_xing_filesize]
CODE:004073AD		      mov     ecx, [ds:mp3_xing_frames]
CODE:004073B3		      imul    ecx, [ds:mp3_nb_granules]
CODE:004073BA		      imul    ecx, 576	      ;	18*32
CODE:004073C0		      cmp     edx, ecx
CODE:004073C2		      jnb     short @@overflow
CODE:004073C4		      div     ecx
CODE:004073C6		      mov     [ds:mp3_bit_rate], eax
CODE:004073CB
CODE:004073CB @@overflow:			      ;	...
CODE:004073CB		      retn
CODE:004073CB endp	      mp3_check_xing_info
CODE:004073CB
CODE:004073CB ;	---------------------------------------------------------------------------
CODE:004073CC		      align 10h
CODE:004073D0
CODE:004073D0 ;	===============	S U B R	O U T I	N E =======================================
CODE:004073D0
CODE:004073D0
CODE:004073D0 proc	      mp3_decode_frame near   ;	...
CODE:004073D0		      mov     [ds:mp3_src_remain], ecx
CODE:004073D6		      mov     [ds:mp3_samples_dst], edi
CODE:004073DC		      call    xmit_force_highest_priority
CODE:004073E1		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004073E8		      jz      short @@@no_rdtsc_supported@
CODE:004073EA		      rdtsc
CODE:004073EC		      sub     [ds:rdtsc_total],	eax
CODE:004073F2		      sbb     [ds:rdtsc_total+4], edx
CODE:004073F8
CODE:004073F8 @@@no_rdtsc_supported@:		      ;	...
CODE:004073F8		      call    mp3_search_get_header
CODE:004073FD		      jb      @@error
CODE:00407403		      mov     eax, [ds:mp3_src_frame_size]
CODE:00407408		      cmp     eax, 0
CODE:0040740B		      jle     @@error
CODE:00407411		      cmp     eax, [ds:mp3_src_remain]
CODE:00407417		      ja      @@error
CODE:0040741D		      mov     [ds:mp3_bitstream_start],	esi
CODE:00407423		      mov     eax, 32
CODE:00407428
CODE:00407428 mp3mac_bitstream_set_position:
CODE:00407428		      mov     esi, [ds:mp3_bitstream_start]
CODE:0040742E		      mov     cl, al
CODE:00407430		      shr     eax, 3
CODE:00407433		      and     cl, 7
CODE:00407436		      add     esi, eax
CODE:00407438		      call    mp3_recollect_bits
CODE:0040743D
CODE:0040743D mp3mac_get_n_bits:		      ;
CODE:0040743D		      mov     eax, ebp	      ;	mp3_col3
CODE:0040743F		      shl     ebp, cl
CODE:00407441		      rol     eax, cl
CODE:00407443		      xor     eax, ebp	      ;	mp3_col32
CODE:00407445		      sub     ch, cl	      ;	sub mp3_colNN,num
CODE:00407447		      jns     short @@cont
CODE:00407449		      mov     cl, ch	      ;
CODE:00407449					      ;	mov cl,mp3_colNN
CODE:0040744B		      add     ch, 16
CODE:0040744E		      rol     ebp, cl	      ;	rol mp3_col32,cl
CODE:00407450		      mov     bp, [esi]	      ;	mov mp3_col16,word ptr [esi]
CODE:00407453		      add     esi, 2
CODE:00407456		      ror     bp, 8	      ;	endianess
CODE:0040745A		      ror     ebp, cl	      ;	ror mp3_col32,cl
CODE:0040745C
CODE:0040745C @@cont:				      ;	...
CODE:0040745C		      call    mp3_bitstream_read_header_extra
CODE:00407461		      call    mp3_bitstream_read_granules
CODE:00407466		      jb      @@error
CODE:0040746C		      call    mp3_uncollect_bits
CODE:00407471		      mov     [ds:mp3_src_data_location], esi
CODE:00407477		      cmp     [ds:mp3_samples_dst], 0
CODE:0040747E		      jz      @@skip_decoding
CODE:00407484		      call    mp3_bitstream_append_to_main_data_pool
CODE:00407489		      cmp     [ds:mp3_samples_output_size], 0
CODE:00407490		      jz      @@skip_decoding
CODE:00407496		      mov     [ds:mp3_curr_granule], 0
CODE:004074A0		      mov     ebx, offset mp3_granules
CODE:004074A5
CODE:004074A5 @@body_granule_lop:		      ;	...
CODE:004074A5		      mov     [ds:_@@granule_addr], ebx
CODE:004074AB		      mov     [ds:mp3_curr_channel], 0
CODE:004074B5
CODE:004074B5 @@body_channel_lop:		      ;	...
CODE:004074B5		      mov     eax, [ebx+4]    ;	[ebx+$mp3gr_part2_3_start]
CODE:004074B8		      mov     esi, [ds:mp3_bitstream_start]
CODE:004074BE		      mov     cl, al	      ;	mp3mac_bitstream_set_position
CODE:004074C0		      shr     eax, 3
CODE:004074C3		      and     cl, 7
CODE:004074C6		      add     esi, eax
CODE:004074C8		      call    mp3_recollect_bits
CODE:004074CD		      mov     eax, ebp	      ;	mp3mac_get_n_bits cl
CODE:004074CF		      shl     ebp, cl
CODE:004074D1		      rol     eax, cl
CODE:004074D3		      xor     eax, ebp
CODE:004074D5		      sub     ch, cl
CODE:004074D7		      jns     short @@cont@
CODE:004074D9		      mov     cl, ch	      ;	mp3mac_collect_more
CODE:004074DB		      add     ch, 16
CODE:004074DE		      rol     ebp, cl
CODE:004074E0		      mov     bp, [esi]
CODE:004074E3		      add     esi, 2
CODE:004074E6		      ror     bp, 8
CODE:004074EA		      ror     ebp, cl
CODE:004074EC
CODE:004074EC @@cont@:				      ;	...
CODE:004074EC		      call    mp3_bitstream_read_scalefacs
CODE:004074F1		      call    mp3_get_exponents_from_scale_factors
CODE:004074F6		      call    mp3_huffman_decode ; reads up to $mp3gr_part2_3_end
CODE:004074FB		      jb      @@error
CODE:00407501
CODE:00407501 @@body_channel_next:		      ;
CODE:00407501		      add     ebx, 4928	      ;	$mp3gr_entrysiz*2
CODE:00407507		      inc     [ds:mp3_curr_channel]
CODE:0040750D		      mov     eax, [ds:mp3_curr_channel]
CODE:00407512		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00407518		      jb      short @@body_channel_lop
CODE:0040751A		      mov     ebx, [ds:_@@granule_addr]
CODE:00407520
CODE:00407520 mp3mac_push_bitstream:
CODE:00407520		      push    ecx
CODE:00407521		      push    ebp
CODE:00407522		      push    esi
CODE:00407523		      call    mp3_compute_stereo
CODE:00407528		      mov     [ds:mp3_curr_channel], 0
CODE:00407532
CODE:00407532 @@cast_channel_lop:		      ;	...
CODE:00407532		      call    mp3_reorder_block
CODE:00407537		      call    mp3_compute_antialias
CODE:0040753C		      call    mp3_compute_imdct
CODE:00407541		      add     ebx, 4928	      ;	$mp3gr_entrysiz*2
CODE:00407547		      inc     [ds:mp3_curr_channel]
CODE:0040754D		      mov     eax, [ds:mp3_curr_channel]
CODE:00407552		      cmp     eax, [ds:mp3_output_num_channels]
CODE:00407558		      jb      short @@cast_channel_lop
CODE:0040755A
CODE:0040755A mp3mac_pop_bitstream:
CODE:0040755A		      pop     esi
CODE:0040755B		      pop     ebp
CODE:0040755C		      pop     ecx
CODE:0040755D		      mov     ebx, [ds:_@@granule_addr]
CODE:00407563		      add     ebx, 2464	      ;	$mp3gr_entrysiz
CODE:00407569		      inc     [ds:mp3_curr_granule]
CODE:0040756F		      mov     eax, [ds:mp3_curr_granule]
CODE:00407574		      cmp     eax, [ds:mp3_nb_granules]
CODE:0040757A		      jb      @@body_granule_lop
CODE:00407580		      call    mp3_uncollect_bits
CODE:00407585		      cmp     esi, [ds:main_data_pool_wr_ptr]
CODE:0040758B		      ja      short @@error
CODE:0040758D		      call    [ds:mp3_synth_filter_proc] ; synth maths
CODE:00407593
CODE:00407593 @@skip_decoding:			      ;	...
CODE:00407593		      mov     eax, [ds:mp3_extra_bytes]
CODE:00407598		      add     [ds:mp3_src_frame_size], eax
CODE:0040759E		      mov     eax, [ds:mp3_samples_output_size]
CODE:004075A3		      add     [ds:mp3_total_output_size], eax
CODE:004075A9		      inc     [ds:mp3_num_frames_decoded]
CODE:004075AF
CODE:004075AF timelog_end:			      ;	timelog_end macro ttt
CODE:004075AF		      test    [byte ptr	ds:cpuid_flags], 10h
CODE:004075B6		      jz      short @@no_rdtsc_supported
CODE:004075B8		      rdtsc		      ;	read timestamp counter
CODE:004075BA		      add     [ds:rdtsc_total],	eax
CODE:004075C0		      adc     [ds:rdtsc_total+4], edx
CODE:004075C6
CODE:004075C6 @@no_rdtsc_supported:		      ;	...
CODE:004075C6		      call    xmit_resume_normal_priority
CODE:004075CB		      clc
CODE:004075CC		      retn
CODE:004075CD ;	---------------------------------------------------------------------------
CODE:004075CD
CODE:004075CD @@error:				      ;	...
CODE:004075CD		      test    [byte ptr	ds:cpuid_flags], 10h ; timelog_end rdtsc_total
CODE:004075D4		      jz      short @@no_rdtsc_supported@
CODE:004075D6		      rdtsc
CODE:004075D8		      add     [ds:rdtsc_total],	eax
CODE:004075DE		      adc     [ds:rdtsc_total+4], edx
CODE:004075E4
CODE:004075E4 @@no_rdtsc_supported@:		      ;	...
CODE:004075E4		      call    xmit_resume_normal_priority
CODE:004075E9		      mov     eax, [ds:mp3_extra_bytes]
CODE:004075EE		      add     [ds:mp3_src_frame_size], eax
CODE:004075F4		      stc
CODE:004075F5		      retn
CODE:004075F5 endp	      mp3_decode_frame
CODE:004075F5
CODE:004075F6
CODE:004075F6 ;	===============	S U B R	O U T I	N E =======================================
CODE:004075F6
CODE:004075F6
CODE:004075F6 proc	      mp3_init near	      ;	...
CODE:004075F6		      mov     edi, offset main_data_pool_start ; = mp3_context_start
CODE:004075FB		      mov     ecx, 74916      ;	(mp3_context_end-mp3_context_start)/4
CODE:00407600		      xor     eax, eax	      ;	ERRIF @@len AND	03h
CODE:00407602		      rep stosd		      ;	clear context
CODE:00407604		      mov     [ds:main_data_pool_wr_ptr], offset main_data_pool_start
CODE:0040760E		      cmp     [ds:mp3_initialized], 0
CODE:00407615		      jnz     short @@already_initialized
CODE:00407617		      call    mp3_integer_init_is_stereo_lsf
CODE:0040761C		      call    mp3_integer_init_mdct_windows
CODE:00407621		      call    mp3_integer_init_table_4_3
CODE:00407626		      call    mp3_integer_init_exponent
CODE:0040762B		      call    mp3_any_init_synth_window
CODE:00407630		      call    mp3_any_init_band_indices
CODE:00407635		      call    mp3_any_init_lsf_sf_expand
CODE:0040763A		      call    mp3_any_init_huff_tables
CODE:0040763F		      call    mp3_init_log_constants
CODE:00407644		      call    mp3_init_post_collapse
CODE:00407649		      mov     [ds:mp3_initialized], 1
CODE:00407653
CODE:00407653 @@already_initialized:		      ;	...
CODE:00407653		      movzx   eax, [ds:option_fast]
CODE:0040765A		      mov     [ds:mp3_bytes_per_sample], 2
CODE:00407664		      shl     eax, 1
CODE:00407666		      add     al, [ds:option_8bit]
CODE:0040766C		      test    al, 1
CODE:0040766E		      jz      short @@not_8bit
CODE:00407670		      mov     [ds:mp3_bytes_per_sample], 1
CODE:0040767A
CODE:0040767A @@not_8bit:			      ;	...
CODE:0040767A		      imul    eax, 3
CODE:0040767D		      add     al, [ds:option_rate_shift]
CODE:00407683		      mov     eax, [ds:mp3_synth_filter_procs+eax*4]
CODE:0040768A		      mov     [ds:mp3_synth_filter_proc], eax
CODE:0040768F		      retn
CODE:0040768F endp	      mp3_init
CODE:0040768F
CODE:00407690
CODE:00407690 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407690
CODE:00407690
CODE:00407690 proc	      mp3_check_1st_frame near ; ...
CODE:00407690		      call    mp3_exclude_id3_and_tag
CODE:00407695		      mov     esi, [ds:stream_pos]
CODE:0040769B		      mov     ecx, [ds:bytes_left]
CODE:004076A1		      xor     edi, edi
CODE:004076A3		      xor     ebp, ebp
CODE:004076A5		      call    mp3_decode_frame
CODE:004076AA		      jb      @@error
CODE:004076B0		      call    mp3_check_xing_info
CODE:004076B5		      mov     edx, offset txt_file_size	; "file	size: "
CODE:004076BA		      call    wrstr_edx
CODE:004076BF		      mov     eax, [ds:mp3_file_size]
CODE:004076C4		      call    wr_decimal_eax_with_thousands_seperator
CODE:004076C9		      mov     edx, offset txt_id3_size ; ", id3	size: "
CODE:004076CE		      call    wrstr_edx
CODE:004076D3		      mov     eax, [ds:mp3_id3_size]
CODE:004076D8		      call    wr_decimal_eax_with_thousands_seperator
CODE:004076DD		      mov     edx, offset txt_tag_size ; ", tag	size: "
CODE:004076E2		      call    wrstr_edx
CODE:004076E7		      mov     eax, [ds:mp3_tag_size]
CODE:004076EC		      call    wr_decimal_eax_with_thousands_seperator
CODE:004076F1		      call    wrcrlf
CODE:004076F6		      mov     edx, offset txt_input ; "input: "
CODE:004076FB		      call    wrstr_edx
CODE:00407700		      mov     eax, [ds:mp3_sample_rate]
CODE:00407705		      call    wr_decimal_eax
CODE:0040770A		      mov     edx, offset txt_hz ; " hz, "
CODE:0040770F		      call    wrstr_edx
CODE:00407714		      mov     eax, [ds:mp3_src_num_channels]
CODE:00407719		      call    wr_decimal_eax
CODE:0040771E		      mov     edx, offset txt_channels ; " channels, "
CODE:00407723		      call    wrstr_edx
CODE:00407728		      mov     eax, [ds:mp3_bit_rate]
CODE:0040772D		      xor     edx, edx
CODE:0040772F		      mov     ecx, 1000
CODE:00407734		      div     ecx
CODE:00407736		      call    wr_decimal_eax
CODE:0040773B		      mov     edx, offset txt_kbit_s ; " kbit/s"
CODE:00407740		      call    wrstr_edx
CODE:00407745		      call    wrcrlf
CODE:0040774A		      mov     edx, offset txt_output ; "output:	"
CODE:0040774F		      call    wrstr_edx
CODE:00407754		      mov     eax, [ds:mp3_output_sample_rate]
CODE:00407759		      call    wr_decimal_eax
CODE:0040775E		      mov     edx, offset txt_hz ; " hz, "
CODE:00407763		      call    wrstr_edx
CODE:00407768		      mov     eax, [ds:mp3_output_num_channels]
CODE:0040776D		      call    wr_decimal_eax
CODE:00407772		      mov     edx, offset txt_channels ; " channels, "
CODE:00407777		      call    wrstr_edx
CODE:0040777C		      mov     eax, [ds:mp3_bytes_per_sample]
CODE:00407781		      shl     eax, 3
CODE:00407784		      call    wr_decimal_eax
CODE:00407789		      mov     edx, offset txt_bit ; " bit"
CODE:0040778E		      call    wrstr_edx
CODE:00407793		      call    wrcrlf
CODE:00407798		      clc
CODE:00407799		      retn
CODE:0040779A ;	---------------------------------------------------------------------------
CODE:0040779A
CODE:0040779A @@error:				      ;	...
CODE:0040779A		      stc
CODE:0040779B		      retn
CODE:0040779B endp	      mp3_check_1st_frame
CODE:0040779B
CODE:0040779C
CODE:0040779C ;	===============	S U B R	O U T I	N E =======================================
CODE:0040779C
CODE:0040779C
CODE:0040779C proc	      wrchr near	      ;	...
CODE:0040779C		      pusha
CODE:0040779D		      mov     [ds:wrchr_buf], al
CODE:004077A2		      push    0		      ;	lpOverlapped
CODE:004077A4		      push    offset diskresult	; lpNumberOfBytesWritten
CODE:004077A9		      push    1		      ;	nNumberOfBytesToWrite
CODE:004077AB		      push    offset wrchr_buf ; lpBuffer
CODE:004077B0		      push    [ds:std_out]    ;	hFile
CODE:004077B6		      call    WriteFile
CODE:004077BB		      popa
CODE:004077BC		      retn
CODE:004077BC endp	      wrchr
CODE:004077BC
CODE:004077BD
CODE:004077BD ;	===============	S U B R	O U T I	N E =======================================
CODE:004077BD
CODE:004077BD
CODE:004077BD proc	      wrstr_edx	near	      ;	...
CODE:004077BD		      push    eax
CODE:004077BE
CODE:004077BE @@lop:				      ;	...
CODE:004077BE		      mov     al, [edx]
CODE:004077C0		      inc     edx
CODE:004077C1		      cmp     al, 0
CODE:004077C3		      jz      short @@done
CODE:004077C5		      call    wrchr
CODE:004077CA		      jmp     short @@lop
CODE:004077CC ;	---------------------------------------------------------------------------
CODE:004077CC
CODE:004077CC @@done:				      ;	...
CODE:004077CC		      pop     eax
CODE:004077CD		      retn
CODE:004077CD endp	      wrstr_edx
CODE:004077CD
CODE:004077CE
CODE:004077CE ;	===============	S U B R	O U T I	N E =======================================
CODE:004077CE
CODE:004077CE
CODE:004077CE proc	      wrcrlf near	      ;	...
CODE:004077CE		      push    eax
CODE:004077CF		      mov     al, 0Dh
CODE:004077D1		      call    wrchr
CODE:004077D6		      mov     al, 0Ah
CODE:004077D8		      call    wrchr
CODE:004077DD		      pop     eax
CODE:004077DE		      retn
CODE:004077DE endp	      wrcrlf
CODE:004077DE
CODE:004077DF
CODE:004077DF ;	===============	S U B R	O U T I	N E =======================================
CODE:004077DF
CODE:004077DF
CODE:004077DF proc	      wrspc near	      ;	...
CODE:004077DF		      push    eax
CODE:004077E0		      mov     al, 20h
CODE:004077E2		      call    wrchr
CODE:004077E7		      pop     eax
CODE:004077E8		      retn
CODE:004077E8 endp	      wrspc
CODE:004077E8
CODE:004077E9
CODE:004077E9 ;	===============	S U B R	O U T I	N E =======================================
CODE:004077E9
CODE:004077E9
CODE:004077E9 proc	      wrcomma near	      ;	...
CODE:004077E9		      push    eax
CODE:004077EA		      mov     al, ','
CODE:004077EC		      call    wrchr
CODE:004077F1		      pop     eax
CODE:004077F2		      retn
CODE:004077F2 endp	      wrcomma
CODE:004077F2
CODE:004077F3
CODE:004077F3 ;	===============	S U B R	O U T I	N E =======================================
CODE:004077F3
CODE:004077F3
CODE:004077F3 proc	      wr_decimal_eax_with_thousands_seperator near ; ...
CODE:004077F3		      push    ecx
CODE:004077F4		      mov     cx, 2
CODE:004077F8		      jmp     short wr_decimal_eax_inj
CODE:004077F8 endp	      wr_decimal_eax_with_thousands_seperator
CODE:004077F8
CODE:004077FA
CODE:004077FA ;	===============	S U B R	O U T I	N E =======================================
CODE:004077FA
CODE:004077FA
CODE:004077FA proc	      wr_decimal_eax near     ;	...
CODE:004077FA		      push    ecx
CODE:004077FB		      xor     ecx, ecx
CODE:004077FD
CODE:004077FD wr_decimal_eax_inj:		      ;	...
CODE:004077FD		      push    eax
CODE:004077FE		      push    ebx
CODE:004077FF		      push    edx
CODE:00407800		      mov     ebx, 1000000000 ;	nine zeroes (32bit max 4.294.967.296)
CODE:00407805
CODE:00407805 @@dezlop:				      ;	...
CODE:00407805		      dec     cl
CODE:00407807		      jnz     short @@no_thousands
CODE:00407809		      mov     cl, 3
CODE:0040780B		      cmp     ch, 0
CODE:0040780E		      jz      short @@no_thousands
CODE:00407810		      call    wrcomma
CODE:00407815
CODE:00407815 @@no_thousands:			      ;	...
CODE:00407815		      xor     edx, edx
CODE:00407817		      div     ebx
CODE:00407819		      cmp     ebx, 1
CODE:0040781C		      jz      short @@force_last_zero
CODE:0040781E		      or      ch, al
CODE:00407820		      jz      short @@skip_lead_zero
CODE:00407822
CODE:00407822 @@force_last_zero:		      ;	...
CODE:00407822		      add     al, 30h
CODE:00407824		      call    wrchr
CODE:00407829
CODE:00407829 @@skip_lead_zero:			      ;	...
CODE:00407829		      push    edx
CODE:0040782A		      mov     eax, ebx
CODE:0040782C		      mov     ebx, 10
CODE:00407831		      xor     edx, edx
CODE:00407833		      div     ebx
CODE:00407835		      cmp     eax, 0
CODE:00407838		      mov     ebx, eax
CODE:0040783A		      pop     eax
CODE:0040783B		      jnz     short @@dezlop
CODE:0040783D		      pop     edx
CODE:0040783E		      pop     ebx
CODE:0040783F		      pop     eax
CODE:00407840		      pop     ecx
CODE:00407841		      retn
CODE:00407841 endp	      wr_decimal_eax
CODE:00407841
CODE:00407842
CODE:00407842 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407842
CODE:00407842
CODE:00407842 proc	      wrdigital	near	      ;	...
CODE:00407842		      push    eax
CODE:00407843		      and     al, 0Fh
CODE:00407845		      cmp     al, 9
CODE:00407847		      jbe     short @@this
CODE:00407849		      add     al, 7
CODE:0040784B
CODE:0040784B @@this:				      ;	...
CODE:0040784B		      add     al, 30h
CODE:0040784D		      call    wrchr
CODE:00407852		      pop     eax
CODE:00407853		      retn
CODE:00407853 endp	      wrdigital
CODE:00407853
CODE:00407854
CODE:00407854 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407854
CODE:00407854
CODE:00407854 proc	      wrhexal near	      ;	...
CODE:00407854		      ror     al, 4
CODE:00407857		      call    wrdigital
CODE:0040785C		      ror     al, 4
CODE:0040785F		      jmp     short wrdigital
CODE:0040785F endp	      wrhexal
CODE:0040785F
CODE:00407861
CODE:00407861 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407861
CODE:00407861
CODE:00407861 proc	      wrhexax near	      ;	...
CODE:00407861		      ror     ax, 8
CODE:00407865		      call    wrhexal
CODE:0040786A		      ror     ax, 8
CODE:0040786E		      jmp     short wrhexal
CODE:0040786E endp	      wrhexax
CODE:0040786E
CODE:00407870
CODE:00407870 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407870
CODE:00407870
CODE:00407870 proc	      wrhexeax near	      ;	...
CODE:00407870		      ror     eax, 10h
CODE:00407873		      call    wrhexax
CODE:00407878		      ror     eax, 10h
CODE:0040787B		      jmp     short wrhexax
CODE:0040787B endp	      wrhexeax
CODE:0040787B
CODE:0040787D
CODE:0040787D ;	===============	S U B R	O U T I	N E =======================================
CODE:0040787D
CODE:0040787D
CODE:0040787D proc	      get_commandline near    ;	...
CODE:0040787D		      call    GetCommandLineA
CODE:00407882		      mov     esi, eax
CODE:00407884		      mov     edi, offset cmdline_buf
CODE:00407889		      mov     ecx, 1024	      ;	cmdline_max
CODE:0040788E
CODE:0040788E @@get_cmdline_lop:		      ;	...
CODE:0040788E		      lodsb
CODE:0040788F		      cmp     al, 0
CODE:00407891		      stosb
CODE:00407892		      loopne  @@get_cmdline_lop
CODE:00407894		      mov     [byte ptr	edi-1],	0
CODE:00407898		      mov     esi, offset cmdline_buf
CODE:0040789D		      mov     edi, offset cmdline_buf
CODE:004078A2		      call    _@@get_item     ;	get/skip name of the executable	itself
CODE:004078A7
CODE:004078A7 @@get_items_lop:			      ;	...
CODE:004078A7		      call    _@@get_item
CODE:004078AC		      mov     al, [ebx]
CODE:004078AE		      cmp     al, 0
CODE:004078B0		      jz      @@done
CODE:004078B6		      cmp     al, '/'
CODE:004078B8		      jz      short @@switch
CODE:004078BA		      cmp     al, '-'
CODE:004078BC		      jz      short @@switch
CODE:004078BE		      mov     eax, [edi-5]
CODE:004078C1		      or      eax, 20202000h
CODE:004078C6		      cmp     eax, 'vaw.'     ; ".wav"
CODE:004078CB		      jnz     short @@not_wav_name
CODE:004078CD		      mov     [ds:mp3_dst_fname], ebx
CODE:004078D3		      jmp     short @@get_items_lop
CODE:004078D5 ;	---------------------------------------------------------------------------
CODE:004078D5
CODE:004078D5 @@not_wav_name:			      ;	...
CODE:004078D5		      mov     eax, [edi-5]
CODE:004078D8		      or      eax, 20202000h
CODE:004078DD		      cmp     eax, 'mcp.'     ; ".pcm"
CODE:004078E2		      jnz     short @@not_pcm_name
CODE:004078E4		      mov     [ds:mp3_pcm_fname], ebx
CODE:004078EA		      jmp     short @@get_items_lop
CODE:004078EC ;	---------------------------------------------------------------------------
CODE:004078EC
CODE:004078EC @@not_pcm_name:			      ;	...
CODE:004078EC		      mov     [ds:mp3_src_fname], ebx
CODE:004078F2		      jmp     short @@get_items_lop
CODE:004078F4 ;	---------------------------------------------------------------------------
CODE:004078F4
CODE:004078F4 @@switch:				      ;	...
CODE:004078F4		      cmp     [dword ptr ebx+1], 'onom' ; "mono"
CODE:004078FB		      jnz     short @@not_switch_mono
CODE:004078FD		      mov     [ds:option_mono],	1
CODE:00407904		      jmp     short @@get_items_lop
CODE:00407906 ;	---------------------------------------------------------------------------
CODE:00407906
CODE:00407906 @@not_switch_mono:		      ;	...
CODE:00407906		      cmp     [dword ptr ebx+1], 'tsaf' ; "fast"
CODE:0040790D		      jnz     short @@not_fast_option
CODE:0040790F		      mov     [ds:option_fast],	1
CODE:00407916		      jmp     short @@get_items_lop
CODE:00407918 ;	---------------------------------------------------------------------------
CODE:00407918
CODE:00407918 @@not_fast_option:		      ;	...
CODE:00407918		      cmp     [dword ptr ebx+1], 'tib8' ; "8bit"
CODE:0040791F		      jnz     short @@not_switch_8bit
CODE:00407921		      mov     [ds:option_8bit],	1
CODE:00407928		      jmp     @@get_items_lop
CODE:0040792D ;	---------------------------------------------------------------------------
CODE:0040792D
CODE:0040792D @@not_switch_8bit:		      ;	...
CODE:0040792D		      cmp     [dword ptr ebx+1], 'flah' ; "half"
CODE:00407934		      jnz     short @@not_switch_half
CODE:00407936		      mov     [ds:option_rate_shift], 1
CODE:0040793D		      jmp     @@get_items_lop
CODE:00407942 ;	---------------------------------------------------------------------------
CODE:00407942
CODE:00407942 @@not_switch_half:		      ;	...
CODE:00407942		      cmp     [dword ptr ebx+1], 'rauq' ; "quar"
CODE:00407949		      jnz     short @@not_switch_quarter
CODE:0040794B		      mov     [ds:option_rate_shift], 2
CODE:00407952		      jmp     @@get_items_lop
CODE:00407957 ;	---------------------------------------------------------------------------
CODE:00407957
CODE:00407957 @@not_switch_quarter:		      ;	...
CODE:00407957		      cmp     [dword ptr ebx+1], 'tset' ; "test"
CODE:0040795E		      jnz     short @@not_switch_test
CODE:00407960		      mov     [ds:option_test],	1
CODE:00407967		      jmp     @@get_items_lop
CODE:0040796C ;	---------------------------------------------------------------------------
CODE:0040796C
CODE:0040796C @@not_switch_test:		      ;	...
CODE:0040796C		      jmp     short @@help
CODE:0040796E ;	---------------------------------------------------------------------------
CODE:0040796E
CODE:0040796E @@done:				      ;	...
CODE:0040796E		      cmp     [ds:mp3_src_fname], 0
CODE:00407975		      jz      short @@help
CODE:00407977		      mov     edx, offset txt_file ; "file: "
CODE:0040797C		      call    wrstr_edx
CODE:00407981		      mov     edx, [ds:mp3_src_fname]
CODE:00407987		      call    wrstr_edx
CODE:0040798C		      call    wrcrlf
CODE:00407991		      clc
CODE:00407992		      retn
CODE:00407993 ;	---------------------------------------------------------------------------
CODE:00407993
CODE:00407993 @@help:				      ;	...
CODE:00407993		      mov     edx, offset txt_help ; "usage: mp3play input.mp3 [output.wav] ["...
CODE:00407998		      call    wrstr_edx
CODE:0040799D		      stc
CODE:0040799E		      retn
CODE:0040799E endp	      get_commandline
CODE:0040799E
CODE:0040799F
CODE:0040799F ;	===============	S U B R	O U T I	N E =======================================
CODE:0040799F
CODE:0040799F
CODE:0040799F proc	      _@@get_item near	      ;	...
CODE:0040799F		      lodsb
CODE:004079A0		      dec     al
CODE:004079A2		      cmp     al, 1Fh	      ;	20-1
CODE:004079A4		      jbe     short _@@get_item	; _@@skip_spc_lop
CODE:004079A6		      dec     esi
CODE:004079A7		      mov     ebx, edi
CODE:004079A9		      mov     ah, 0	      ;	flag initially not quoted
CODE:004079AB
CODE:004079AB @@char_lop:			      ;	...
CODE:004079AB		      lodsb
CODE:004079AC		      cmp     al, '"'
CODE:004079AE		      jnz     short @@no_quote
CODE:004079B0		      xor     ah, 1
CODE:004079B3		      jmp     short @@char_lop
CODE:004079B5 ;	---------------------------------------------------------------------------
CODE:004079B5
CODE:004079B5 @@no_quote:			      ;	...
CODE:004079B5		      stosb
CODE:004079B6		      cmp     al, 0
CODE:004079B8		      jz      short @@src_end
CODE:004079BA		      cmp     al, 20h
CODE:004079BC		      ja      short @@char_lop
CODE:004079BE		      cmp     ah, 0	      ;	ignore spaces if inside	"quoted	area"
CODE:004079C1		      jnz     short @@char_lop
CODE:004079C3		      mov     [byte ptr	edi-1],	0 ; eol	(replace space by 00h)
CODE:004079C7		      retn
CODE:004079C8 ;	---------------------------------------------------------------------------
CODE:004079C8
CODE:004079C8 @@src_end:			      ;	...
CODE:004079C8		      dec     esi
CODE:004079C9		      retn
CODE:004079C9 endp	      _@@get_item
CODE:004079C9
CODE:004079CA
CODE:004079CA ;	===============	S U B R	O U T I	N E =======================================
CODE:004079CA
CODE:004079CA
CODE:004079CA proc	      open_and_mmap_the_file near ; ...
CODE:004079CA		      push    0		      ;	hTemplateFile
CODE:004079CC		      push    0		      ;	dwFlagsAndAttributes
CODE:004079CE		      push    3		      ;	dwCreationDisposition
CODE:004079D0		      push    0		      ;	lpSecurityAttributes
CODE:004079D2		      push    1		      ;	dwShareMode
CODE:004079D4		      push    80000000h	      ;	dwDesiredAccess
CODE:004079D9		      push    [ds:mp3_src_fname] ; lpFileName
CODE:004079DF		      call    CreateFileA
CODE:004079E4		      mov     [ds:hFile], eax
CODE:004079E9		      cmp     eax, 0FFFFFFFFh ;	INVALID_HANDLE_VALUE
CODE:004079EC		      jz      short @@not_found
CODE:004079EE		      push    0		      ;	lpFileSizeHigh
CODE:004079F0		      push    [ds:hFile]      ;	hFile
CODE:004079F6		      call    GetFileSize
CODE:004079FB		      mov     [ds:mp3_file_size], eax
CODE:00407A00		      mov     [ds:bytes_left], eax
CODE:00407A05		      push    0		      ;	lpName
CODE:00407A07		      push    0		      ;	dwMaximumSizeLow
CODE:00407A09		      push    0		      ;	dwMaximumSizeHigh
CODE:00407A0B		      push    2		      ;	flProtect
CODE:00407A0D		      push    0		      ;	lpFileMappingAttributes
CODE:00407A0F		      push    [ds:hFile]      ;	hFile
CODE:00407A15		      call    CreateFileMappingA
CODE:00407A1A		      mov     [ds:hMap], eax
CODE:00407A1F		      push    0		      ;	dwNumberOfBytesToMap
CODE:00407A21		      push    0		      ;	dwFileOffsetLow
CODE:00407A23		      push    0		      ;	dwFileOffsetHigh
CODE:00407A25		      push    4		      ;	dwDesiredAccess
CODE:00407A27		      push    [ds:hMap]	      ;	hFileMappingObject
CODE:00407A2D		      call    MapViewOfFile
CODE:00407A32		      mov     [ds:stream_start], eax
CODE:00407A37		      mov     [ds:stream_pos], eax
CODE:00407A3C		      mov     esi, [ds:stream_start]
CODE:00407A42		      mov     ecx, [ds:bytes_left]
CODE:00407A48
CODE:00407A48 @@lll:				      ;	...
CODE:00407A48		      lodsb
CODE:00407A49		      loop    @@lll
CODE:00407A4B		      clc
CODE:00407A4C		      retn
CODE:00407A4D ;	---------------------------------------------------------------------------
CODE:00407A4D
CODE:00407A4D @@not_found:			      ;	...
CODE:00407A4D		      mov     edx, offset txt_not_found	; "cannot open source file\r\n"
CODE:00407A52		      call    wrstr_edx
CODE:00407A57		      stc
CODE:00407A58		      retn
CODE:00407A58 endp	      open_and_mmap_the_file
CODE:00407A58
CODE:00407A58 ;	---------------------------------------------------------------------------
CODE:00407A59		      align 10h
CODE:00407A60
CODE:00407A60 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407A60
CODE:00407A60
CODE:00407A60 proc	      mp3_plain_test_without_output near ; ...
CODE:00407A60		      pusha
CODE:00407A61		      mov     esi, [ds:stream_pos]
CODE:00407A67		      mov     ecx, [ds:bytes_left]
CODE:00407A6D		      mov     edi, offset sample_buffer
CODE:00407A72		      xor     ebp, ebp
CODE:00407A74		      call    mp3_decode_frame
CODE:00407A79		      popa
CODE:00407A7A		      jb      short @@exit
CODE:00407A7C		      mov     eax, [ds:mp3_src_frame_size]
CODE:00407A81		      cmp     eax, 0
CODE:00407A84		      jz      short @@exit
CODE:00407A86		      add     [ds:stream_pos], eax
CODE:00407A8C		      sub     [ds:bytes_left], eax
CODE:00407A92		      jmp     short mp3_plain_test_without_output
CODE:00407A94 ;	---------------------------------------------------------------------------
CODE:00407A94
CODE:00407A94 @@exit:				      ;	...
CODE:00407A94		      retn
CODE:00407A94 endp	      mp3_plain_test_without_output
CODE:00407A94
CODE:00407A94 ;	---------------------------------------------------------------------------
CODE:00407A95		      align 10h
CODE:00407AA0
CODE:00407AA0 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407AA0
CODE:00407AA0
CODE:00407AA0 proc	      mp3_cast_to_wav_file near	; ...
CODE:00407AA0		      call    mp3_create_wav_file
CODE:00407AA5
CODE:00407AA5 @@lop:				      ;	...
CODE:00407AA5		      pusha
CODE:00407AA6		      mov     esi, [ds:stream_pos]
CODE:00407AAC		      mov     ecx, [ds:bytes_left]
CODE:00407AB2		      mov     edi, offset sample_buffer
CODE:00407AB7		      xor     ebp, ebp
CODE:00407AB9		      call    mp3_decode_frame
CODE:00407ABE		      popa
CODE:00407ABF		      jb      short @@exit
CODE:00407AC1		      mov     eax, [ds:mp3_src_frame_size]
CODE:00407AC6		      cmp     eax, 0
CODE:00407AC9		      jz      short @@exit
CODE:00407ACB		      add     [ds:stream_pos], eax
CODE:00407AD1		      sub     [ds:bytes_left], eax
CODE:00407AD7		      push    0		      ;	lpOverlapped
CODE:00407AD9		      push    offset diskresult	; lpNumberOfBytesWritten
CODE:00407ADE		      push    [ds:mp3_samples_output_size] ; nNumberOfBytesToWrite
CODE:00407AE4		      push    offset sample_buffer ; lpBuffer
CODE:00407AE9		      push    [ds:mp3_wav_handle] ; hFile
CODE:00407AEF		      call    WriteFile
CODE:00407AF4		      mov     eax, [ds:mp3_samples_output_size]
CODE:00407AF9		      add     [dword ptr ds:mp3_wav_header+4], eax
CODE:00407AFF		      add     [dword ptr ds:mp3_wav_header+28h], eax
CODE:00407B05		      jmp     short @@lop
CODE:00407B07 ;	---------------------------------------------------------------------------
CODE:00407B07
CODE:00407B07 @@exit:				      ;	...
CODE:00407B07		      call    mp3_close_wav_file
CODE:00407B0C		      retn
CODE:00407B0C endp	      mp3_cast_to_wav_file
CODE:00407B0C
CODE:00407B0D
CODE:00407B0D ;	===============	S U B R	O U T I	N E =======================================
CODE:00407B0D
CODE:00407B0D
CODE:00407B0D proc	      mp3_create_wav_file near ; ...
CODE:00407B0D		      mov     eax, [ds:mp3_output_sample_rate]
CODE:00407B12		      mov     ecx, [ds:mp3_output_num_channels]
CODE:00407B18		      mov     edx, [ds:mp3_bytes_per_sample]
CODE:00407B1E		      mov     [word ptr	ds:mp3_wav_header+16h],	cx
CODE:00407B25		      mov     [dword ptr ds:mp3_wav_header+18h], eax
CODE:00407B2A		      imul    ecx, edx
CODE:00407B2D		      imul    eax, ecx
CODE:00407B30		      shl     edx, 3
CODE:00407B33		      mov     [dword ptr ds:mp3_wav_header+1Ch], eax
CODE:00407B38		      mov     [word ptr	ds:mp3_wav_header+20h],	cx
CODE:00407B3F		      mov     [word ptr	ds:mp3_wav_header+22h],	dx
CODE:00407B46		      push    0		      ;	hTemplateFile
CODE:00407B48		      push    80h	      ;	dwFlagsAndAttributes
CODE:00407B4D		      push    2		      ;	dwCreationDisposition
CODE:00407B4F		      push    0		      ;	lpSecurityAttributes
CODE:00407B51		      push    0		      ;	dwShareMode
CODE:00407B53		      push    0C0000000h      ;	dwDesiredAccess
CODE:00407B58		      push    [ds:mp3_dst_fname] ; lpFileName
CODE:00407B5E		      call    CreateFileA
CODE:00407B63		      mov     [ds:mp3_wav_handle], eax
CODE:00407B68		      call    mp3_write_wav_header
CODE:00407B6D		      retn
CODE:00407B6D endp	      mp3_create_wav_file
CODE:00407B6D
CODE:00407B6E
CODE:00407B6E ;	===============	S U B R	O U T I	N E =======================================
CODE:00407B6E
CODE:00407B6E
CODE:00407B6E proc	      mp3_write_wav_header near	; ...
CODE:00407B6E		      push    0		      ;	lpOverlapped
CODE:00407B70		      push    offset diskresult	; lpNumberOfBytesWritten
CODE:00407B75		      push    2Ch	      ;	nNumberOfBytesToWrite
CODE:00407B77		      push    offset mp3_wav_header ; lpBuffer
CODE:00407B7C		      push    [ds:mp3_wav_handle] ; hFile
CODE:00407B82		      call    WriteFile
CODE:00407B87		      retn
CODE:00407B87 endp	      mp3_write_wav_header
CODE:00407B87
CODE:00407B88
CODE:00407B88 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407B88
CODE:00407B88
CODE:00407B88 proc	      mp3_close_wav_file near ;	...
CODE:00407B88		      push    0		      ;	dwMoveMethod
CODE:00407B8A		      push    0		      ;	lpDistanceToMoveHigh
CODE:00407B8C		      push    0		      ;	lDistanceToMove
CODE:00407B8E		      push    [ds:mp3_wav_handle] ; hFile
CODE:00407B94		      call    SetFilePointer
CODE:00407B99		      call    mp3_write_wav_header
CODE:00407B9E		      push    [ds:mp3_wav_handle] ; hObject
CODE:00407BA4		      call    CloseHandle
CODE:00407BA9		      retn
CODE:00407BA9 endp	      mp3_close_wav_file
CODE:00407BA9
CODE:00407BAA
CODE:00407BAA ;	===============	S U B R	O U T I	N E =======================================
CODE:00407BAA
CODE:00407BAA
CODE:00407BAA proc	      mp3_verify_pcm_file near ; ...
CODE:00407BAA		      call    mp3_open_pcm_file
CODE:00407BAF		      mov     [ds:_@@max_diff],	0
CODE:00407BB9		      mov     [ds:_@@avg_diff],	0
CODE:00407BC3		      mov     [ds:_@@avg_diff+4], 0
CODE:00407BCD		      mov     [ds:pcm_filepos],	0
CODE:00407BD7
CODE:00407BD7 @@lop:				      ;	...
CODE:00407BD7		      pusha
CODE:00407BD8		      mov     esi, [ds:stream_pos]
CODE:00407BDE		      mov     ecx, [ds:bytes_left]
CODE:00407BE4		      mov     edi, offset sample_buffer
CODE:00407BE9		      xor     ebp, ebp
CODE:00407BEB		      call    mp3_decode_frame
CODE:00407BF0		      popa
CODE:00407BF1		      jb      @@exit
CODE:00407BF7		      mov     eax, [ds:mp3_src_frame_size]
CODE:00407BFC		      cmp     eax, 0
CODE:00407BFF		      jz      @@exit
CODE:00407C05		      xor     eax, eax
CODE:00407C07		      cmp     [ds:mp3_output_num_channels], 2
CODE:00407C0E		      jb      short @@this_mono_convert
CODE:00407C10		      movzx   eax, [ds:option_mono]
CODE:00407C17
CODE:00407C17 @@this_mono_convert:		      ;	...
CODE:00407C17		      mov     [ds:_@@mono_convert], eax
CODE:00407C1C		      mov     cl, [ds:option_rate_shift]
CODE:00407C22		      mov     eax, 2
CODE:00407C27		      shl     eax, cl
CODE:00407C29		      mov     [ds:_@@pcm_steps], ax
CODE:00407C2F		      mov     [ds:_@@pcm_steps+2], ax
CODE:00407C35		      cmp     [ds:mp3_output_num_channels], 2
CODE:00407C3C		      jb      short @@these_steps
CODE:00407C3E		      mov     [ds:_@@pcm_steps], 2
CODE:00407C47		      lea     eax, [+eax*2-2] ;	[0FFFFFFFEh+eax*2]
CODE:00407C4E		      mov     [ds:_@@pcm_steps+2], ax
CODE:00407C54
CODE:00407C54 @@these_steps:			      ;	...
CODE:00407C54		      mov     eax, [ds:mp3_samples_output_size]
CODE:00407C59		      mov     cl, [ds:option_rate_shift]
CODE:00407C5F		      add     cl, [ds:option_8bit]
CODE:00407C65		      add     cl, [byte	ptr ds:_@@mono_convert]
CODE:00407C6B		      shl     eax, cl
CODE:00407C6D		      push    0		      ;	lpOverlapped
CODE:00407C6F		      push    offset diskresult	; lpNumberOfBytesRead
CODE:00407C74		      push    eax	      ;	nNumberOfBytesToRead
CODE:00407C75		      push    (offset sample_buffer+1200h) ; sample_buffer+MP3_MAX_OUTPUT_SIZE
CODE:00407C7A		      push    [ds:mp3_pcm_handle] ; hFile
CODE:00407C80		      call    ReadFile
CODE:00407C85		      mov     ecx, [ds:mp3_samples_output_size]
CODE:00407C8B		      shr     ecx, 1
CODE:00407C8D		      jz      _@@compare_done
CODE:00407C93		      mov     esi, offset sample_buffer	; decoded .mp3
CODE:00407C98		      mov     edi, (offset sample_buffer+1200h)	; loaded .pcm
CODE:00407C9D
CODE:00407C9D @@compare_lop:			      ;	...
CODE:00407C9D		      movsx   edx, [word ptr edi]
CODE:00407CA0		      cmp     [ds:_@@mono_convert], 0
CODE:00407CA7		      jz      short _@@no_mono_convert
CODE:00407CA9		      movsx   eax, [word ptr edi+2]
CODE:00407CAD		      add     edx, eax
CODE:00407CAF		      sar     edx, 1
CODE:00407CB1
CODE:00407CB1 _@@no_mono_convert:		      ;	...
CODE:00407CB1		      cmp     [ds:option_8bit],	0
CODE:00407CB8		      jnz     short @@compare_8bit
CODE:00407CBA		      movsx   eax, [word ptr esi] ; get	16bit from decoded .mp3
CODE:00407CBD		      add     esi, 2
CODE:00407CC0		      jmp     short @@compare_this
CODE:00407CC2 ;	---------------------------------------------------------------------------
CODE:00407CC2
CODE:00407CC2 @@compare_8bit:			      ;	...
CODE:00407CC2		      movzx   eax, [byte ptr esi]
CODE:00407CC5		      inc     esi	      ;	convert	.pcm
CODE:00407CC6		      add     edx, 8000h      ;	make unsigned
CODE:00407CCC		      sar     edx, 8	      ;	div 100h
CODE:00407CCF		      adc     dl, 0	      ;	round up
CODE:00407CD2		      sbb     dl, 0	      ;	undo on	unsigned overflow
CODE:00407CD5
CODE:00407CD5 @@compare_this:			      ;	...
CODE:00407CD5		      sub     eax, edx
CODE:00407CD7		      jns     short @@compare_abs ; calc difference
CODE:00407CD9		      neg     eax
CODE:00407CDB
CODE:00407CDB @@compare_abs:			      ;	...
CODE:00407CDB		      add     [ds:_@@avg_diff],	eax
CODE:00407CE1		      adc     [ds:_@@avg_diff+4], 0
CODE:00407CE8		      cmp     eax, [ds:_@@max_diff]
CODE:00407CEE		      jb      short @@not_max
CODE:00407CF0		      mov     [ds:_@@max_diff],	eax
CODE:00407CF5		      mov     edx, [ds:pcm_filepos]
CODE:00407CFB		      mov     [ds:_@@worst_pcm_filepos], edx
CODE:00407D01		      mov     edx, [ds:stream_pos]
CODE:00407D07		      sub     edx, [ds:stream_start]
CODE:00407D0D		      mov     [ds:_@@worst_mp3_filepos], edx
CODE:00407D13
CODE:00407D13 @@not_max:			      ;	...
CODE:00407D13		      movzx   eax, [ds:_@@pcm_steps]
CODE:00407D1A		      ror     [dword ptr ds:_@@pcm_steps], 16 ;	next .pcm addr
CODE:00407D21		      add     edi, eax
CODE:00407D23		      add     [ds:pcm_filepos],	eax
CODE:00407D29		      dec     ecx
CODE:00407D2A		      jnz     @@compare_lop
CODE:00407D30
CODE:00407D30 _@@compare_done:			      ;	...
CODE:00407D30		      mov     eax, [ds:mp3_src_frame_size]
CODE:00407D35		      add     [ds:stream_pos], eax
CODE:00407D3B		      sub     [ds:bytes_left], eax
CODE:00407D41		      jmp     @@lop
CODE:00407D46 ;	---------------------------------------------------------------------------
CODE:00407D46
CODE:00407D46 @@exit:				      ;	...
CODE:00407D46		      call    mp3_close_pcm_file
CODE:00407D4B		      mov     edx, offset _@@txt_verify1 ; "verify max difference = "
CODE:00407D50		      call    wrstr_edx
CODE:00407D55		      mov     eax, [ds:_@@max_diff]
CODE:00407D5A		      call    wr_decimal_eax
CODE:00407D5F		      mov     edx, offset _@@txt_verify1_at_mp3	; " at mp3:"
CODE:00407D64		      call    wrstr_edx
CODE:00407D69		      mov     eax, [ds:_@@worst_mp3_filepos]
CODE:00407D6E		      call    wrhexeax
CODE:00407D73		      mov     edx, offset _@@txt_verify2 ; ", average difference = "
CODE:00407D78		      call    wrstr_edx
CODE:00407D7D		      mov     eax, [ds:_@@avg_diff]
CODE:00407D82		      mov     edx, [ds:_@@avg_diff+4]
CODE:00407D88		      mov     ecx, [ds:mp3_total_output_size]
CODE:00407D8E		      shr     ecx, 1
CODE:00407D90		      div     ecx
CODE:00407D92		      call    wr_decimal_eax
CODE:00407D97		      mov     al, '.'
CODE:00407D99		      call    wrchr
CODE:00407D9E		      mov     eax, 10
CODE:00407DA3		      mul     edx	      ;	fraction*10
CODE:00407DA5		      div     ecx
CODE:00407DA7		      call    wrdigital	      ;	show fraction of average difference
CODE:00407DAC		      call    wrcrlf
CODE:00407DB1		      retn
CODE:00407DB1 endp	      mp3_verify_pcm_file
CODE:00407DB1
CODE:00407DB2
CODE:00407DB2 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407DB2
CODE:00407DB2
CODE:00407DB2 proc	      mp3_open_pcm_file	near  ;	...
CODE:00407DB2		      push    0		      ;	hTemplateFile
CODE:00407DB4		      push    80h	      ;	dwFlagsAndAttributes
CODE:00407DB9		      push    3		      ;	dwCreationDisposition
CODE:00407DBB		      push    0		      ;	lpSecurityAttributes
CODE:00407DBD		      push    0		      ;	dwShareMode
CODE:00407DBF		      push    80000000h	      ;	dwDesiredAccess
CODE:00407DC4		      push    [ds:mp3_pcm_fname] ; lpFileName
CODE:00407DCA		      call    CreateFileA
CODE:00407DCF		      mov     [ds:mp3_pcm_handle], eax
CODE:00407DD4		      retn
CODE:00407DD4 endp	      mp3_open_pcm_file
CODE:00407DD4
CODE:00407DD5
CODE:00407DD5 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407DD5
CODE:00407DD5
CODE:00407DD5 proc	      mp3_close_pcm_file near ;	...
CODE:00407DD5		      push    [ds:mp3_pcm_handle] ; hObject
CODE:00407DDB		      call    CloseHandle
CODE:00407DE0		      retn
CODE:00407DE0 endp	      mp3_close_pcm_file
CODE:00407DE0
CODE:00407DE1
CODE:00407DE1 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407DE1
CODE:00407DE1
CODE:00407DE1 proc	      prepare_wave_headers near	; ...
CODE:00407DE1		      mov     ebx, offset mp3_wave_headers
CODE:00407DE6		      mov     edi, ebx
CODE:00407DE8		      mov     ecx, 64	      ;	BUFFER_COUNT*20h/4
CODE:00407DED		      xor     eax, eax
CODE:00407DEF		      rep stosd
CODE:00407DF1		      mov     edi, offset sample_buffer
CODE:00407DF6
CODE:00407DF6 @@prepare_lop:			      ;	...
CODE:00407DF6		      mov     [ebx], edi
CODE:00407DF8		      mov     [dword ptr ebx+4], 4608 ;	MP3_MAX_OUTPUT_SIZE
CODE:00407DFF		      push    32	      ;	sizeof_WAVEHDR
CODE:00407E01		      push    ebx	      ;	wavehdr
CODE:00407E02		      push    esi	      ;	wave_out_handle
CODE:00407E03		      call    waveOutPrepareHeader
CODE:00407E08		      cmp     eax, 0	      ;	warn_error_eax macro txt
CODE:00407E0B		      jz      short @@no_error
CODE:00407E0D		      pusha
CODE:00407E0E		      mov     edx, offset txt_waveout_error1 ; "\r\n   *** ERROR number	"
CODE:00407E13		      call    wrstr_edx
CODE:00407E18		      call    wr_decimal_eax
CODE:00407E1D		      mov     edx, offset txt_waveout_error2 ; " in function "
CODE:00407E22		      call    wrstr_edx
CODE:00407E27		      mov     edx, offset warn_errmsg_1	; "waveOutPrepareHeader"
CODE:00407E2C		      call    wrstr_edx
CODE:00407E31		      mov     edx, offset txt_waveout_error3 ; "\r\n	... bugdefect.@@@+critical\\&&&"...
CODE:00407E36		      call    wrstr_edx
CODE:00407E3B		      mov     [ds:have_wave_error], 1
CODE:00407E45		      popa
CODE:00407E46
CODE:00407E46 @@no_error:			      ;	...
CODE:00407E46		      add     edi, 4608	      ;	MP3_MAX_OUTPUT_SIZE
CODE:00407E4C		      add     ebx, 32
CODE:00407E4F		      cmp     ebx, offset end_of_wave_headers ;	mp3_wave_headers+BUFFER_COUNT*20h
CODE:00407E55		      jb      short @@prepare_lop
CODE:00407E57		      retn
CODE:00407E57 endp	      prepare_wave_headers
CODE:00407E57
CODE:00407E58
CODE:00407E58 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407E58
CODE:00407E58
CODE:00407E58 proc	      unprepare_wave_headers near ; ...
CODE:00407E58		      mov     ebx, offset mp3_wave_headers
CODE:00407E5D
CODE:00407E5D loc_407E5D:			      ;	...
CODE:00407E5D		      push    20h	      ;	cbwh
CODE:00407E5F		      push    ebx	      ;	pwh
CODE:00407E60		      push    [ds:mp3_waveout_handle] ;	hwo
CODE:00407E66		      call    waveOutUnprepareHeader
CODE:00407E6B		      cmp     eax, 0
CODE:00407E6E		      jz      short loc_407EA9
CODE:00407E70		      pusha
CODE:00407E71		      mov     edx, offset txt_waveout_error1 ; "\r\n   *** ERROR number	"
CODE:00407E76		      call    wrstr_edx
CODE:00407E7B		      call    wr_decimal_eax
CODE:00407E80		      mov     edx, offset txt_waveout_error2 ; " in function "
CODE:00407E85		      call    wrstr_edx
CODE:00407E8A		      mov     edx, offset warn_errmsg_2	; "waveOutUnprepareHeader"
CODE:00407E8F		      call    wrstr_edx
CODE:00407E94		      mov     edx, offset txt_waveout_error3 ; "\r\n	... bugdefect.@@@+critical\\&&&"...
CODE:00407E99		      call    wrstr_edx
CODE:00407E9E		      mov     [ds:have_wave_error], 1
CODE:00407EA8		      popa
CODE:00407EA9
CODE:00407EA9 loc_407EA9:			      ;	...
CODE:00407EA9		      add     ebx, 20h
CODE:00407EAC		      cmp     ebx, offset end_of_wave_headers
CODE:00407EB2		      jb      short loc_407E5D
CODE:00407EB4		      retn
CODE:00407EB4 endp	      unprepare_wave_headers
CODE:00407EB4
CODE:00407EB5
CODE:00407EB5 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407EB5
CODE:00407EB5
CODE:00407EB5 proc	      try_enqueue_esi_ebx near ; ...
CODE:00407EB5		      cmp     [ds:bytes_left], 0
CODE:00407EBC		      jle     @@enqueue_done
CODE:00407EC2		      pusha
CODE:00407EC3		      mov     esi, [ds:stream_pos]
CODE:00407EC9		      mov     ecx, [ds:bytes_left]
CODE:00407ECF		      mov     edi, [ebx]
CODE:00407ED1		      xor     ebp, ebp
CODE:00407ED3		      call    mp3_decode_frame
CODE:00407ED8		      popa
CODE:00407ED9		      jb      @@enqueue_done
CODE:00407EDF		      mov     eax, [ds:mp3_src_frame_size]
CODE:00407EE4		      cmp     eax, 0
CODE:00407EE7		      jz      @@enqueue_done
CODE:00407EED		      add     [ds:stream_pos], eax
CODE:00407EF3		      sub     [ds:bytes_left], eax
CODE:00407EF9		      mov     eax, [ds:mp3_samples_output_size]
CODE:00407EFE		      cmp     eax, 0
CODE:00407F01		      jz      short try_enqueue_esi_ebx
CODE:00407F03		      mov     [ebx+4], eax
CODE:00407F06		      cmp     [ds:have_wave_error], 0 ;	warn_error_destroyer_wavehdr_ebx macro
CODE:00407F0D		      jz      short @@no_destroyer
CODE:00407F0F		      pusha
CODE:00407F10		      mov     edi, [ebx]
CODE:00407F12		      test    [word ptr	edi], 103h
CODE:00407F17		      jnz     short @@scratch_skip
CODE:00407F19		      mov     ecx, [ebx+4]    ;	bufsize
CODE:00407F1C		      shr     ecx, 3	      ;	div 8 (4 words)
CODE:00407F1F		      mov     ax, 5234h
CODE:00407F23
CODE:00407F23 @@scratch_lop:			      ;	...
CODE:00407F23		      ror     ax, 1
CODE:00407F26		      add     [edi], ax
CODE:00407F29		      add     [edi+2], ax
CODE:00407F2D		      add     [edi+4], ax
CODE:00407F31		      add     [edi+6], ax
CODE:00407F35		      add     edi, 8
CODE:00407F38		      loop    @@scratch_lop
CODE:00407F3A
CODE:00407F3A @@scratch_skip:			      ;	...
CODE:00407F3A		      and     eax, 7
CODE:00407F3D		      add     eax, 4
CODE:00407F40		      mov     ecx, eax
CODE:00407F42
CODE:00407F42 @@random_chr_lop:			      ;	...
CODE:00407F42		      or      al, 20h
CODE:00407F44		      call    wrchr
CODE:00407F49		      add     al, 53h
CODE:00407F4B		      loop    @@random_chr_lop
CODE:00407F4D		      mov     edx, offset txt_ERROR ; "ERROR"
CODE:00407F52		      call    wrstr_edx
CODE:00407F57		      popa
CODE:00407F58
CODE:00407F58 @@no_destroyer:			      ;	...
CODE:00407F58		      push    32	      ;	cbwh ; sizeof_WAVEHDR
CODE:00407F5A		      push    ebx	      ;	pwh ; wavehdr
CODE:00407F5B		      push    esi	      ;	hwo ; waveout_handle
CODE:00407F5C		      call    waveOutWrite
CODE:00407F61		      cmp     eax, 0	      ;	warn_error_eax <'waveOutWrite'>
CODE:00407F64		      jz      short @@no_error
CODE:00407F66		      pusha
CODE:00407F67		      mov     edx, offset txt_waveout_error1 ; "\r\n   *** ERROR number	"
CODE:00407F6C		      call    wrstr_edx
CODE:00407F71		      call    wr_decimal_eax
CODE:00407F76		      mov     edx, offset txt_waveout_error2 ; " in function "
CODE:00407F7B		      call    wrstr_edx
CODE:00407F80		      mov     edx, offset warn_errmsg_3	; "waveOutWrite"
CODE:00407F85		      call    wrstr_edx
CODE:00407F8A		      mov     edx, offset txt_waveout_error3 ; "\r\n	... bugdefect.@@@+critical\\&&&"...
CODE:00407F8F		      call    wrstr_edx
CODE:00407F94		      mov     [ds:have_wave_error], 1
CODE:00407F9E		      popa
CODE:00407F9F
CODE:00407F9F @@no_error:			      ;	...
CODE:00407F9F		      inc     [ds:num_enqueued_frames]
CODE:00407FA5		      retn
CODE:00407FA6 ;	---------------------------------------------------------------------------
CODE:00407FA6
CODE:00407FA6 @@enqueue_done:			      ;	...
CODE:00407FA6		      mov     [ds:bytes_left], 0
CODE:00407FB0		      retn
CODE:00407FB0 endp	      try_enqueue_esi_ebx
CODE:00407FB0
CODE:00407FB1
CODE:00407FB1 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407FB1
CODE:00407FB1
CODE:00407FB1 proc	      try_enqueue_esi_all_blocks near ;	...
CODE:00407FB1		      mov     ebx, offset mp3_wave_headers
CODE:00407FB6
CODE:00407FB6 @@enqueue_initial_lop:		      ;	...
CODE:00407FB6		      call    try_enqueue_esi_ebx
CODE:00407FBB		      add     ebx, 20h
CODE:00407FBE		      cmp     ebx, offset end_of_wave_headers ;	mp3_wave_headers+BUFFER_COUNT*20h
CODE:00407FC4		      jb      short @@enqueue_initial_lop
CODE:00407FC6		      retn
CODE:00407FC6 endp	      try_enqueue_esi_all_blocks
CODE:00407FC6
CODE:00407FC7
CODE:00407FC7 ;	===============	S U B R	O U T I	N E =======================================
CODE:00407FC7
CODE:00407FC7 ;	Attributes: bp-based frame
CODE:00407FC7
CODE:00407FC7 proc	      AudioCallback near      ;	...
CODE:00407FC7
CODE:00407FC7 @@waveout_handle=	dword ptr  8
CODE:00407FC7 @@uMsg	      =	dword ptr  0Ch
CODE:00407FC7 @@param1	      =	dword ptr  14h
CODE:00407FC7
CODE:00407FC7		      push    ebp
CODE:00407FC8		      mov     ebp, esp
CODE:00407FCA		      cmp     [ebp+@@uMsg], 3BDh ; MM_WOM_DONE
CODE:00407FD1		      jnz     short @@exit
CODE:00407FD3		      pusha
CODE:00407FD4		      mov     esi, [ebp+@@waveout_handle]
CODE:00407FD7		      mov     ebx, [ebp+@@param1]
CODE:00407FDA		      call    try_enqueue_esi_ebx
CODE:00407FDF		      popa
CODE:00407FE0		      dec     [ds:num_enqueued_frames]
CODE:00407FE6
CODE:00407FE6 @@exit:				      ;	...
CODE:00407FE6		      leave
CODE:00407FE7		      retn    20	      ;	5*4 ; remove five dwords on stack
CODE:00407FE7 endp	      AudioCallback
CODE:00407FE7
CODE:00407FEA
CODE:00407FEA ;	===============	S U B R	O U T I	N E =======================================
CODE:00407FEA
CODE:00407FEA
CODE:00407FEA proc	      mp3_cast_to_speaker near ; ...
CODE:00407FEA		      mov     eax, [ds:mp3_output_sample_rate]
CODE:00407FEF		      mov     ecx, [ds:mp3_output_num_channels]
CODE:00407FF5		      mov     edx, [ds:mp3_bytes_per_sample]
CODE:00407FFB		      mov     [ds:mp3_wf.nChannels], cx	; [mp3_wf+02h]
CODE:00408002		      mov     [ds:mp3_wf.nSamplesPerSec], eax ;	[mp3_wf+04h]
CODE:00408007		      imul    ecx, edx
CODE:0040800A		      imul    eax, ecx
CODE:0040800D		      shl     edx, 3
CODE:00408010		      mov     [ds:mp3_wf.nAvgBytesPerSec], eax ; [mp3_wf+08h]
CODE:00408015		      mov     [ds:mp3_wf.nBlockAlign], cx ; [mp3_wf+0Ch]
CODE:0040801C		      mov     [ds:mp3_wf.wBitsPerSample], dx ; [mp3_wf+0Eh]
CODE:00408023		      push    30000h	      ;	fdwOpen	; CALLBACK_FUNCTION
CODE:00408028		      push    0		      ;	dwInstance ; NULL ; user_data
CODE:0040802A		      push    offset AudioCallback ; dwCallback
CODE:0040802F		      push    offset mp3_wf   ;	wave_format
CODE:00408034		      push    0FFFFFFFFh      ;	uDeviceID ; WAVE_MAPPER
CODE:00408036		      push    offset mp3_waveout_handle	; phwo
CODE:0040803B		      call    waveOutOpen
CODE:00408040		      cmp     eax, 0	      ;	MMSYSERR_NOERROR
CODE:00408043		      jz      short @@wave_open_okay
CODE:00408045		      mov     edx, offset txt_waveopen_failed ;	"  ERROR: cannot open wave output!\r\n"
CODE:0040804A		      call    wrstr_edx
CODE:0040804F		      jmp     @@done_quit
CODE:00408054 ;	---------------------------------------------------------------------------
CODE:00408054
CODE:00408054 @@wave_open_okay:			      ;	...
CODE:00408054		      cmp     eax, 0	      ;	warn_error_eax <'waveOutOpen'>
CODE:00408057		      jz      short @@no_error
CODE:00408059		      pusha
CODE:0040805A		      mov     edx, offset txt_waveout_error1 ; "\r\n   *** ERROR number	"
CODE:0040805F		      call    wrstr_edx
CODE:00408064		      call    wr_decimal_eax
CODE:00408069		      mov     edx, offset txt_waveout_error2 ; " in function "
CODE:0040806E		      call    wrstr_edx
CODE:00408073		      mov     edx, offset warn_errmsg_4	; "waveOutOpen"
CODE:00408078		      call    wrstr_edx
CODE:0040807D		      mov     edx, offset txt_waveout_error3 ; "\r\n	... bugdefect.@@@+critical\\&&&"...
CODE:00408082		      call    wrstr_edx
CODE:00408087		      mov     [ds:have_wave_error], 1
CODE:00408091		      popa
CODE:00408092
CODE:00408092 @@no_error:			      ;	...
CODE:00408092		      mov     esi, [ds:mp3_waveout_handle]
CODE:00408098		      call    prepare_wave_headers
CODE:0040809D		      push    [ds:mp3_waveout_handle] ;	hwo
CODE:004080A3		      call    waveOutPause    ;	warn_error_eax <'waveOutPause'>
CODE:004080A8		      cmp     eax, 0
CODE:004080AB		      jz      short @@no_error@
CODE:004080AD		      pusha
CODE:004080AE		      mov     edx, offset txt_waveout_error1 ; "\r\n   *** ERROR number	"
CODE:004080B3		      call    wrstr_edx
CODE:004080B8		      call    wr_decimal_eax
CODE:004080BD		      mov     edx, offset txt_waveout_error2 ; " in function "
CODE:004080C2		      call    wrstr_edx
CODE:004080C7		      mov     edx, offset warn_errmsg_5	; "waveOutPause"
CODE:004080CC		      call    wrstr_edx
CODE:004080D1		      mov     edx, offset txt_waveout_error3 ; "\r\n	... bugdefect.@@@+critical\\&&&"...
CODE:004080D6		      call    wrstr_edx
CODE:004080DB		      mov     [ds:have_wave_error], 1
CODE:004080E5		      popa
CODE:004080E6
CODE:004080E6 @@no_error@:			      ;	...
CODE:004080E6		      call    try_enqueue_esi_all_blocks
CODE:004080EB		      push    [ds:mp3_waveout_handle] ;	hwo
CODE:004080F1		      call    waveOutRestart
CODE:004080F6		      cmp     eax, 0	      ;	warn_error_eax <'waveOutRestart'>
CODE:004080F9		      jz      short @@playback_wait_lop
CODE:004080FB		      pusha
CODE:004080FC		      mov     edx, offset txt_waveout_error1 ; "\r\n   *** ERROR number	"
CODE:00408101		      call    wrstr_edx
CODE:00408106		      call    wr_decimal_eax
CODE:0040810B		      mov     edx, offset txt_waveout_error2 ; " in function "
CODE:00408110		      call    wrstr_edx
CODE:00408115		      mov     edx, offset warn_errmsg_6	; "waveOutRestart"
CODE:0040811A		      call    wrstr_edx
CODE:0040811F		      mov     edx, offset txt_waveout_error3 ; "\r\n	... bugdefect.@@@+critical\\&&&"...
CODE:00408124		      call    wrstr_edx
CODE:00408129		      mov     [ds:have_wave_error], 1
CODE:00408133		      popa
CODE:00408134
CODE:00408134 @@playback_wait_lop:		      ;	...
CODE:00408134		      mov     eax, [ds:num_enqueued_frames]
CODE:00408139		      imul    eax, 10
CODE:0040813C		      push    eax	      ;	dwMilliseconds
CODE:0040813D		      call    Sleep
CODE:00408142		      mov     eax, [ds:num_enqueued_frames]
CODE:00408147		      or      eax, [ds:bytes_left]
CODE:0040814D		      jnz     short @@playback_wait_lop
CODE:0040814F		      push    [ds:mp3_waveout_handle] ;	hwo
CODE:00408155		      call    waveOutReset
CODE:0040815A		      cmp     eax, 0	      ;	warn_error_eax <'waveOutReset'>
CODE:0040815D		      jz      short @@no_error@@
CODE:0040815F		      pusha
CODE:00408160		      mov     edx, offset txt_waveout_error1 ; "\r\n   *** ERROR number	"
CODE:00408165		      call    wrstr_edx
CODE:0040816A		      call    wr_decimal_eax
CODE:0040816F		      mov     edx, offset txt_waveout_error2 ; " in function "
CODE:00408174		      call    wrstr_edx
CODE:00408179		      mov     edx, offset warn_errmsg_7	; "waveOutReset"
CODE:0040817E		      call    wrstr_edx
CODE:00408183		      mov     edx, offset txt_waveout_error3 ; "\r\n	... bugdefect.@@@+critical\\&&&"...
CODE:00408188		      call    wrstr_edx
CODE:0040818D		      mov     [ds:have_wave_error], 1
CODE:00408197		      popa
CODE:00408198
CODE:00408198 @@no_error@@:			      ;	...
CODE:00408198		      call    unprepare_wave_headers
CODE:0040819D		      push    [ds:mp3_waveout_handle] ;	hwo
CODE:004081A3		      call    waveOutClose
CODE:004081A8		      cmp     eax, 0	      ;	warn_error_eax <'waveOutClose'>
CODE:004081AB		      jz      short @@@no_error
CODE:004081AD		      pusha
CODE:004081AE		      mov     edx, offset txt_waveout_error1 ; "\r\n   *** ERROR number	"
CODE:004081B3		      call    wrstr_edx
CODE:004081B8		      call    wr_decimal_eax
CODE:004081BD		      mov     edx, offset txt_waveout_error2 ; " in function "
CODE:004081C2		      call    wrstr_edx
CODE:004081C7		      mov     edx, offset warn_errmsg_8	; "waveOutClose"
CODE:004081CC		      call    wrstr_edx
CODE:004081D1		      mov     edx, offset txt_waveout_error3 ; "\r\n	... bugdefect.@@@+critical\\&&&"...
CODE:004081D6		      call    wrstr_edx
CODE:004081DB		      mov     [ds:have_wave_error], 1
CODE:004081E5		      popa
CODE:004081E6
CODE:004081E6 @@@no_error:			      ;	...
CODE:004081E6		      cmp     [ds:have_wave_error], 0 ;	warn_error_crash macro
CODE:004081ED		      jz      short @@done_quit	; @@no_crash
CODE:004081EF		      xor     ecx, ecx	      ;	trigger	div0 exception
CODE:004081F1		      div     ecx
CODE:004081F3
CODE:004081F3 @@done_quit:			      ;	...
CODE:004081F3		      retn
CODE:004081F3 endp	      mp3_cast_to_speaker
CODE:004081F3
CODE:004081F4 ;	---------------------------------------------------------------------------
CODE:004081F4 ;	START OF FUNCTION CHUNK	FOR mp3_build_huff_table_root
CODE:004081F4
CODE:004081F4 fatalunexpected:			      ;	...
CODE:004081F4		      div     [ds:end_of_wave_headers]
CODE:004081FA
CODE:004081FA loc_4081FA:			      ;	...
CODE:004081FA		      jmp     short loc_4081FA
CODE:004081FA ;	END OF FUNCTION	CHUNK FOR mp3_build_huff_table_root
CODE:004081FC
CODE:004081FC ;	===============	S U B R	O U T I	N E =======================================
CODE:004081FC
CODE:004081FC ;	Attributes: noreturn
CODE:004081FC
CODE:004081FC		      public start
CODE:004081FC proc	      start near
CODE:004081FC		      push    0FFFFFFF5h      ;	nStdHandle
CODE:004081FE		      call    GetStdHandle
CODE:00408203		      mov     [ds:std_out], eax
CODE:00408208		      mov     edx, offset txt_hello ; "nocash mp3 decoder v1.4,	2024 martin ko"...
CODE:0040820D		      call    wrstr_edx
CODE:00408212		      call    get_commandline
CODE:00408217		      jb      @@exit
CODE:0040821D		      xor     ebp, ebp
CODE:0040821F		      call    mp3_init
CODE:00408224		      call    open_and_mmap_the_file
CODE:00408229		      jb      @@exit
CODE:0040822F		      call    detect_cpu_386_and_up
CODE:00408234		      call    xmit_get_priority_defaults
CODE:00408239		      call    GetTickCount
CODE:0040823E		      neg     eax
CODE:00408240		      mov     [ds:millisecond_count], eax
CODE:00408245		      call    mp3_check_1st_frame
CODE:0040824A		      jb      @@exit
CODE:00408250		      cmp     [ds:option_test],	0
CODE:00408257		      jz      short @@no_benchmark_test
CODE:00408259		      call    mp3_plain_test_without_output
CODE:0040825E		      jmp     short @@decode_done
CODE:00408260 ;	---------------------------------------------------------------------------
CODE:00408260
CODE:00408260 @@no_benchmark_test:		      ;	...
CODE:00408260		      cmp     [ds:mp3_pcm_fname], 0
CODE:00408267		      jz      short @@no_pcm_verify
CODE:00408269		      call    mp3_verify_pcm_file
CODE:0040826E		      jmp     @@exit
CODE:00408273 ;	---------------------------------------------------------------------------
CODE:00408273
CODE:00408273 @@no_pcm_verify:			      ;	...
CODE:00408273		      cmp     [ds:mp3_dst_fname], 0
CODE:0040827A		      jz      short @@no_wav_output
CODE:0040827C		      call    mp3_cast_to_wav_file
CODE:00408281		      jmp     short @@decode_done
CODE:00408283 ;	---------------------------------------------------------------------------
CODE:00408283
CODE:00408283 @@no_wav_output:			      ;	...
CODE:00408283		      call    mp3_cast_to_speaker
CODE:00408288
CODE:00408288 @@decode_done:			      ;	...
CODE:00408288		      call    GetTickCount
CODE:0040828D		      add     [ds:millisecond_count], eax
CODE:00408293		      mov     edx, offset txt_decode_timing1 ; "audio duration "
CODE:00408298		      call    wrstr_edx
CODE:0040829D		      mov     eax, [ds:mp3_total_output_size]
CODE:004082A2		      mov     edx, 3E8h
CODE:004082A7		      mul     edx
CODE:004082A9		      div     [ds:mp3_output_sample_rate]
CODE:004082AF		      xor     edx, edx
CODE:004082B1		      div     [ds:mp3_output_num_channels]
CODE:004082B7		      xor     edx, edx
CODE:004082B9		      div     [ds:mp3_bytes_per_sample]
CODE:004082BF		      mov     [ds:mp3_output_milliseconds], eax
CODE:004082C4		      call    wr_decimal_eax_with_thousands_seperator
CODE:004082C9		      mov     edx, offset txt_decode_timing2 ; " milliseconds, decoded in "
CODE:004082CE		      call    wrstr_edx
CODE:004082D3		      mov     eax, [ds:millisecond_count]
CODE:004082D8		      call    wr_decimal_eax_with_thousands_seperator
CODE:004082DD		      mov     edx, offset txt_decode_timing3 ; " milliseconds\r\n"
CODE:004082E2		      call    wrstr_edx
CODE:004082E7		      mov     edx, offset txt_clks_per_second ;	" clock	cycles per second:\r\n"
CODE:004082EC		      call    wrstr_edx
CODE:004082F1		      mov     esi, offset ttt ;	rdtsc_list_start
CODE:004082F6
CODE:004082F6 @@timelog_lop:			      ;	...
CODE:004082F6		      call    wrspc
CODE:004082FB		      lea     edx, [esi+8]
CODE:004082FE		      call    wrstr_edx
CODE:00408303		      call    wrspc
CODE:00408308		      mov     eax, [esi]
CODE:0040830A		      mov     ebx, [esi+4]
CODE:0040830D		      mov     edx, 1000
CODE:00408312		      imul    ebx, edx
CODE:00408315		      mul     edx
CODE:00408317		      add     edx, ebx
CODE:00408319		      cmp     edx, [ds:mp3_output_milliseconds]
CODE:0040831F		      jnb     short @@timelog_oops
CODE:00408321		      div     [ds:mp3_output_milliseconds]
CODE:00408327		      call    wr_decimal_eax_with_thousands_seperator
CODE:0040832C
CODE:0040832C @@timelog_oops:			      ;	...
CODE:0040832C		      call    wrcrlf
CODE:00408331		      add     esi, 24
CODE:00408334		      cmp     esi, offset mp3_bitrate_tab
CODE:0040833A		      jnz     short @@timelog_lop
CODE:0040833C
CODE:0040833C @@exit:				      ;	...
CODE:0040833C		      push    0		      ;	uExitCode
CODE:0040833E		      call    ExitProcess
CODE:0040833E endp	      start
CODE:0040833E
CODE:00408343 ;	---------------------------------------------------------------------------
CODE:00408343
CODE:00408343 ;	DWORD __stdcall	GetTickCount()
CODE:00408343 GetTickCount:			      ;	...
CODE:00408343		      jmp     [dword ptr ds:unk_45E0B0]
CODE:00408349 ;	---------------------------------------------------------------------------
CODE:00408349
CODE:00408349 ;	LPSTR __stdcall	GetCommandLineA()
CODE:00408349 GetCommandLineA:			      ;	...
CODE:00408349		      jmp     [dword ptr ds:unk_45E0B4]
CODE:0040834F ;	---------------------------------------------------------------------------
CODE:0040834F
CODE:0040834F ;	void __stdcall ExitProcess(UINT	uExitCode)
CODE:0040834F ExitProcess:			      ;	...
CODE:0040834F		      jmp     [dword ptr ds:unk_45E0B8]
CODE:00408355 ;	---------------------------------------------------------------------------
CODE:00408355
CODE:00408355 ;	HANDLE __stdcall GetCurrentProcess()
CODE:00408355 GetCurrentProcess:		      ;	...
CODE:00408355		      jmp     [dword ptr ds:unk_45E0BC]
CODE:0040835B ;	---------------------------------------------------------------------------
CODE:0040835B
CODE:0040835B ;	int __stdcall GetThreadPriority(HANDLE hThread)
CODE:0040835B GetThreadPriority:		      ;	...
CODE:0040835B		      jmp     [dword ptr ds:unk_45E0C0]
CODE:00408361 ;	---------------------------------------------------------------------------
CODE:00408361
CODE:00408361 ;	HANDLE __stdcall GetCurrentThread()
CODE:00408361 GetCurrentThread:			      ;	...
CODE:00408361		      jmp     [dword ptr ds:unk_45E0C4]
CODE:00408367 ;	---------------------------------------------------------------------------
CODE:00408367
CODE:00408367 ;	DWORD __stdcall	GetFileSize(HANDLE hFile, LPDWORD lpFileSizeHigh)
CODE:00408367 GetFileSize:			      ;	...
CODE:00408367		      jmp     [dword ptr ds:unk_45E0C8]
CODE:0040836D ;	---------------------------------------------------------------------------
CODE:0040836D
CODE:0040836D ;	DWORD __stdcall	GetPriorityClass(HANDLE	hProcess)
CODE:0040836D GetPriorityClass:			      ;	...
CODE:0040836D		      jmp     [dword ptr ds:unk_45E0CC]
CODE:00408373 ;	---------------------------------------------------------------------------
CODE:00408373
CODE:00408373 ;	HANDLE __stdcall CreateFileA(LPCSTR lpFileName,	DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES	lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
CODE:00408373 CreateFileA:			      ;	...
CODE:00408373		      jmp     [dword ptr ds:unk_45E0D0]
CODE:00408379 ;	---------------------------------------------------------------------------
CODE:00408379
CODE:00408379 ;	LPVOID __stdcall MapViewOfFile(HANDLE hFileMappingObject, DWORD	dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow,	SIZE_T dwNumberOfBytesToMap)
CODE:00408379 MapViewOfFile:			      ;	...
CODE:00408379		      jmp     [dword ptr ds:unk_45E0D4]
CODE:0040837F ;	---------------------------------------------------------------------------
CODE:0040837F
CODE:0040837F ;	HANDLE __stdcall CreateFileMappingA(HANDLE hFile, LPSECURITY_ATTRIBUTES	lpFileMappingAttributes, DWORD flProtect, DWORD	dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCSTR lpName)
CODE:0040837F CreateFileMappingA:		      ;	...
CODE:0040837F		      jmp     [dword ptr ds:unk_45E0D8]
CODE:00408385 ;	---------------------------------------------------------------------------
CODE:00408385
CODE:00408385 ;	BOOL __stdcall CloseHandle(HANDLE hObject)
CODE:00408385 CloseHandle:			      ;	...
CODE:00408385		      jmp     [dword ptr ds:unk_45E0DC]
CODE:0040838B ;	---------------------------------------------------------------------------
CODE:0040838B
CODE:0040838B ;	BOOL __stdcall ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead,	LPOVERLAPPED lpOverlapped)
CODE:0040838B ReadFile:				      ;	...
CODE:0040838B		      jmp     [dword ptr ds:unk_45E0E0]
CODE:00408391 ;	---------------------------------------------------------------------------
CODE:00408391
CODE:00408391 ;	DWORD __stdcall	SetFilePointer(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
CODE:00408391 SetFilePointer:			      ;	...
CODE:00408391		      jmp     [dword ptr ds:unk_45E0E4]
CODE:00408397 ;	---------------------------------------------------------------------------
CODE:00408397
CODE:00408397 ;	BOOL __stdcall SetPriorityClass(HANDLE hProcess, DWORD dwPriorityClass)
CODE:00408397 SetPriorityClass:			      ;	...
CODE:00408397		      jmp     [dword ptr ds:unk_45E0E8]
CODE:0040839D ;	---------------------------------------------------------------------------
CODE:0040839D
CODE:0040839D ;	BOOL __stdcall SetThreadPriority(HANDLE	hThread, int nPriority)
CODE:0040839D SetThreadPriority:		      ;	...
CODE:0040839D		      jmp     [dword ptr ds:unk_45E0EC]
CODE:004083A3 ;	---------------------------------------------------------------------------
CODE:004083A3
CODE:004083A3 ;	void __stdcall Sleep(DWORD dwMilliseconds)
CODE:004083A3 Sleep:				      ;	...
CODE:004083A3		      jmp     [dword ptr ds:unk_45E0F0]
CODE:004083A9 ;	---------------------------------------------------------------------------
CODE:004083A9
CODE:004083A9 ;	BOOL __stdcall WriteFile(HANDLE	hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
CODE:004083A9 WriteFile:			      ;	...
CODE:004083A9		      jmp     [dword ptr ds:unk_45E0F4]
CODE:004083AF ;	---------------------------------------------------------------------------
CODE:004083AF
CODE:004083AF ;	HANDLE __stdcall GetStdHandle(DWORD nStdHandle)
CODE:004083AF GetStdHandle:			      ;	...
CODE:004083AF		      jmp     [dword ptr ds:unk_45E0F8]
CODE:004083B5 ;	---------------------------------------------------------------------------
CODE:004083B5
CODE:004083B5 ;	MMRESULT __stdcall waveOutUnprepareHeader(HWAVEOUT hwo,	LPWAVEHDR pwh, UINT cbwh)
CODE:004083B5 waveOutUnprepareHeader:		      ;	...
CODE:004083B5		      jmp     [dword ptr ds:unk_45E100]
CODE:004083BB ;	---------------------------------------------------------------------------
CODE:004083BB
CODE:004083BB ;	MMRESULT __stdcall waveOutRestart(HWAVEOUT hwo)
CODE:004083BB waveOutRestart:			      ;	...
CODE:004083BB		      jmp     [dword ptr ds:unk_45E104]
CODE:004083C1 ;	---------------------------------------------------------------------------
CODE:004083C1
CODE:004083C1 ;	MMRESULT __stdcall waveOutReset(HWAVEOUT hwo)
CODE:004083C1 waveOutReset:			      ;	...
CODE:004083C1		      jmp     [dword ptr ds:unk_45E108]
CODE:004083C7 ;	---------------------------------------------------------------------------
CODE:004083C7
CODE:004083C7 ;	MMRESULT __stdcall waveOutPrepareHeader(HWAVEOUT hwo, LPWAVEHDR	pwh, UINT cbwh)
CODE:004083C7 waveOutPrepareHeader:		      ;	...
CODE:004083C7		      jmp     [dword ptr ds:unk_45E10C]
CODE:004083CD ;	---------------------------------------------------------------------------
CODE:004083CD
CODE:004083CD ;	MMRESULT __stdcall waveOutPause(HWAVEOUT hwo)
CODE:004083CD waveOutPause:			      ;	...
CODE:004083CD		      jmp     [dword ptr ds:unk_45E110]
CODE:004083D3 ;	---------------------------------------------------------------------------
CODE:004083D3
CODE:004083D3 ;	MMRESULT __stdcall waveOutOpen(LPHWAVEOUT phwo,	UINT uDeviceID,	LPCWAVEFORMATEX	pwfx, DWORD_PTR	dwCallback, DWORD_PTR dwInstance, DWORD	fdwOpen)
CODE:004083D3 waveOutOpen:			      ;	...
CODE:004083D3		      jmp     [dword ptr ds:unk_45E114]
CODE:004083D9 ;	---------------------------------------------------------------------------
CODE:004083D9
CODE:004083D9 ;	MMRESULT __stdcall waveOutWrite(HWAVEOUT hwo, LPWAVEHDR	pwh, UINT cbwh)
CODE:004083D9 waveOutWrite:			      ;	...
CODE:004083D9		      jmp     [dword ptr ds:unk_45E118]
CODE:004083DF ;	---------------------------------------------------------------------------
CODE:004083DF
CODE:004083DF ;	MMRESULT __stdcall waveOutClose(HWAVEOUT hwo)
CODE:004083DF waveOutClose:			      ;	...
CODE:004083DF		      jmp     [dword ptr ds:unk_45E11C]
CODE:004083DF ;	---------------------------------------------------------------------------
CODE:004083E5		      align 20h
CODE:00408400		      dd 300h dup(?)
CODE:00408400 ends	      CODE
CODE:00408400
DATA:00409000 ;	Section	2. (virtual address 00009000)
DATA:00409000 ;	Virtual	size		      :	00055000 ( 348160.)
DATA:00409000 ;	Section	size in	file	      :	00001A00 (   6656.)
DATA:00409000 ;	Offset to raw data for section:	00007A00
DATA:00409000 ;	Flags C0000040:	Data Readable Writable
DATA:00409000 ;	Alignment     :	default
DATA:00409000 ;	===========================================================================
DATA:00409000
DATA:00409000 ;	Segment	type: Pure data
DATA:00409000 ;	Segment	permissions: Read/Write
DATA:00409000 segment	      DATA para	public 'DATA' use32
DATA:00409000		      assume cs:DATA
DATA:00409000		      ;org 409000h
DATA:00409000 option_test     db 0		      ;	...
DATA:00409001		      align 4
DATA:00409004 option_mono     db 0		      ;	...
DATA:00409005		      align 4
DATA:00409008 option_8bit     db 0		      ;	...
DATA:00409009		      align 4
DATA:0040900C option_rate_shift	db 0		      ;	...
DATA:0040900D		      align 10h
DATA:00409010 option_fast     db 0		      ;	...
DATA:00409011		      align 10h
DATA:00409020 cpuid_flags     dd 0		      ;	...
DATA:00409024 cpuid_exists    db 0		      ;	...
DATA:00409025 detected_cpu    db 0		      ;	...
DATA:00409026		      align 4
DATA:00409028 mp3_output_milliseconds dd 0	      ;	...
DATA:0040902C millisecond_count	dd 0		      ;	...
DATA:00409030 ;	HANDLE hProcess
DATA:00409030 hProcess	      dd 0		      ;	...
DATA:00409034 ;	HANDLE hThread
DATA:00409034 hThread	      dd 0		      ;	...
DATA:00409038 ;	DWORD dwPriorityClass
DATA:00409038 dwPriorityClass dd 0		      ;	...
DATA:0040903C ;	int nPriority
DATA:0040903C nPriority	      dd 0		      ;	...
DATA:00409040 ttt	      dd 2 dup(0)	      ;	...
DATA:00409048 rdtsc_read_header	db 'read header    ',0
DATA:00409058 rdtsc_read_header_extra dd  0, 0	      ;	...
DATA:00409060		      db 'read extra     ',0
DATA:00409070 rdtsc_read_granule dd 0, 0	      ;	...
DATA:00409078		      db 'read granule   ',0
DATA:00409088 rdtsc_append_main	dd 2 dup(0)	      ;	...
DATA:00409090		      db 'append main    ',0
DATA:004090A0 rdtsc_read_scalefac dd 2 dup(0)	      ;	...
DATA:004090A8		      db 'read scalefac  ',0
DATA:004090B8 rdtsc_xlat_scalefac dd 2 dup(0)	      ;	...
DATA:004090C0		      db 'xlat scalefac  ',0
DATA:004090D0 rdtsc_read_huffman dd 2 dup(0)	      ;	...
DATA:004090D8		      db 'read huffman   ',0
DATA:004090E8 rdtsc_ms_stereo dd 2 dup(0)	      ;	...
DATA:004090F0		      db 'ms stereo      ',0
DATA:00409100 rdtsc_i_stereo  dd 2 dup(0)	      ;	...
DATA:00409108		      db 'i stereo       ',0
DATA:00409118 rdtsc_reorder   dd 2 dup(0)	      ;	...
DATA:00409120		      db 'reorder        ',0
DATA:00409130 rdtsc_antialias dd 2 dup(0)	      ;	...
DATA:00409138		      db 'antialias      ',0
DATA:00409148 rdtsc_imdct     dd 2 dup(0)	      ;	...
DATA:00409150		      db 'imdct          ',0
DATA:00409160 rdtsc_imdct36   dd 2 dup(0)	      ;	...
DATA:00409168		      db ' imdct36       ',0
DATA:00409178 rdtsc_imdct12   dd 2 dup(0)	      ;	...
DATA:00409180		      db ' imdct12       ',0
DATA:00409190 rdtsc_imdct0    dd 2 dup(0)	      ;	...
DATA:00409198		      db ' imdct0        ',0
DATA:004091A8 rdtsc_synth_dct dd 2 dup(0)	      ;	...
DATA:004091B0		      db 'synth/dct      ',0
DATA:004091C0 rdtsc_dct32     dd 2 dup(0)	      ;	...
DATA:004091C8		      db ' synth.dct32   ',0
DATA:004091D8 rdtsc_synth     dd 2 dup(0)	      ;	...
DATA:004091E0		      db ' synth.output  ',0
DATA:004091F0 rdtsc_total     dd 2 dup(0)	      ;	...
DATA:004091F8		      db 'total          ',0
DATA:00409208 mp3_bitrate_tab dw  0,32,40,48,56,64,80,96,112,128,160,192,224,256,320, 0	; ...
DATA:00409208		      dw  0, 8,16,24,32,40,48,56,64,80,96,112,128,144,160, 0
DATA:00409248 mp3_freq_tab    dw 44100,48000,32000    ;	...
DATA:0040924E mp3_lsf_sf_expand_init_table db 0, 5, 4, 4, 0, 0 ; ...
DATA:00409254		      dw 400		      ;	0..399 ; normal	case
DATA:00409256		      db 0, 5, 4, 1, 0Ch, 0
DATA:0040925C		      dw 500		      ;	400..499
DATA:0040925E		      db 0, 3, 1, 1, 18h, 1
DATA:00409264		      dw 512		      ;	500..511
DATA:00409266		      db 1, 6, 6, 1, 24h, 0
DATA:0040926C		      dw 872		      ;	512+360	; 0..359 for 2nd channel of intensity stereo
DATA:0040926E		      db 1, 4, 4, 1, 30h, 0
DATA:00409274		      dw 1000		      ;	512+488	; 360..487
DATA:00409276		      db 1, 3, 1, 1, 3Ch, 0
DATA:0040927C		      dw 1024		      ;	512+512	; 488..511
DATA:0040927E mp3_synth_win_src	dw	1,     0,     0,     0,	    0,	   0,	  1,	 0 ; ...
DATA:0040927E		      dw      0,     0,	    1,	   0,	  1,	 0,	1,     0
DATA:0040927E		      dw      1,     1,	    0,	   1,	  1,	 1,	1,     2
DATA:0040927E		      dw      1,     2,	    1,	   2,	  2,	 3,	2,     3
DATA:0040927E		      dw      2,     4,	    3,	   3,	  4,	 4,	4,     5
DATA:0040927E		      dw      5,     5,	    5,	   6,	  6,	 6,	6,     7
DATA:0040927E		      dw      7,     6,	    8,	   7,	  7,	 8,	7,     7
DATA:0040927E		      dw      8,     7,	    7,	   7,	  6,	 6,	6,     5
DATA:0040927E		      dw 0FE51h,0FFFCh,0FFFDh,0FFFEh,0FFFFh,	 0,	1,     3
DATA:0040927E		      dw      3,     6,	    7,	   8,	0Bh,   0Ch,   0Eh,   11h
DATA:0040927E		      dw    13h,   15h,	  17h,	 1Ah,	1Ch,   1Fh,   22h,   24h
DATA:0040927E		      dw    27h,   2Ah,	  2Ch,	 2Fh,	32h,   35h,   36h,   3Ah
DATA:0040927E		      dw    3Ch,   3Eh,	  40h,	 42h,	44h,   45h,   47h,   48h
DATA:0040927E		      dw    49h,   49h,	  49h,	 49h,	49h,   48h,   46h,   45h
DATA:0040927E		      dw    43h,   40h,	  3Dh,	 3Ah,	35h,   31h,   2Bh,   27h
DATA:0040927E		      dw    1Fh,   19h,	  12h,	 0Ah,	  2,0FFF9h,0FFEFh,0FFE6h
DATA:0040927E		      dw 0F03Bh,   30h,	  3Bh,	 47h,	53h,   5Fh,   6Dh,   79h
DATA:0040927E		      dw    86h,   95h,	 0A1h,	0B0h,  0BDh,  0CBh,  0D9h,  0E6h
DATA:0040927E		      dw   0F3h,  101h,	 10Dh,	119h,  125h,  130h,  13Ah,  144h
DATA:0040927E		      dw   14Dh,  155h,	 15Bh,	162h,  166h,  16Ah,  16Bh,  16Dh
DATA:0040927E		      dw   16Ch,  16Ah,	 166h,	160h,  15Ah,  150h,  146h,  139h
DATA:0040927E		      dw   12Bh,  11Ah,	 108h,	0F3h,  0DDh,  0C5h,  0A9h,   8Eh
DATA:0040927E		      dw    6Fh,   4Eh,	  2Bh,	   7,0FFE1h,0FFB8h,0FF8Fh,0FF62h
DATA:0040927E		      dw 0FF35h,0FF06h,0FED5h,0FEA4h,0FE70h,0FE3Ch,0FE06h,0FDD0h
DATA:0040927E		      dw 0CF0Bh,  29Fh,	 2D7h,	311h,  349h,  382h,  3BBh,  3F4h
DATA:0040927E		      dw   42Ch,  464h,	 49Ah,	4D1h,  505h,  538h,  56Ah,  59Bh
DATA:0040927E		      dw   5C8h,  5F5h,	 620h,	647h,  66Ch,  68Fh,  6AFh,  6CCh
DATA:0040927E		      dw   6E5h,  6FCh,	 70Fh,	71Fh,  72Bh,  734h,  739h,  739h
DATA:0040927E		      dw   737h,  730h,	 726h,	717h,  704h,  6EDh,  6D3h,  6B4h
DATA:0040927E		      dw   691h,  66Ch,	 640h,	613h,  5E1h,  5ABh,  573h,  537h
DATA:0040927E		      dw   4F7h,  4B4h,	 46Fh,	427h,  3DBh,  38Fh,  33Eh,  2EDh
DATA:0040927E		      dw   29Ah,  244h,	 1EDh,	195h,  13Dh,  0E2h,   88h,   2Eh
DATA:0040947E		      db    0
DATA:0040947F		      db    0
DATA:00409480 mp3_slen_table  dw  0000h, 0100h,	0200h, 0300h, 0003h, 0101h, 0201h, 0301h ; ...
DATA:00409480		      dw  0102h, 0202h,	0302h, 0103h, 0203h, 0303h, 0204h, 0304h
DATA:004094A0 mp3_lsf_nsf_table	dd  05050506h, 09090909h, 09090906h ; ...
DATA:004094A0		      dd  03070506h, 060C0909h,	060C0906h
DATA:004094A0		      dd  00000A0Bh, 00001212h,	0000120Fh
DATA:004094A0		      dd  00070707h, 000C0C0Ch,	000C0F06h
DATA:004094A0		      dd  03060606h, 0609090Ch,	06090C06h
DATA:004094A0		      dd  00050808h, 00090C0Fh,	00091206h
DATA:004094E8 huff_tree_list_data db  11h,   1,	10h,   0, 22h,	 2, 12h, 21h ; ...
DATA:004094E8		      db  20h, 11h,   1, 10h,	0, 22h,	  2, 12h
DATA:004094E8		      db  21h, 20h, 10h, 11h,	1,   0,	33h, 23h
DATA:004094E8		      db  32h, 31h, 13h,   3, 30h, 22h,	12h, 21h
DATA:004094E8		      db    2, 20h, 11h,   1, 10h,   0,	33h,   3
DATA:004094E8		      db  23h, 32h, 30h, 13h, 31h, 22h,	  2, 12h
DATA:004094E8		      db  21h, 20h,   1, 11h, 10h,   0,	55h, 45h
DATA:004094E8		      db  54h, 53h, 35h, 44h, 25h, 52h,	15h, 51h
DATA:004094E8		      db    5, 34h, 50h, 43h, 33h, 24h,	42h, 14h
DATA:004094E8		      db  41h, 40h,   4, 23h, 32h,   3,	13h, 31h
DATA:004094E8		      db  30h, 22h, 12h, 21h,	2, 20h,	11h,   1
DATA:004094E8		      db  10h,	 0, 55h, 54h, 45h, 53h,	35h, 44h
DATA:004094E8		      db  25h, 52h,   5, 15h, 51h, 34h,	43h, 50h
DATA:004094E8		      db  33h, 24h, 42h, 14h, 41h,   4,	40h, 23h
DATA:004094E8		      db  32h, 13h, 31h,   3, 30h, 22h,	  2, 20h
DATA:004094E8		      db  12h, 21h, 11h,   1, 10h,   0,	55h, 45h
DATA:004094E8		      db  35h, 53h, 54h,   5, 44h, 25h,	52h, 15h
DATA:004094E8		      db  51h, 34h, 43h, 50h,	4, 24h,	42h, 33h
DATA:004094E8		      db  40h, 14h, 41h, 23h, 32h, 13h,	31h,   3
DATA:004094E8		      db  30h, 22h,   2, 12h, 21h, 20h,	11h,   1
DATA:004094E8		      db  10h,	 0, 77h, 67h, 76h, 57h,	75h, 66h
DATA:004094E8		      db  47h, 74h, 56h, 65h, 37h, 73h,	46h, 55h
DATA:004094E8		      db  54h, 63h, 27h, 72h, 64h,   7,	70h, 62h
DATA:004094E8		      db  45h, 35h,   6, 53h, 44h, 17h,	71h, 36h
DATA:004094E8		      db  26h, 25h, 52h, 15h, 51h, 34h,	43h, 16h
DATA:004094E8		      db  61h, 60h,   5, 50h, 24h, 42h,	33h,   4
DATA:004094E8		      db  14h, 41h, 40h, 23h, 32h,   3,	13h, 31h
DATA:004094E8		      db  30h, 22h, 12h, 21h,	2, 20h,	11h,   1
DATA:004094E8		      db  10h,	 0, 77h, 67h, 76h, 75h,	66h, 47h
DATA:004094E8		      db  74h, 57h, 55h, 56h, 65h, 37h,	73h, 46h
DATA:004094E8		      db  45h, 54h, 35h, 53h, 27h, 72h,	64h,   7
DATA:004094E8		      db  71h, 17h, 70h, 36h, 63h, 60h,	44h, 25h
DATA:004094E8		      db  52h,	 5, 15h, 62h, 26h,   6,	16h, 61h
DATA:004094E8		      db  51h, 34h, 50h, 43h, 33h, 24h,	42h, 14h
DATA:004094E8		      db  41h,	 4, 40h, 23h, 32h, 13h,	31h,   3
DATA:004094E8		      db  30h, 22h, 21h, 12h,	2, 20h,	11h,   1
DATA:004094E8		      db  10h,	 0, 77h, 67h, 76h, 57h,	75h, 66h
DATA:004094E8		      db  47h, 74h, 65h, 56h, 37h, 73h,	55h, 27h
DATA:004094E8		      db  72h, 46h, 64h, 17h, 71h,   7,	70h, 36h
DATA:004094E8		      db  63h, 45h, 54h, 44h,	6,   5,	26h, 62h
DATA:004094E8		      db  61h, 16h, 60h, 35h, 53h, 25h,	52h, 15h
DATA:004094E8		      db  51h, 34h, 43h, 50h,	4, 24h,	42h, 14h
DATA:004094E8		      db  33h, 41h, 23h, 32h, 40h,   3,	30h, 13h
DATA:004094E8		      db  31h, 22h, 12h, 21h,	2, 20h,	  0, 11h
DATA:004094E8		      db    1, 10h,0FEh,0FCh,0FDh,0EDh,0FFh,0EFh
DATA:004094E8		      db 0DFh,0EEh,0CFh,0DEh,0BFh,0FBh,0CEh,0DCh
DATA:004094E8		      db 0AFh,0E9h,0ECh,0DDh,0FAh,0CDh,0BEh,0EBh
DATA:004094E8		      db  9Fh,0F9h,0EAh,0BDh,0DBh, 8Fh,0F8h,0CCh
DATA:004094E8		      db 0AEh, 9Eh, 8Eh, 7Fh, 7Eh,0F7h,0DAh,0ADh
DATA:004094E8		      db 0BCh,0CBh,0F6h, 6Fh,0E8h, 5Fh,	9Dh,0D9h
DATA:004094E8		      db 0F5h,0E7h,0ACh,0BBh, 4Fh,0F4h,0CAh,0E6h
DATA:004094E8		      db 0F3h, 3Fh, 8Dh,0D8h, 2Fh,0F2h,	6Eh, 9Ch
DATA:004094E8		      db  0Fh,0C9h, 5Eh,0ABh, 7Dh,0D7h,	4Eh,0C8h
DATA:004094E8		      db 0D6h, 3Eh,0B9h, 9Bh,0AAh, 1Fh,0F1h,0F0h
DATA:004094E8		      db 0BAh,0E5h,0E4h, 8Ch, 6Dh,0E3h,0E2h, 2Eh
DATA:004094E8		      db  0Eh, 1Eh,0E1h,0E0h, 5Dh,0D5h,	7Ch,0C7h
DATA:004094E8		      db  4Dh, 8Bh,0B8h,0D4h, 9Ah,0A9h,	6Ch,0C6h
DATA:004094E8		      db  3Dh,0D3h, 7Bh, 2Dh,0D2h, 1Dh,0B7h, 5Ch
DATA:004094E8		      db 0C5h, 99h, 7Ah,0C3h,0A7h, 97h,	4Bh,0D1h
DATA:004094E8		      db  0Dh,0D0h, 8Ah,0A8h, 4Ch,0C4h,	6Bh,0B6h
DATA:004094E8		      db  3Ch, 2Ch,0C2h, 5Bh,0B5h, 89h,	1Ch,0C1h
DATA:004094E8		      db  98h, 0Ch,0C0h,0B4h, 6Ah,0A6h,	79h, 3Bh
DATA:004094E8		      db 0B3h, 88h, 5Ah, 2Bh,0A5h, 69h,0A4h, 78h
DATA:004094E8		      db  87h, 94h, 77h, 76h,0B2h, 1Bh,0B1h, 0Bh
DATA:004094E8		      db 0B0h, 96h, 4Ah, 3Ah,0A3h, 59h,	95h, 2Ah
DATA:004094E8		      db 0A2h, 1Ah,0A1h, 0Ah, 68h,0A0h,	86h, 49h
DATA:004094E8		      db  93h, 39h, 58h, 85h, 67h, 29h,	92h, 57h
DATA:004094E8		      db  75h, 38h, 83h, 66h, 47h, 74h,	56h, 65h
DATA:004094E8		      db  73h, 19h, 91h,   9, 90h, 48h,	84h, 72h
DATA:004094E8		      db  46h, 64h, 28h, 82h, 18h, 37h,	27h, 17h
DATA:004094E8		      db  71h, 55h,   7, 70h, 36h, 63h,	45h, 54h
DATA:004094E8		      db  26h, 62h, 35h, 81h,	8, 80h,	16h, 61h
DATA:004094E8		      db    6, 60h, 53h, 44h, 25h, 52h,	  5, 15h
DATA:004094E8		      db  51h, 34h, 43h, 50h, 24h, 42h,	33h, 14h
DATA:004094E8		      db  41h,	 4, 40h, 23h, 32h, 13h,	31h,   3
DATA:004094E8		      db  30h, 22h, 12h, 21h,	2, 20h,	11h,   1
DATA:004094E8		      db  10h,	 0,0FFh,0EFh,0FEh,0DFh,0EEh,0FDh
DATA:004094E8		      db 0CFh,0FCh,0DEh,0EDh,0BFh,0FBh,0CEh,0ECh
DATA:004094E8		      db 0DDh,0AFh,0FAh,0BEh,0EBh,0CDh,0DCh, 9Fh
DATA:004094E8		      db 0F9h,0EAh,0BDh,0DBh, 8Fh,0F8h,0CCh, 9Eh
DATA:004094E8		      db 0E9h, 7Fh,0F7h,0ADh,0DAh,0BCh,	6Fh,0AEh
DATA:004094E8		      db  0Fh,0CBh,0F6h, 8Eh,0E8h, 5Fh,	9Dh,0F5h
DATA:004094E8		      db  7Eh,0E7h,0ACh,0CAh,0BBh,0D9h,	8Dh, 4Fh
DATA:004094E8		      db 0F4h, 3Fh,0F3h,0D8h,0E6h, 2Fh,0F2h, 6Eh
DATA:004094E8		      db 0F0h, 1Fh,0F1h, 9Ch,0C9h, 5Eh,0ABh,0BAh
DATA:004094E8		      db 0E5h, 7Dh,0D7h, 4Eh,0E4h, 8Ch,0C8h, 3Eh
DATA:004094E8		      db  6Dh,0D6h,0E3h, 9Bh,0B9h, 2Eh,0AAh,0E2h
DATA:004094E8		      db  1Eh,0E1h, 0Eh,0E0h, 5Dh,0D5h,	7Ch,0C7h
DATA:004094E8		      db  4Dh, 8Bh,0D4h,0B8h, 9Ah,0A9h,	6Ch,0C6h
DATA:004094E8		      db  3Dh,0D3h,0D2h, 2Dh, 0Dh, 1Dh,	7Bh,0B7h
DATA:004094E8		      db 0D1h, 5Ch,0D0h,0C5h, 8Ah,0A8h,	4Ch,0C4h
DATA:004094E8		      db  6Bh,0B6h, 99h, 0Ch, 3Ch,0C3h,	7Ah,0A7h
DATA:004094E8		      db 0A6h,0C0h, 0Bh,0C2h, 2Ch, 5Bh,0B5h, 1Ch
DATA:004094E8		      db  89h, 98h,0C1h, 4Bh,0B4h, 6Ah,	3Bh, 79h
DATA:004094E8		      db 0B3h, 97h, 88h, 2Bh, 5Ah,0B2h,0A5h, 1Bh
DATA:004094E8		      db 0B1h,0B0h, 69h, 96h, 4Ah,0A4h,	78h, 87h
DATA:004094E8		      db  3Ah,0A3h, 59h, 95h, 2Ah,0A2h,	1Ah,0A1h
DATA:004094E8		      db  0Ah,0A0h, 68h, 86h, 49h, 94h,	39h, 93h
DATA:004094E8		      db  77h,	 9, 58h, 85h, 29h, 67h,	76h, 92h
DATA:004094E8		      db  91h, 19h, 90h, 48h, 84h, 57h,	75h, 38h
DATA:004094E8		      db  83h, 66h, 47h, 28h, 82h, 18h,	81h, 74h
DATA:004094E8		      db    8, 80h, 56h, 65h, 37h, 73h,	46h, 27h
DATA:004094E8		      db  72h, 64h, 17h, 55h, 71h,   7,	70h, 36h
DATA:004094E8		      db  63h, 45h, 54h, 26h, 62h, 16h,	  6, 60h
DATA:004094E8		      db  35h, 61h, 53h, 44h, 25h, 52h,	15h, 51h
DATA:004094E8		      db    5, 50h, 34h, 43h, 24h, 42h,	33h, 41h
DATA:004094E8		      db  14h,	 4, 23h, 32h, 40h,   3,	13h, 31h
DATA:004094E8		      db  30h, 22h, 12h, 21h,	2, 20h,	11h,   1
DATA:004094E8		      db  10h,	 0,0EFh,0FEh,0DFh,0FDh,0CFh,0FCh
DATA:004094E8		      db 0BFh,0FBh,0AFh,0FAh, 9Fh,0F9h,0F8h, 8Fh
DATA:004094E8		      db  7Fh,0F7h, 6Fh,0F6h,0FFh, 5Fh,0F5h, 4Fh
DATA:004094E8		      db 0F4h,0F3h,0F0h, 3Fh,0CEh,0ECh,0DDh,0DEh
DATA:004094E8		      db 0E9h,0EAh,0D9h,0EEh,0EDh,0EBh,0BEh,0CDh
DATA:004094E8		      db 0DCh,0DBh,0AEh,0CCh,0ADh,0DAh,	7Eh,0ACh
DATA:004094E8		      db 0CAh,0C9h, 7Dh, 5Eh,0BDh,0F2h,	2Fh, 0Fh
DATA:004094E8		      db  1Fh,0F1h, 9Eh,0BCh,0CBh, 8Eh,0E8h, 9Dh
DATA:004094E8		      db 0E7h,0BBh, 8Dh,0D8h, 6Eh,0E6h,	9Ch,0ABh
DATA:004094E8		      db 0BAh,0E5h,0D7h, 4Eh,0E4h, 8Ch,0C8h, 3Eh
DATA:004094E8		      db  6Dh,0D6h, 9Bh,0B9h,0AAh,0E1h,0D4h,0B8h
DATA:004094E8		      db 0A9h, 7Bh,0B7h,0D0h,0E3h, 0Eh,0E0h, 5Dh
DATA:004094E8		      db 0D5h, 7Ch,0C7h, 4Dh, 8Bh, 9Ah,	6Ch,0C6h
DATA:004094E8		      db  3Dh, 5Ch,0C5h, 0Dh, 8Ah,0A8h,	99h, 4Ch
DATA:004094E8		      db 0B6h, 7Ah, 3Ch, 5Bh, 89h, 1Ch,0C0h, 98h
DATA:004094E8		      db  79h,0E2h, 2Eh, 1Eh,0D3h, 2Dh,0D2h,0D1h
DATA:004094E8		      db  3Bh, 97h, 88h, 1Dh,0C4h, 6Bh,0C3h,0A7h
DATA:004094E8		      db  2Ch,0C2h,0B5h,0C1h, 0Ch, 4Bh,0B4h, 6Ah
DATA:004094E8		      db 0A6h,0B3h, 5Ah,0A5h, 2Bh,0B2h,	1Bh,0B1h
DATA:004094E8		      db  0Bh,0B0h, 69h, 96h, 4Ah,0A4h,	78h, 87h
DATA:004094E8		      db 0A3h, 3Ah, 59h, 2Ah, 95h, 68h,0A1h, 86h
DATA:004094E8		      db  77h, 94h, 49h, 57h, 67h,0A2h,	1Ah, 0Ah
DATA:004094E8		      db 0A0h, 39h, 93h, 58h, 85h, 29h,	92h, 76h
DATA:004094E8		      db    9, 19h, 91h, 90h, 48h, 84h,	75h, 38h
DATA:004094E8		      db  83h, 66h, 28h, 82h, 47h, 74h,	18h, 81h
DATA:004094E8		      db  80h,	 8, 56h, 37h, 73h, 65h,	46h, 27h
DATA:004094E8		      db  72h, 64h, 55h,   7, 17h, 71h,	70h, 36h
DATA:004094E8		      db  63h, 45h, 54h, 26h, 62h, 16h,	61h,   6
DATA:004094E8		      db  60h, 53h, 35h, 44h, 25h, 52h,	51h, 15h
DATA:004094E8		      db    5, 34h, 43h, 50h, 24h, 42h,	33h, 14h
DATA:004094E8		      db  41h,	 4, 40h, 23h, 32h, 13h,	31h,   3
DATA:004094E8		      db  30h, 22h, 12h, 21h,	2, 20h,	11h,   1
DATA:004094E8		      db  10h,	 0,0EFh,0FEh,0DFh,0FDh,0CFh,0FCh
DATA:004094E8		      db 0BFh,0FBh,0FAh,0AFh, 9Fh,0F9h,0F8h, 8Fh
DATA:004094E8		      db  7Fh,0F7h, 6Fh,0F6h, 5Fh,0F5h,	4Fh,0F4h
DATA:004094E8		      db  3Fh,0F3h, 2Fh,0F2h,0F1h, 1Fh,0F0h, 0Fh
DATA:004094E8		      db 0EEh,0DEh,0EDh,0CEh,0ECh,0DDh,0BEh,0EBh
DATA:004094E8		      db 0CDh,0DCh,0AEh,0EAh,0BDh,0DBh,0CCh, 9Eh
DATA:004094E8		      db 0E9h,0ADh,0DAh,0BCh,0CBh, 8Eh,0E8h, 9Dh
DATA:004094E8		      db 0D9h, 7Eh,0E7h,0ACh,0FFh,0CAh,0BBh, 8Dh
DATA:004094E8		      db 0D8h, 0Eh,0E0h, 0Dh,0E6h, 6Eh,	9Ch,0C9h
DATA:004094E8		      db  5Eh,0BAh,0E5h,0ABh, 7Dh,0D7h,0E4h, 8Ch
DATA:004094E8		      db 0C8h, 4Eh, 2Eh, 3Eh, 6Dh,0D6h,0E3h, 9Bh
DATA:004094E8		      db 0B9h,0AAh,0E2h, 1Eh,0E1h, 5Dh,0D5h, 7Ch
DATA:004094E8		      db 0C7h, 4Dh, 8Bh,0B8h,0D4h, 9Ah,0A9h, 6Ch
DATA:004094E8		      db 0C6h, 3Dh,0D3h, 2Dh,0D2h, 1Dh,	7Bh,0B7h
DATA:004094E8		      db 0D1h, 5Ch,0C5h, 8Ah,0A8h, 99h,	4Ch,0C4h
DATA:004094E8		      db  6Bh,0B6h,0D0h, 0Ch, 3Ch,0C3h,	7Ah,0A7h
DATA:004094E8		      db  2Ch,0C2h, 5Bh,0B5h, 1Ch, 89h,	98h,0C1h
DATA:004094E8		      db  4Bh,0C0h, 0Bh, 3Bh,0B0h, 0Ah,	1Ah,0B4h
DATA:004094E8		      db  6Ah,0A6h, 79h, 97h,0A0h,   9,	90h,0B3h
DATA:004094E8		      db  88h, 2Bh, 5Ah,0B2h,0A5h, 1Bh,0B1h, 69h
DATA:004094E8		      db  96h,0A4h, 4Ah, 78h, 87h, 3Ah,0A3h, 59h
DATA:004094E8		      db  95h, 2Ah,0A2h,0A1h, 68h, 86h,	77h, 49h
DATA:004094E8		      db  94h, 39h, 93h, 58h, 85h, 29h,	67h, 76h
DATA:004094E8		      db  92h, 19h, 91h, 48h, 84h, 57h,	75h, 38h
DATA:004094E8		      db  83h, 66h, 28h, 82h, 18h, 47h,	74h, 81h
DATA:004094E8		      db    8, 80h, 56h, 65h, 17h,   7,	70h, 73h
DATA:004094E8		      db  37h, 27h, 72h, 46h, 64h, 55h,	71h, 36h
DATA:004094E8		      db  63h, 45h, 54h, 26h, 62h, 16h,	61h,   6
DATA:004094E8		      db  60h, 35h, 53h, 44h, 25h, 52h,	15h,   5
DATA:004094E8		      db  50h, 51h, 34h, 43h, 24h, 42h,	33h, 14h
DATA:004094E8		      db  41h,	 4, 40h, 23h, 32h, 13h,	31h,   3
DATA:004094E8		      db  30h, 22h, 12h, 21h,	2, 20h,	11h,   1
DATA:004094E8		      db  10h,	 0, 0Bh, 0Fh, 0Dh, 0Eh,	  7,   5
DATA:004094E8		      db    9,	 6,   3, 0Ah, 0Ch,   2,	  1,   4
DATA:004094E8		      db    8,	 0, 0Fh, 0Eh, 0Dh, 0Ch,	0Bh, 0Ah
DATA:004094E8		      db    9,	 8,   7,   6,	5,   4,	  3,   2
DATA:004094E8		      db    1,	 0
DATA:00409A6A		      db 6 dup(0)
DATA:00409A70 mp3_huff_data   db   0,  0	      ;	...
DATA:00409A70		      db   1,  0	      ;	byte[32][2] ; table,linbits
DATA:00409A70		      db   2,  0
DATA:00409A70		      db   3,  0
DATA:00409A70		      db   0,  0
DATA:00409A70		      db   4,  0
DATA:00409A70		      db   5,  0
DATA:00409A70		      db   6,  0
DATA:00409A70		      db   7,  0
DATA:00409A70		      db   8,  0
DATA:00409A70		      db   9,  0
DATA:00409A70		      db  10,  0
DATA:00409A70		      db  11,  0
DATA:00409A70		      db  12,  0
DATA:00409A70		      db   0,  0
DATA:00409A70		      db  13,  0
DATA:00409A70		      db  14,  1
DATA:00409A70		      db  14,  2
DATA:00409A70		      db  14,  3
DATA:00409A70		      db  14,  4
DATA:00409A70		      db  14,  6
DATA:00409A70		      db  14,  8
DATA:00409A70		      db  14, 10
DATA:00409A70		      db  14, 13
DATA:00409A70		      db  15,  4
DATA:00409A70		      db  15,  5
DATA:00409A70		      db  15,  6
DATA:00409A70		      db  15,  7
DATA:00409A70		      db  15,  8
DATA:00409A70		      db  15,  9
DATA:00409A70		      db  15, 11
DATA:00409A70		      db  15, 13
DATA:00409AB0 mp3_band_size_long db    4,   4,	 4,   4,   4,	4,   6,	  6,   8,   8, 0Ah ; ...
DATA:00409AB0		      db  0Ch, 10h, 14h, 18h, 1Ch, 22h,	2Ah, 32h, 36h, 4Ch, 9Eh	; byte[9][22]
DATA:00409AB0		      db    4,	 4,   4,   4,	4,   4,	  6,   6,   6,	 8, 0Ah
DATA:00409AB0		      db  0Ch, 10h, 12h, 16h, 1Ch, 22h,	28h, 2Eh, 36h, 36h,0C0h
DATA:00409AB0		      db    4,	 4,   4,   4,	4,   4,	  6,   6,   8, 0Ah, 0Ch
DATA:00409AB0		      db  10h, 14h, 18h, 1Eh, 26h, 2Eh,	38h, 44h, 54h, 66h, 1Ah
DATA:00409AB0		      db    6,	 6,   6,   6,	6,   6,	  8, 0Ah, 0Ch, 0Eh, 10h
DATA:00409AB0		      db  14h, 18h, 1Ch, 20h, 26h, 2Eh,	34h, 3Ch, 44h, 3Ah, 36h
DATA:00409AB0		      db    6,	 6,   6,   6,	6,   6,	  8, 0Ah, 0Ch, 0Eh, 10h
DATA:00409AB0		      db  12h, 16h, 1Ah, 20h, 26h, 2Eh,	34h, 40h, 46h, 4Ch, 24h
DATA:00409AB0		      db    6,	 6,   6,   6,	6,   6,	  8, 0Ah, 0Ch, 0Eh, 10h
DATA:00409AB0		      db  14h, 18h, 1Ch, 20h, 26h, 2Eh,	34h, 3Ch, 44h, 3Ah, 36h
DATA:00409AB0		      db    6,	 6,   6,   6,	6,   6,	  8, 0Ah, 0Ch, 0Eh, 10h
DATA:00409AB0		      db  14h, 18h, 1Ch, 20h, 26h, 2Eh,	34h, 3Ch, 44h, 3Ah, 36h
DATA:00409AB0		      db    6,	 6,   6,   6,	6,   6,	  8, 0Ah, 0Ch, 0Eh, 10h
DATA:00409AB0		      db  14h, 18h, 1Ch, 20h, 26h, 2Eh,	34h, 3Ch, 44h, 3Ah, 36h
DATA:00409AB0		      db  0Ch, 0Ch, 0Ch, 0Ch, 0Ch, 0Ch,	10h, 14h, 18h, 1Ch, 20h
DATA:00409AB0		      db  28h, 30h, 38h, 40h, 4Ch, 5Ah,	  2,   2,   2,	 2,   2
DATA:00409B76		      db 10 dup(0)	      ;	data align
DATA:00409B80 mp3_band_size_short db	4,   4,	  4,   4,   6,	 8, 0Ah, 0Ch, 0Eh, 12h,	16h, 1Eh, 38h ;	...
DATA:00409B80		      db    4,	 4,   4,   4,	6,   6,	0Ah, 0Ch, 0Eh, 10h, 14h, 1Ah, 42h ; byte[9][16]	? ; byte [9][13]
DATA:00409B80		      db    4,	 4,   4,   4,	6,   8,	0Ch, 10h, 14h, 1Ah, 22h, 2Ah, 0Ch
DATA:00409B80		      db    4,	 4,   4,   6,	6,   8,	0Ah, 0Eh, 12h, 1Ah, 20h, 2Ah, 12h
DATA:00409B80		      db    4,	 4,   4,   6,	8, 0Ah,	0Ch, 0Eh, 12h, 18h, 20h, 2Ch, 0Ch
DATA:00409B80		      db    4,	 4,   4,   6,	8, 0Ah,	0Ch, 0Eh, 12h, 18h, 1Eh, 28h, 12h
DATA:00409B80		      db    4,	 4,   4,   6,	8, 0Ah,	0Ch, 0Eh, 12h, 18h, 1Eh, 28h, 12h
DATA:00409B80		      db    4,	 4,   4,   6,	8, 0Ah,	0Ch, 0Eh, 12h, 18h, 1Eh, 28h, 12h
DATA:00409B80		      db    8,	 8,   8, 0Ch, 10h, 14h,	18h, 1Ch, 24h,	 2,   2,   2, 1Ah
DATA:00409BF5		      db 11 dup(0)	      ;	data align
DATA:00409C00 mp3_pretab      db    0,	 0,   0,   0,	0,   0,	  0,   0,   0,	 0,   0	; ...
DATA:00409C00		      db    0,	 0,   0,   0,	0,   0,	  0,   0,   0,	 0,   0
DATA:00409C00		      db    0,	 0,   0,   0,	0,   0,	  0,   0,   0,	 0,   0
DATA:00409C00		      db    1,	 1,   1,   1,	2,   2,	  3,   3,   3,	 2,   0
DATA:00409C2C		      db 4 dup(0)	      ;	data align
DATA:00409C30 mp3_mdct_win_src dd  00421D4Bh, 00DB8F02h, 019C7F16h, 029ADCC0h, 04000001h, 06246711h ; ...
DATA:00409C30		      dd  09EE0645h, 12A7D60Ch,	3DF40538h,0BC63D32Fh,0E7B0025Bh,0F069D222h ; these are sine values divided by cosine values...
DATA:00409C30		      dd 0F4337156h,0F657D867h,0F7BCFBA8h,0F8BB5952h,0F97C4965h,0FA15BB1Ch
DATA:00409C30		      dd 0FA946D93h,0FB00518Eh,0FB5EA270h,0FBB2FDEAh,0FC000000h,0FC479F38h
DATA:00409C30		      dd 0FC8B6609h,0FCCC9898h,0FD0C4F0Bh,0FD4B895Ch,0FD8B3FCFh,0FDCC725Eh
DATA:00409C30		      dd 0FE10392Fh,0FE57D867h,0FEA4DA7Dh,0FEF935F7h,0FF5786D9h,0FFC36AD5h
DATA:00409C30		      dd  00421D4Bh, 00DB8F02h,	019C7F16h, 029ADCC0h, 04000001h, 06246711h
DATA:00409C30		      dd  09EE0645h, 12A7D60Ch,	3DF40538h,0BC63D32Fh,0E7B0025Bh,0F069D222h
DATA:00409C30		      dd 0F4337156h,0F657D867h,0F7BCFBA8h,0F8BB5952h,0F97C4965h,0FA15BB1Ch
DATA:00409C30		      dd 0FA931B29h,0FAF546B9h,0FB41DABBh,0FB7D8F97h,0FBABA162h,0FBCE4E62h
DATA:00409C30		      dd 0FBF01C67h,0FC45C8AFh,0FCD2D50Dh,0FD9008D0h,0FE74C032h,0FF771894h
DATA:00409C30		      dd  00000000h, 00000000h,	00000000h, 00000000h, 00000000h, 00000000h
DATA:00409C30		      dd  00DB8F02h, 04000001h,	12A7D60Ch,0E7B0025Bh,0F657D867h,0F97C4965h
DATA:00409C30		      dd 0FB00518Eh,0FC000000h,0FCCC9898h,0FD8B3FCFh,0FE57D867h,0FF5786D9h
DATA:00409C30		      dd  00000000h, 00000000h,	00000000h, 00000000h, 00000000h, 00000000h
DATA:00409C30		      dd  00000000h, 00000000h,	00000000h, 00000000h, 00000000h, 00000000h
DATA:00409C30		      dd  00000000h, 00000000h,	00000000h, 00000000h, 00000000h, 00000000h
DATA:00409C30		      dd  00000000h, 00000000h,	00000000h, 00000000h, 00000000h, 00000000h
DATA:00409C30		      dd  00000000h, 00000000h,	00000000h, 00000000h, 00000000h, 00000000h
DATA:00409C30		      dd  026988B5h, 0BBA3752h,	37D3294Fh,0B73F655Bh,0E3B0025Bh,0EDAD5D13h
DATA:00409C30		      dd 0F2B2ADA2h,0F58C28B8h,0F75657D6h,0F88E2C57h,0F96DE565h,0FA1449CDh
DATA:00409C30		      dd 0FA946D93h,0FB00518Eh,0FB5EA270h,0FBB2FDEAh,0FC000000h,0FC479F38h
DATA:00409C30		      dd 0FC8B6609h,0FCCC9898h,0FD0C4F0Bh,0FD4B895Ch,0FD8B3FCFh,0FDCC725Eh
DATA:00409C30		      dd 0FE10392Fh,0FE57D867h,0FEA4DA7Dh,0FEF935F7h,0FF5786D9h,0FFC36AD5h
DATA:00409E70 mp3_is_table_normal dd  00000000h, 40000000h ; ...
DATA:00409E70		      dd  0D8658BBh, 3279A746h
DATA:00409E70		      dd  176CF5D1h, 28930A30h
DATA:00409E70		      dd  20000000h, 20000000h
DATA:00409E70		      dd  28930A30h, 176CF5D1h
DATA:00409E70		      dd  3279A746h, 0D8658BBh
DATA:00409E70		      dd  40000000h, 00000000h
DATA:00409EA8 mp3_is_table_lsf_src dd 80000000h	      ;	...
DATA:00409EA8					      ;	sqrt based constants...
DATA:00409EA8					      ;	40000000h*2 ; 2.0  (2^1.00) aka	2
DATA:00409EAC		      dd 6BA27E66h	      ;	35D13F33h*2 ; 1.681 (2^0.75)
DATA:00409EB0		      dd 5A82799Ah	      ;	2D413CCDh*2 ;1.414 (2^0.50) aka	sqrt(2)
DATA:00409EB4		      dd 4C1BF82Ah	      ;	260DFC15h*2 ; 1.189 (2^0.25) aka sqrt(sqrt(2))
DATA:00409EB8 mp3_pow2_quarters	dd 80000000h	      ;	...
DATA:00409EB8					      ;	40000000h*2 ; 2^(0/4)
DATA:00409EBC		      dd 9837F052h	      ;	4C1BF829h*2 ; 2^(1/4)
DATA:00409EC0		      dd 0B504F334h	      ;	5A82799Ah*2 ; 2^(2/4)
DATA:00409EC4		      dd 0D744FCCCh	      ;	6BA27E66h*2 ; 2^(3/4)
DATA:00409EC8 mp3_initialized dd 0		      ;	...
DATA:00409ECC mp3_huff_num_entries dd 12h	      ;	...
DATA:00409ED0 wrchr_buf	      db 0		      ;	...
DATA:00409ED1		      align 4
DATA:00409ED4 ;	LPCSTR mp3_src_fname
DATA:00409ED4 mp3_src_fname   dd 0		      ;	...
DATA:00409ED8 ;	LPCSTR mp3_dst_fname
DATA:00409ED8 mp3_dst_fname   dd 0		      ;	...
DATA:00409EDC ;	LPCSTR mp3_pcm_fname
DATA:00409EDC mp3_pcm_fname   dd 0		      ;	...
DATA:00409EE0 mp3_wav_header  db 'RIFF$',0,0,0,'WAVEfmt ',10h,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,4,0,10h,0,'data',0,0,0,0 ; ...
DATA:00409F0C have_wave_error dd 0		      ;	...
DATA:00409F10 num_enqueued_frames dd 0		      ;	...
DATA:00409F14 ;	HWAVEOUT mp3_waveout_handle
DATA:00409F14 mp3_waveout_handle dd 0		      ;	...
DATA:00409F18 ;	const WAVEFORMATEX mp3_wf
DATA:00409F18 mp3_wf	      WAVEFORMATEX <1, 2, 0, 0,	4, 10h,	0> ; ...
DATA:00409F2A		      align 10h
DATA:00409F30 ;	struct wavehdr_tag mp3_wave_headers
DATA:00409F30 mp3_wave_headers wavehdr_tag <0>	      ;	...
DATA:00409F50		      db 224 dup(0)
DATA:0040A030 end_of_wave_headers dd 0		      ;	...
DATA:0040A034 txt_decode_timing1 db 'audio duration ',0 ; ...
DATA:0040A044 txt_decode_timing2 db ' milliseconds, decoded in ',0 ; ...
DATA:0040A05F txt_decode_timing3 db ' milliseconds',0Dh,0Ah,0 ; ...
DATA:0040A06F txt_clks_per_second db ' clock cycles per second:',0Dh,0Ah,0 ; ...
DATA:0040A08B huff_tree_list_numbits db	   3,	3,   2,	  1,   6,   6,	 5,   5	; ...
DATA:0040A08B		      db    5,	 3,   3,   3,	1,   6,	  6,   5
DATA:0040A08B		      db    5,	 5,   3,   2,	2,   2,	  8,   8
DATA:0040A08B		      db    7,	 6,   7,   7,	7,   7,	  6,   6
DATA:0040A08B		      db    6,	 6,   3,   3,	3,   1,	  7,   7
DATA:0040A08B		      db    6,	 6,   6,   5,	5,   5,	  5,   4
DATA:0040A08B		      db    4,	 4,   3,   2,	3,   3,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah,   9,   9,	9,   9,	  8,   8
DATA:0040A08B		      db    9,	 9,   8,   9,	9,   8,	  8,   7
DATA:0040A08B		      db    7,	 7,   8,   8,	8,   8,	  7,   7
DATA:0040A08B		      db    7,	 7,   6,   5,	6,   6,	  4,   3
DATA:0040A08B		      db    3,	 1, 0Bh, 0Bh, 0Ah,   9,	0Ah, 0Ah
DATA:0040A08B		      db    9,	 9,   9,   8,	8,   9,	  9,   9
DATA:0040A08B		      db    9,	 8,   8,   8,	7,   8,	  8,   8
DATA:0040A08B		      db    8,	 8,   8,   8,	8,   6,	  6,   6
DATA:0040A08B		      db    4,	 4,   2,   3,	3,   2,	  9,   9
DATA:0040A08B		      db    8,	 8,   9,   9,	8,   8,	  8,   8
DATA:0040A08B		      db    7,	 7,   7,   8,	8,   7,	  7,   7
DATA:0040A08B		      db    7,	 6,   6,   6,	6,   5,	  5,   6
DATA:0040A08B		      db    6,	 5,   5,   4,	4,   4,	  3,   3
DATA:0040A08B		      db    3,	 3, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Bh
DATA:0040A08B		      db  0Bh, 0Ah,   9,   9, 0Ah, 0Ah,	  9,   9
DATA:0040A08B		      db  0Ah, 0Ah,   9, 0Ah, 0Ah,   8,	  8,   9
DATA:0040A08B		      db    9, 0Ah, 0Ah,   9,	9, 0Ah,	0Ah,   8
DATA:0040A08B		      db    8,	 8,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db    8,	 8,   8,   8,	8,   8,	  7,   7
DATA:0040A08B		      db    7,	 7,   6,   6,	6,   6,	  4,   3
DATA:0040A08B		      db    3,	 1, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Bh, 0Bh, 0Ah, 0Ah,   9,	  9,   9
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah,	8,   8,	  9,   9
DATA:0040A08B		      db    7,	 8,   8,   8,	8,   8,	  9,   9
DATA:0040A08B		      db    9,	 9,   8,   7,	8,   8,	  7,   7
DATA:0040A08B		      db    8,	 8,   8,   9,	9,   8,	  8,   8
DATA:0040A08B		      db    8,	 8,   8,   7,	7,   6,	  6,   7
DATA:0040A08B		      db    7,	 6,   5,   4,	5,   5,	  3,   3
DATA:0040A08B		      db    3,	 2, 0Ah, 0Ah,	9,   9,	  9,   9
DATA:0040A08B		      db    9,	 9,   9,   8,	8,   9,	  9,   8
DATA:0040A08B		      db    8,	 8,   8,   8,	8,   9,	  9,   8
DATA:0040A08B		      db    8,	 8,   8,   8,	9,   9,	  7,   7
DATA:0040A08B		      db    7,	 8,   8,   8,	8,   8,	  8,   7
DATA:0040A08B		      db    7,	 7,   7,   8,	8,   7,	  7,   7
DATA:0040A08B		      db    6,	 6,   6,   6,	7,   7,	  6,   5
DATA:0040A08B		      db    5,	 5,   4,   4,	5,   5,	  4,   3
DATA:0040A08B		      db    3,	 3, 13h, 13h, 12h, 11h,	10h, 10h
DATA:0040A08B		      db  10h, 10h, 10h, 10h, 10h, 10h,	10h, 10h
DATA:0040A08B		      db  11h, 11h, 0Fh, 0Fh, 10h, 10h,	0Fh, 0Fh
DATA:0040A08B		      db  0Fh, 0Fh, 0Fh, 0Fh, 0Fh, 0Fh,	0Fh, 0Fh
DATA:0040A08B		      db  10h, 10h, 0Fh, 10h, 10h, 0Eh,	0Eh, 0Fh
DATA:0040A08B		      db  0Fh, 0Fh, 0Fh, 0Eh, 0Eh, 0Eh,	0Eh, 0Eh
DATA:0040A08B		      db  0Eh, 0Eh, 0Eh, 0Eh, 0Eh, 0Eh,	0Fh, 0Fh
DATA:0040A08B		      db  0Eh, 0Dh, 0Eh, 0Eh, 0Dh, 0Dh,	0Eh, 0Eh
DATA:0040A08B		      db  0Dh, 0Eh, 0Eh, 0Dh, 0Eh, 0Eh,	0Dh, 0Eh
DATA:0040A08B		      db  0Eh, 0Dh, 0Dh, 0Eh, 0Eh, 0Ch,	0Ch, 0Ch
DATA:0040A08B		      db  0Dh, 0Dh, 0Dh, 0Dh, 0Dh, 0Dh,	0Ch, 0Dh
DATA:0040A08B		      db  0Dh, 0Ch, 0Ch, 0Dh, 0Dh, 0Dh,	0Dh, 0Dh
DATA:0040A08B		      db  0Dh, 0Dh, 0Dh, 0Dh, 0Dh, 0Dh,	0Dh, 0Ch
DATA:0040A08B		      db  0Ch, 0Dh, 0Dh, 0Ch, 0Ch, 0Ch,	0Ch, 0Dh
DATA:0040A08B		      db  0Dh, 0Dh, 0Dh, 0Ch, 0Dh, 0Dh,	0Ch, 0Bh
DATA:0040A08B		      db  0Ch, 0Ch, 0Ch, 0Ch, 0Ch, 0Ch,	0Ch, 0Ch
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Ch, 0Ch,	0Bh, 0Bh
DATA:0040A08B		      db  0Ch, 0Ch, 0Bh, 0Ch, 0Ch, 0Ch,	0Ch, 0Bh
DATA:0040A08B		      db  0Bh, 0Ch, 0Ch, 0Bh, 0Ch, 0Ch,	0Bh, 0Ch
DATA:0040A08B		      db  0Ch, 0Bh, 0Ch, 0Ch, 0Ah, 0Ah,	0Ah, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Bh, 0Bh, 0Ah,	0Bh, 0Bh
DATA:0040A08B		      db  0Ah, 0Bh, 0Bh, 0Bh, 0Bh, 0Ah,	0Ah, 0Bh
DATA:0040A08B		      db  0Bh, 0Ah, 0Ah, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh,	 9,   9, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Bh, 0Bh,   9,   9,	9, 0Ah,	0Ah,   9
DATA:0040A08B		      db    9, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah,   8,	9,   9,	  9,   9
DATA:0040A08B		      db    9,	 9, 0Ah, 0Ah,	9,   9,	  9,   8
DATA:0040A08B		      db    8,	 9,   9,   9,	9,   9,	  9,   8
DATA:0040A08B		      db    7,	 8,   8,   8,	8,   7,	  7,   7
DATA:0040A08B		      db    7,	 7,   6,   6,	6,   6,	  4,   4
DATA:0040A08B		      db    3,	 1, 0Dh, 0Dh, 0Dh, 0Dh,	0Ch, 0Dh
DATA:0040A08B		      db  0Dh, 0Dh, 0Dh, 0Dh, 0Dh, 0Ch,	0Dh, 0Dh
DATA:0040A08B		      db  0Ch, 0Ch, 0Ch, 0Ch, 0Ch, 0Ch,	0Ch, 0Ch
DATA:0040A08B		      db  0Ch, 0Ch, 0Ch, 0Ch, 0Ch, 0Ch,	0Ch, 0Ch
DATA:0040A08B		      db  0Ch, 0Ch, 0Ch, 0Ch, 0Ch, 0Ch,	0Ch, 0Dh
DATA:0040A08B		      db  0Dh, 0Bh, 0Bh, 0Ch, 0Ch, 0Ch,	0Ch, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Ch,	0Ch, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Ch
DATA:0040A08B		      db  0Ch, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Ch, 0Ch, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Ah, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Ah, 0Ah, 0Bh, 0Bh, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Bh, 0Bh, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Bh, 0Bh, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Bh, 0Bh,   9, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db    9, 0Ah, 0Ah, 0Ah, 0Ah,   9,	0Ah, 0Ah
DATA:0040A08B		      db    9, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah,	 9,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db  0Ah, 0Ah,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db  0Ah, 0Ah,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db    8,	 9,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db    9,	 9,   9,   8,	8,   8,	  8,   9
DATA:0040A08B		      db    9,	 9,   9,   9,	9,   9,	  9,   8
DATA:0040A08B		      db    8,	 8,   8,   8,	8,   9,	  9,   8
DATA:0040A08B		      db    8,	 8,   8,   8,	8,   8,	  9,   9
DATA:0040A08B		      db    8,	 7,   8,   8,	7,   7,	  7,   7
DATA:0040A08B		      db    8,	 8,   7,   7,	7,   7,	  7,   6
DATA:0040A08B		      db    7,	 7,   6,   6,	7,   7,	  6,   6
DATA:0040A08B		      db    6,	 5,   5,   5,	5,   5,	  3,   4
DATA:0040A08B		      db    4,	 3, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Ah, 0Bh, 0Bh, 0Bh,	0Bh, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah,	8, 0Ah,	0Ah,   9
DATA:0040A08B		      db    9,	 9,   9, 0Ah, 10h, 11h,	11h, 0Fh
DATA:0040A08B		      db  0Fh, 10h, 10h, 0Eh, 0Fh, 0Fh,	0Eh, 0Eh
DATA:0040A08B		      db  0Fh, 0Fh, 0Eh, 0Eh, 0Fh, 0Fh,	0Fh, 0Fh
DATA:0040A08B		      db  0Eh, 0Fh, 0Fh, 0Eh, 0Dh,   8,	  9,   9
DATA:0040A08B		      db    8,	 8, 0Dh, 0Eh, 0Eh, 0Eh,	0Eh, 0Eh
DATA:0040A08B		      db  0Eh, 0Eh, 0Eh, 0Eh, 0Eh, 0Dh,	0Dh, 0Eh
DATA:0040A08B		      db  0Eh, 0Eh, 0Eh, 0Dh, 0Eh, 0Eh,	0Dh, 0Dh
DATA:0040A08B		      db  0Dh, 0Eh, 0Eh, 0Eh, 0Eh, 0Dh,	0Dh, 0Eh
DATA:0040A08B		      db  0Eh, 0Dh, 0Eh, 0Eh, 0Ch, 0Dh,	0Dh, 0Dh
DATA:0040A08B		      db  0Dh, 0Dh, 0Dh, 0Dh, 0Dh, 0Dh,	0Dh, 0Dh
DATA:0040A08B		      db  0Dh, 0Dh, 0Dh, 0Ch, 0Dh, 0Dh,	0Dh, 0Dh
DATA:0040A08B		      db  0Dh, 0Dh, 0Ch, 0Dh, 0Dh, 0Ch,	0Ch, 0Dh
DATA:0040A08B		      db  0Dh, 0Bh, 0Ch, 0Ch, 0Ch, 0Ch,	0Ch, 0Ch
DATA:0040A08B		      db  0Ch, 0Dh, 0Dh, 0Bh, 0Ch, 0Ch,	0Ch, 0Ch
DATA:0040A08B		      db  0Bh, 0Ch, 0Ch, 0Ch, 0Ch, 0Ch,	0Ch, 0Ch
DATA:0040A08B		      db  0Ch, 0Bh, 0Ch, 0Ch, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Ch, 0Ch, 0Ch, 0Ch, 0Ch, 0Ch,	0Ch, 0Ch
DATA:0040A08B		      db  0Bh, 0Ch, 0Ch, 0Bh, 0Ch, 0Ch,	0Bh, 0Ch
DATA:0040A08B		      db  0Ch, 0Bh, 0Ch, 0Ch, 0Bh, 0Ah,	0Ah, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Ah,	0Ah, 0Bh
DATA:0040A08B		      db  0Bh, 0Ah, 0Ah, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Ah, 0Bh, 0Bh,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Bh, 0Bh, 0Ah, 0Ah, 0Bh,	0Bh, 0Ah
DATA:0040A08B		      db  0Ah, 0Bh, 0Bh, 0Ah,	9,   9,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah,	9,   9,	  9, 0Ah
DATA:0040A08B		      db  0Ah,	 9, 0Ah, 0Ah,	9,   9,	  8,   9
DATA:0040A08B		      db    9,	 9,   9,   9,	9,   9,	  9,   8
DATA:0040A08B		      db    8,	 9,   9,   8,	8,   7,	  7,   8
DATA:0040A08B		      db    8,	 7,   6,   6,	6,   6,	  4,   4
DATA:0040A08B		      db    3,	 1,   8,   8,	8,   8,	  8,   8
DATA:0040A08B		      db    8,	 8,   7,   8,	8,   7,	  7,   8
DATA:0040A08B		      db    8,	 7,   7,   7,	7,   7,	  7,   7
DATA:0040A08B		      db    7,	 7,   7,   7,	7,   8,	  8,   9
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh, 0Bh, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Bh, 0Bh, 0Bh,	4, 0Bh,	0Bh, 0Bh
DATA:0040A08B		      db  0Bh, 0Ch, 0Ch, 0Bh, 0Ah, 0Bh,	0Bh, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Bh, 0Bh, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Bh, 0Bh, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Bh, 0Bh, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db  0Ah, 0Bh, 0Bh, 0Ah, 0Bh, 0Bh,	0Ah,   9
DATA:0040A08B		      db  0Ah, 0Ah, 0Ah, 0Ah, 0Bh, 0Bh,	0Ah,   9
DATA:0040A08B		      db    9, 0Ah, 0Ah,   9, 0Ah, 0Ah,	0Ah, 0Ah
DATA:0040A08B		      db    9,	 9, 0Ah, 0Ah,	9,   9,	  9,   9
DATA:0040A08B		      db    9,	 9,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db    9,	 9,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db    9,	 9,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db    9,	 9,   9,   9,	9,   9,	  9,   9
DATA:0040A08B		      db  0Ah, 0Ah,   9,   9,	9, 0Ah,	0Ah,   8
DATA:0040A08B		      db    9,	 9,   8,   8,	8,   8,	  8,   8
DATA:0040A08B		      db    8,	 8,   8,   8,	8,   8,	  8,   9
DATA:0040A08B		      db    9,	 8,   8,   8,	8,   8,	  8,   9
DATA:0040A08B		      db    9,	 7,   8,   8,	7,   7,	  7,   7
DATA:0040A08B		      db    7,	 8,   8,   7,	7,   6,	  6,   7
DATA:0040A08B		      db    7,	 6,   5,   5,	6,   6,	  4,   4
DATA:0040A08B		      db    4,	 4,   6,   6,	6,   6,	  6,   6
DATA:0040A08B		      db    5,	 5,   5,   5,	5,   4,	  4,   4
DATA:0040A08B		      db    4,	 1,   4,   4,	4,   4,	  4,   4
DATA:0040A08B		      db    4,	 4,   4,   4,	4,   4,	  4,   4
DATA:0040A08B		      db    4,	 4
DATA:0040A60D _@@const_3      db 3		      ;	...
DATA:0040A60E		      db 3 dup(0)
DATA:0040A611 mp3_synth_filter_procs dd	offset synth_16bit_shift_0_slow	; ...
DATA:0040A611					      ;	SYNTH_MACRO 0,0,0
DATA:0040A615		      dd offset	synth_16bit_shift_1_slow ; SYNTH_MACRO 0,1,0
DATA:0040A619		      dd offset	synth_16bit_shift_2_slow ; SYNTH_MACRO 0,2,0
DATA:0040A61D		      dd offset	synth_8bit_shift_0_slow	; SYNTH_MACRO 1,0,0
DATA:0040A621		      dd offset	synth_8bit_shift_1_slow	; SYNTH_MACRO 1,1,0
DATA:0040A625		      dd offset	synth_8bit_shift_2_slow	; SYNTH_MACRO 1,2,0
DATA:0040A629		      dd offset	synth_16bit_shift_0_fast ; SYNTH_MACRO 0,0,1
DATA:0040A62D		      dd offset	synth_16bit_shift_1_fast ; SYNTH_MACRO 0,1,1
DATA:0040A631		      dd offset	synth_16bit_shift_2_fast ; SYNTH_MACRO 0,2,1
DATA:0040A635		      dd offset	synth_8bit_shift_0_fast	; SYNTH_MACRO 1,0,1
DATA:0040A639		      dd offset	synth_8bit_shift_1_fast	; SYNTH_MACRO 1,1,1
DATA:0040A63D		      dd offset	synth_8bit_shift_2_fast	; SYNTH_MACRO 1,2,1
DATA:0040A641 txt_hello	      db 'nocash mp3 decoder v1.4, 2024 martin korth, press ctrl+c to quit,' ; ...
DATA:0040A641		      db ' BDS now',0Dh,0Ah,0
DATA:0040A68D txt_file	      db 'file: ',0           ; ...
DATA:0040A694 txt_file_size   db 'file size: ',0      ; ...
DATA:0040A6A0 txt_id3_size    db ', id3 size: ',0     ; ...
DATA:0040A6AD txt_tag_size    db ', tag size: ',0     ; ...
DATA:0040A6BA txt_input	      db 'input: ',0          ; ...
DATA:0040A6C2 txt_output      db 'output: ',0         ; ...
DATA:0040A6CB txt_hz	      db ' hz, ',0            ; ...
DATA:0040A6D1 txt_channels    db ' channels, ',0      ; ...
DATA:0040A6DD txt_bit	      db ' bit',0             ; ...
DATA:0040A6E2 txt_kbit_s      db ' kbit/s',0          ; ...
DATA:0040A6EA txt_not_found   db 'cannot open source file',0Dh,0Ah,0 ; ...
DATA:0040A704 txt_help	      db 'usage: mp3play input.mp3 [output.wav] [verify.pcm] [/test] [/mono' ; ...
DATA:0040A704		      db '] [/8bit] [/fast] [/half|/quarter]',0Dh,0Ah,0
DATA:0040A76A _@@txt_verify1  db 'verify max difference = ',0 ; ...
DATA:0040A783 _@@txt_verify1_at_mp3 db ' at mp3:',0   ; ...
DATA:0040A78C _@@txt_verify2  db ', average difference = ',0 ; ...
DATA:0040A7A4 txt_waveout_error1 db 0Dh,0Ah	      ;	...
DATA:0040A7A4		      db '   *** ERROR number ',0
DATA:0040A7BB txt_waveout_error2 db ' in function ',0 ; ...
DATA:0040A7C9 txt_waveout_error3 db 0Dh,0Ah	      ;	...
DATA:0040A7C9		      db '    ... bugdefect.@@@+critical\&&&-kaputt_###~F:A:I:L:U:R:E',0Dh,0Ah
DATA:0040A7C9		      db 0Dh,0Ah,0
DATA:0040A80B txt_ERROR	      db 'ERROR',0            ; ...
DATA:0040A811 txt_waveopen_failed db '  ERROR: cannot open wave output!',0Dh,0Ah,0 ; ...
DATA:0040A835 warn_errmsg_1   db 'waveOutPrepareHeader',0 ; ...
DATA:0040A84A warn_errmsg_2   db 'waveOutUnprepareHeader',0 ; ...
DATA:0040A861 warn_errmsg_3   db 'waveOutWrite',0     ; ...
DATA:0040A86E warn_errmsg_4   db 'waveOutOpen',0      ; ...
DATA:0040A87A warn_errmsg_5   db 'waveOutPause',0     ; ...
DATA:0040A887 warn_errmsg_6   db 'waveOutRestart',0   ; ...
DATA:0040A896 warn_errmsg_7   db 'waveOutReset',0     ; ...
DATA:0040A8A3 warn_errmsg_8   db 'waveOutClose',0     ; ...
DATA:0040A8B0 main_data_pool_start db 336 dup(0)      ;	...
DATA:0040AA00		      db 3760 dup(?)
DATA:0040B8B0 main_data_pool_wr_ptr dd ?	      ;	...
DATA:0040B8B4 mp3_src_data_location dd ?	      ;	...
DATA:0040B8B8 mp3_src_frame_size dd ?		      ;	...
DATA:0040B8BC mp3_src_frame_end	dd ?		      ;	...
DATA:0040B8C0 mp3_hdr_32bit_header dd ?		      ;	...
DATA:0040B8C4 mp3_hdr_flag_crc dd ?		      ;	...
DATA:0040B8C8 mp3_hdr_flag_mpeg25 dd ?		      ;	...
DATA:0040B8CC mp3_hdr_flag_padding dd ?		      ;	...
DATA:0040B8D0 mp3_sample_rate dd ?		      ;	...
DATA:0040B8D4 mp3_hdr_sample_rate_index	dd ?	      ;	...
DATA:0040B8D8 mp3_bit_rate    dd ?		      ;	...
DATA:0040B8DC mp3_src_num_channels dd ?		      ;	...
DATA:0040B8E0 mp3_output_num_channels dd ?	      ;	...
DATA:0040B8E4 mp3_output_sample_rate dd	?	      ;	...
DATA:0040B8E8 mp3_bytes_per_sample dd ?		      ;	...
DATA:0040B8EC mp3_curr_syn_index dd ?		      ;	...
DATA:0040B8F0 mp3_curr_syn_dst dd ?		      ;	...
DATA:0040B8F4 mp3_nb_frames   dd ?		      ;	...
DATA:0040B8F8 mp3_hdr_mode_val dd ?		      ;	...
DATA:0040B8FC mp3_hdr_mode_ext dd ?		      ;	...
DATA:0040B900 mp3_hdr_flag_lsf dd ?		      ;	...
DATA:0040B904		      db 0Ch dup(?)
DATA:0040B910 mp3_synth_filter_proc dd ?	      ;	...
DATA:0040B914		      db 12 dup(?)
DATA:0040B920 mp3_synth_buf   dd 2048 dup(?)	      ;	...
DATA:0040D920 mp3_synth_index dd 2 dup(?)	      ;	...
DATA:0040D928		      db 8 dup(?)
DATA:0040D930 mp3_sb_samples  dd 2304 dup(?)	      ;	...
DATA:0040D930					      ;	MP3_MAX_CHANNELS*36*SBLIMIT
DATA:0040FD30 mp3_mdct_buf    dd 1152 dup(?)	      ;	...
DATA:0040FD30					      ;	MP3_MAX_CHANNELS*SBLIMIT*18
DATA:00410F30 mp3_free_format_frame_size dd ?	      ;	...
DATA:00410F34		      align 10h
DATA:00410F40 mp3_curr_vfrac_bits db ?		      ;	...
DATA:00410F41		      align 4
DATA:00410F44 mp3_xing_id     dd ?		      ;	...
DATA:00410F48 mp3_xing_flags  dd ?		      ;	...
DATA:00410F4C mp3_xing_frames dd ?		      ;	...
DATA:00410F50 mp3_xing_filesize	dd ?		      ;	...
DATA:00410F54 mp3_xing_toc    db 64h dup( ?)	      ;	...
DATA:00410FB8 mp3_xing_vbr_scale dd ?		      ;	...
DATA:00410FBC mp3_file_size   dd ?		      ;	...
DATA:00410FC0 mp3_id3_size    dd ?		      ;	...
DATA:00410FC4 mp3_tag_size    dd ?		      ;	...
DATA:00410FC8		      align 10h
DATA:00410FD0 mp3_num_frames_decoded dd	?	      ;	...
DATA:00410FD4 mp3_total_output_size dd ?	      ;	...
DATA:00410FD8 mp3_samples_dst dd ?		      ;	...
DATA:00410FDC ;	DWORD mp3_samples_output_size
DATA:00410FDC mp3_samples_output_size dd ?	      ;	...
DATA:00410FE0 mp3_samples_dst_step dd ?		      ;	...
DATA:00410FE4		      align 10h
DATA:00410FF0 mp3_curr_channel dd ?		      ;	...
DATA:00410FF4		      align 10h
DATA:00411000 mp3_curr_granule dd ?		      ;	...
DATA:00411004		      align 10h
DATA:00411010 mp3_curr_frame  dd ?		      ;	...
DATA:00411014		      align 10h
DATA:00411020 mp3_bitstream_start dd ?		      ;	...
DATA:00411024 mp3_src_remain  dd ?		      ;	...
DATA:00411028 mp3_extra_bytes dd ?		      ;	...
DATA:0041102C mp3_main_data_begin dd ?		      ;	...
DATA:00411030 mp3_num_compress_bits dd ?	      ;	...
DATA:00411034		      align 10h
DATA:00411040 mp3_nb_granules dd ?		      ;	...
DATA:00411044		      align 10h
DATA:00411050 mp3_granules    db 9856 dup( ?)	      ;	...
DATA:004136D0 mp3_exponents   dw 576 dup(?)	      ;	...
DATA:00413B50 huff_tree_buf   db 0B800h	dup(?)	      ;	...
DATA:0041F350 mp3_band_index_long dw 288 dup(?)	      ;	...
DATA:0041F590 mp3_table_4_3_exp	db 32828 dup(?)	      ;	...
DATA:004275CC		      db 4 dup(?)	      ;	data align
DATA:004275D0 mp3_table_4_3_value dd 32828 dup(?)     ;	...
DATA:004476C0 mp3_exp_table   dd 512 dup(?)	      ;	...
DATA:00447EC0 mp3_expval_table dd 8192 dup(?)	      ;	...
DATA:0044FEC0 mp3_mdct_win    dd 288 dup(?)	      ;	...
DATA:00450340 mp3_is_table_lsf dd 512 dup(?)	      ;	...
DATA:00450B40 mp3_synth_win   dd 1024 dup(?)	      ;	...
DATA:00451B40 mp3_lsf_sf_expand_exploded_table db 8192 dup(?) ;	...
DATA:00453B40 _@@region_address0 dd ?		      ;	...
DATA:00453B44 _@@region_address1 dd ?		      ;	...
DATA:00453B48 _@@saved_sp     dd ?		      ;	...
DATA:00453B4C mp3_main_data_siz	dd ?		      ;	...
DATA:00453B50 _@@scfsi	      dd ?		      ;	...
DATA:00453B54		      db 12 dup(?)
DATA:00453B60 _@@gains	      dd 3 dup(?)	      ;	...
DATA:00453B6C		      dd ?
DATA:00453B70 _@@rle_point    dd ?		      ;	...
DATA:00453B74		      db 12 dup(?)
DATA:00453B80 _@@III	      dd ?		      ;	...
DATA:00453B84		      db 12 dup(?)
DATA:00453B90 _@@JJJ	      dd ?		      ;	...
DATA:00453B94		      db 12 dup(?)
DATA:00453BA0 _@@linbits      dd ?		      ;	...
DATA:00453BA4		      db 12 dup(?)
DATA:00453BB0 _@@vlc_table    dd ?		      ;	...
DATA:00453BB4		      db 12 dup(?)
DATA:00453BC0 _@@coarse_end   dd ?		      ;	...
DATA:00453BC4		      db 12 dup(?)
DATA:00453BD0 _@rle_point     dd ?		      ;	...
DATA:00453BD4 _@@rle_ptr      dd ?		      ;	...
DATA:00453BD8 _@@rle_val      dd ?		      ;	...
DATA:00453BDC _@@rle_val_x_40h dd ?		      ;	...
DATA:00453BE0 _@@max_bands    db 4 dup(?)	      ;	...
DATA:00453BE4 _@@max_blocks   dd ?		      ;	...
DATA:00453BE8 _@@max_pos      dd ?		      ;	...
DATA:00453BEC _@@sfb_array    db 40 dup(?)	      ;	...
DATA:00453C14 _@@is_tab	      dd ?		      ;	...
DATA:00453C18 _@@n_long_sfb   dd ?		      ;	...
DATA:00453C1C _@@n_short_sfb  dd ?		      ;	...
DATA:00453C20 _@@n_sfb	      dd ?		      ;	...
DATA:00453C24		      db 12 dup(?)
DATA:00453C30 _@@tmp	      db 2304 dup(?)	      ;	...
DATA:00453C30					      ;	max 44*3 dwords
DATA:00454530 _@@s0	      dd ?		      ;	...
DATA:00454534 _@@s2	      dd ?		      ;	...
DATA:00454538 _@@s3	      dd ?		      ;	...
DATA:0045453C _@@@tmp	      dd 18 dup(?)	      ;	...
DATA:00454584		      db 12 dup(?)
DATA:00454590 _@@tmp0	      dd ?		      ;	...
DATA:00454594 _@@tmp1	      dd ?		      ;	...
DATA:00454598 _@@tmp2	      dd ?		      ;	...
DATA:0045459C _@@tmp3	      dd ?		      ;	...
DATA:004545A0 _@@tmp4	      dd ?		      ;	...
DATA:004545A4 _@@tmp5	      dd ?		      ;	...
DATA:004545A8		      db 8 dup(?)
DATA:004545B0 mp3_out2_a0     dd ?		      ;	...
DATA:004545B4 mp3_out2_a1     dd ?		      ;	...
DATA:004545B8 mp3_out2_a2     dd ?		      ;	...
DATA:004545BC mp3_out2_b0     dd ?		      ;	...
DATA:004545C0 mp3_out2_b1     dd ?		      ;	...
DATA:004545C4 mp3_out2_b2     dd ?		      ;	...
DATA:004545C8		      dd ?
DATA:004545CC		      dd ?
DATA:004545D0 _@@@JJJ	      dd ?		      ;	...
DATA:004545D4 _@@www	      dd ?		      ;	...
DATA:004545D8 _@@mdct_long_end dd ?		      ;	...
DATA:004545DC _@@sblimit      dd ?		      ;	...
DATA:004545E0 _@@switch_point dd ?		      ;	...
DATA:004545E4		      db 12 dup(?)
DATA:004545F0 mp3_huff_tmp_bits	db 100h	dup(?)	      ;	...
DATA:004546F0 mp3_huff_tmp_codes db 200h dup(?)	      ;	...
DATA:004548F0 _@@table_nb_bits dd ?		      ;	...
DATA:004548F4 _@@nb_codes     dd ?		      ;	...
DATA:004548F8 _@@prefix_numbits	dd ?		      ;	...
DATA:004548FC _@@prefix_pattern	dd ?		      ;	...
DATA:00454900 _@@curr_table_size dd ?		      ;	...
DATA:00454904 _@@curr_table_mask dd ?		      ;	...
DATA:00454908 _@@curr_table_index dd ?		      ;	...
DATA:0045490C		      db 4 dup(?)
DATA:00454910 _@@granule_addr dd ?		      ;	...
DATA:00454914 ;	HANDLE hFile
DATA:00454914 hFile	      dd ?		      ;	...
DATA:00454918 ;	HANDLE hMap
DATA:00454918 hMap	      dd ?		      ;	...
DATA:0045491C stream_start    dd ?		      ;	...
DATA:00454920 stream_pos      dd ?		      ;	...
DATA:00454924 bytes_left      dd ?		      ;	...
DATA:00454928		      db 8 dup(?)	      ;	data align
DATA:00454930 sample_buffer   db 36864 dup(?)	      ;	...
DATA:0045D930 ;	DWORD diskresult
DATA:0045D930 diskresult      dd ?		      ;	...
DATA:0045D934 ;	HANDLE std_out
DATA:0045D934 std_out	      dd ?		      ;	...
DATA:0045D938 cmdline_buf     db 1024 dup(?)	      ;	...
DATA:0045DD38 ;	HANDLE mp3_wav_handle
DATA:0045DD38 mp3_wav_handle  dd ?		      ;	...
DATA:0045DD3C ;	HANDLE mp3_pcm_handle
DATA:0045DD3C mp3_pcm_handle  dd ?		      ;	...
DATA:0045DD40 _@@max_diff     dd ?		      ;	...
DATA:0045DD44 _@@avg_diff     dd 2 dup(?)	      ;	...
DATA:0045DD4C pcm_filepos     dd ?		      ;	...
DATA:0045DD50 _@@mono_convert dd ?		      ;	...
DATA:0045DD54 _@@pcm_steps    dw 2 dup(?)	      ;	...
DATA:0045DD58 _@@worst_pcm_filepos dd ?		      ;	...
DATA:0045DD5C _@@worst_mp3_filepos dd ?		      ;	...
DATA:0045DD60		      db 672 dup(?)
DATA:0045DD60 ends	      DATA
DATA:0045DD60
.idata:0045E000	; Section 3. (virtual address 0005E000)
.idata:0045E000	; Virtual size			: 00001000 (   4096.)
.idata:0045E000	; Section size in file		: 00000400 (   1024.)
.idata:0045E000	; Offset to raw	data for section: 00009400
.idata:0045E000	; Flags	C0000040: Data Readable	Writable
.idata:0045E000	; Alignment	: default
.idata:0045E000	; ===========================================================================
.idata:0045E000
.idata:0045E000	; Segment type:	Externs
.idata:0045E000	; _idata
.idata:0045E000
.idata:0045E001
.idata:0045E002
.idata:0045E003
...............
.idata:0045E0AE
.idata:0045E0AF
.idata:0045E0B0	;
.idata:0045E0B0	; Imports from KERNEL32.dll
.idata:0045E0B0	;
.idata:0045E0B0	; DWORD	__stdcall unk_45E0B0()
.idata:0045E0B0			extrn unk_45E0B0	; ...
.idata:0045E0B1
.idata:0045E0B2
.idata:0045E0B3
.idata:0045E0B4	; LPSTR	__stdcall unk_45E0B4()
.idata:0045E0B4			extrn unk_45E0B4	; ...
.idata:0045E0B5
.idata:0045E0B6
.idata:0045E0B7
.idata:0045E0B8	; void __stdcall unk_45E0B8(UINT uExitCode)
.idata:0045E0B8			extrn unk_45E0B8	; ...
.idata:0045E0B9
.idata:0045E0BA
.idata:0045E0BB
.idata:0045E0BC	; HANDLE __stdcall unk_45E0BC()
.idata:0045E0BC			extrn unk_45E0BC	; ...
.idata:0045E0BD
.idata:0045E0BE
.idata:0045E0BF
.idata:0045E0C0	; int __stdcall	unk_45E0C0(HANDLE hThread)
.idata:0045E0C0			extrn unk_45E0C0	; ...
.idata:0045E0C1
.idata:0045E0C2
.idata:0045E0C3
.idata:0045E0C4	; HANDLE __stdcall unk_45E0C4()
.idata:0045E0C4			extrn unk_45E0C4	; ...
.idata:0045E0C5
.idata:0045E0C6
.idata:0045E0C7
.idata:0045E0C8	; DWORD	__stdcall unk_45E0C8(HANDLE hFile, LPDWORD lpFileSizeHigh)
.idata:0045E0C8			extrn unk_45E0C8	; ...
.idata:0045E0C9
.idata:0045E0CA
.idata:0045E0CB
.idata:0045E0CC	; DWORD	__stdcall unk_45E0CC(HANDLE hProcess)
.idata:0045E0CC			extrn unk_45E0CC	; ...
.idata:0045E0CD
.idata:0045E0CE
.idata:0045E0CF
.idata:0045E0D0	; HANDLE __stdcall unk_45E0D0(LPCSTR lpFileName, DWORD dwDesiredAccess,	DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes,	HANDLE hTemplateFile)
.idata:0045E0D0			extrn unk_45E0D0	; ...
.idata:0045E0D1
.idata:0045E0D2
.idata:0045E0D3
.idata:0045E0D4	; LPVOID __stdcall unk_45E0D4(HANDLE hFileMappingObject, DWORD dwDesiredAccess,	DWORD dwFileOffsetHigh,	DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap)
.idata:0045E0D4			extrn unk_45E0D4	; ...
.idata:0045E0D5
.idata:0045E0D6
.idata:0045E0D7
.idata:0045E0D8	; HANDLE __stdcall unk_45E0D8(HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCSTR lpName)
.idata:0045E0D8			extrn unk_45E0D8	; ...
.idata:0045E0D9
.idata:0045E0DA
.idata:0045E0DB
.idata:0045E0DC	; BOOL __stdcall unk_45E0DC(HANDLE hObject)
.idata:0045E0DC			extrn unk_45E0DC	; ...
.idata:0045E0DD
.idata:0045E0DE
.idata:0045E0DF
.idata:0045E0E0	; BOOL __stdcall unk_45E0E0(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
.idata:0045E0E0			extrn unk_45E0E0	; ...
.idata:0045E0E1
.idata:0045E0E2
.idata:0045E0E3
.idata:0045E0E4	; DWORD	__stdcall unk_45E0E4(HANDLE hFile, LONG	lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
.idata:0045E0E4			extrn unk_45E0E4	; ...
.idata:0045E0E5
.idata:0045E0E6
.idata:0045E0E7
.idata:0045E0E8	; BOOL __stdcall unk_45E0E8(HANDLE hProcess, DWORD dwPriorityClass)
.idata:0045E0E8			extrn unk_45E0E8	; ...
.idata:0045E0E9
.idata:0045E0EA
.idata:0045E0EB
.idata:0045E0EC	; BOOL __stdcall unk_45E0EC(HANDLE hThread, int	nPriority)
.idata:0045E0EC			extrn unk_45E0EC	; ...
.idata:0045E0ED
.idata:0045E0EE
.idata:0045E0EF
.idata:0045E0F0	; void __stdcall unk_45E0F0(DWORD dwMilliseconds)
.idata:0045E0F0			extrn unk_45E0F0	; ...
.idata:0045E0F1
.idata:0045E0F2
.idata:0045E0F3
.idata:0045E0F4	; BOOL __stdcall unk_45E0F4(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
.idata:0045E0F4			extrn unk_45E0F4	; ...
.idata:0045E0F5
.idata:0045E0F6
.idata:0045E0F7
.idata:0045E0F8	; HANDLE __stdcall unk_45E0F8(DWORD nStdHandle)
.idata:0045E0F8			extrn unk_45E0F8	; ...
.idata:0045E0F9
.idata:0045E0FA
.idata:0045E0FB
.idata:0045E0FC
.idata:0045E0FD
.idata:0045E0FE
.idata:0045E0FF
.idata:0045E100	;
.idata:0045E100	; Imports from WINMM.dll
.idata:0045E100	;
.idata:0045E100	; MMRESULT __stdcall unk_45E100(HWAVEOUT hwo, LPWAVEHDR	pwh, UINT cbwh)
.idata:0045E100			extrn unk_45E100	; ...
.idata:0045E101
.idata:0045E102
.idata:0045E103
.idata:0045E104	; MMRESULT __stdcall unk_45E104(HWAVEOUT hwo)
.idata:0045E104			extrn unk_45E104	; ...
.idata:0045E105
.idata:0045E106
.idata:0045E107
.idata:0045E108	; MMRESULT __stdcall unk_45E108(HWAVEOUT hwo)
.idata:0045E108			extrn unk_45E108	; ...
.idata:0045E109
.idata:0045E10A
.idata:0045E10B
.idata:0045E10C	; MMRESULT __stdcall unk_45E10C(HWAVEOUT hwo, LPWAVEHDR	pwh, UINT cbwh)
.idata:0045E10C			extrn unk_45E10C	; ...
.idata:0045E10D
.idata:0045E10E
.idata:0045E10F
.idata:0045E110	; MMRESULT __stdcall unk_45E110(HWAVEOUT hwo)
.idata:0045E110			extrn unk_45E110	; ...
.idata:0045E111
.idata:0045E112
.idata:0045E113
.idata:0045E114	; MMRESULT __stdcall unk_45E114(LPHWAVEOUT phwo, UINT uDeviceID, LPCWAVEFORMATEX pwfx, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen)
.idata:0045E114			extrn unk_45E114	; ...
.idata:0045E115
.idata:0045E116
.idata:0045E117
.idata:0045E118	; MMRESULT __stdcall unk_45E118(HWAVEOUT hwo, LPWAVEHDR	pwh, UINT cbwh)
.idata:0045E118			extrn unk_45E118	; ...
.idata:0045E119
.idata:0045E11A
.idata:0045E11B
.idata:0045E11C	; MMRESULT __stdcall unk_45E11C(HWAVEOUT hwo)
.idata:0045E11C			extrn unk_45E11C	; ...
.idata:0045E11D
...............
.idata:0045EFFF
.idata:0045EFFF			end start
